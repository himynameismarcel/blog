<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on himynameismarcel</title>
    <link>/post/</link>
    <description>Recent content in Posts on himynameismarcel</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 26 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Migrating my blog from jekyll to blogdown</title>
      <link>/post/migrating-my-blog-from-jekyll-to-blogdown/</link>
      <pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/migrating-my-blog-from-jekyll-to-blogdown/</guid>
      <description>


&lt;div id=&#34;at-first-jekyll-won&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;At First Jekyll Won…&lt;/h3&gt;
&lt;p&gt;About two years ago I had decided to finally start my own blog. I knew that I wanted to use a static site generator (with its obvious advantages and easy maintainability) and so after researching for various alternatives and having narrowed it down to the choice between &lt;a href=&#34;https://blog.getpelican.com/&#34;&gt;pelican&lt;/a&gt; (written in Python) and &lt;a href=&#34;https://jekyllrb.com/&#34;&gt;jekyll&lt;/a&gt; (written in Ruby) and their easy compatibility with &lt;a href=&#34;https://pages.github.com/&#34;&gt;github (pages)&lt;/a&gt;, I ultimately decided to use &lt;a href=&#34;https://jekyllrb.com/&#34;&gt;jekyll&lt;/a&gt;. While I did have some background in html, css and javascript, I remember that it did take me a few days to finally set up my blog with jekyll. While the resources are plenty (I actually should have written a dedicated blog-post back then about how I set up my blog to remember exactly everything), I do remember that the video series on Jekyll provided by the guys from &lt;a href=&#34;https://www.youtube.com/watch?v=T1itpPvFWHI&amp;amp;list=PLLAZ4kZ9dFpOPV5C5Ay0pHaa0RJFhcmcB&#34;&gt;Giraffe Academy&lt;/a&gt; had helped me the most (in combination with various other sources, see below!). I hosted the final result on &lt;a href=&#34;https://github.com/himynameismarcel/himynameismarcel.github.io&#34;&gt;github&lt;/a&gt; which powered my final web-page at &lt;a href=&#34;https://himynameismarcel.github.io/&#34;&gt;himynameismarcel.github.io&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While I did not write a dedicated blog-post about how I’ve set up my blog two years ago, I did take a few notes in a notebook good friends of mine had given to me upon my departure from the ECB (see the below picture for the front-matter of the notebook :P).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/getshitdone.png&#34; width=&#34;250&#34;&gt;&lt;/p&gt;
&lt;p&gt;In there I found the following resources and inspirations that I’ve read two years ago, among others, before actually creating my blog (looking at the below list I remember again why it took me so long to decide which site generator-engine to use):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;various articles on &lt;a href=&#34;https://www.dataquest.io/&#34;&gt;dataquest&lt;/a&gt; (see &lt;a href=&#34;https://www.dataquest.io/blog/data-science-portfolio-project/&#34;&gt;an example for a data science portfolio project&lt;/a&gt;, &lt;a href=&#34;https://www.dataquest.io/blog/python-data-science/&#34;&gt;another example&lt;/a&gt; and &lt;a href=&#34;https://www.dataquest.io/blog/how-to-setup-a-data-science-blog/&#34;&gt;creating a blog using Pelican&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;a great article by Barry Clark on &lt;a href=&#34;https://www.smashingmagazine.com/2014/08/build-blog-jekyll-github-pages/&#34;&gt;how to create a blog with jekyll and github pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;great read by Jonathan McGlone on &lt;a href=&#34;http://jmcglone.com/guides/github-pages/&#34;&gt;How to leverage Github Pages for Jekyll&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;an article by Mat Leonard writing for udacity on &lt;a href=&#34;https://blog.udacity.com/2016/02/how-to-build-a-data-analysis-portfolio-that-will-get-you-hired.html&#34;&gt;How to Build a Data Analysis Portfolio&lt;/a&gt; using pelican.&lt;/li&gt;
&lt;li&gt;another article by Duncan Lock on &lt;a href=&#34;http://duncanlock.net/blog/2013/05/17/how-i-built-this-website-using-pelican-part-1-setup/&#34;&gt;How He has Built His Wbsite Using Pelican&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;a fantastic article by Charles Leifer on &lt;a href=&#34;https://charlesleifer.com/blog/how-to-make-a-flask-blog-in-one-hour-or-less/&#34;&gt;How to Make a flask Blog in one hour or less&lt;/a&gt;: I remember that before deciding for pelican vs. jekyll, I was determined to create my own blog following Leifer’s article utilizing flask and an SQLite-DB to log in and edit/add blog-posts. After spending quite some time with this option I ultimately (and to my own frustration) failed to get the database running (Leifer had used SQLite only for demonstration purposes on a local machine) when deploying it on a server, although I tried to leverage some knowledge from a &lt;a href=&#34;https://www.youtube.com/watch?v=XHGpPCYmPvI&#34;&gt;youtube-tutorial of Pretty Printed&lt;/a&gt; that shows how to build a blog web-app with flask and flask-SQLAlchemy.&lt;/li&gt;
&lt;li&gt;What surprised me the most was that I had apprently already stumbled over &lt;strong&gt;blogdown&lt;/strong&gt; two years ago which I did not remember at all and makes me wonder why I decided against it in the race of pelican vs. jekyll. Apparently (according to my notes) I had stumbled over &lt;a href=&#34;https://juliasilge.com/blog/&#34;&gt;Julia Silge’s blog&lt;/a&gt; where it says &lt;em&gt;Made with the R blogdown package […]&lt;/em&gt; at the page’s footer. My notes continue with a reference to &lt;a href=&#34;https://bookdown.org/yihui/blogdown/&#34;&gt;Yihui’s book on blogdown&lt;/a&gt; and and entry that says &lt;em&gt;also recommended by David Ribonson&lt;/em&gt; in paranthesis.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Fast forward, I think it was about one year later (in May 2019) when I stumbled over blogdown once again and having found the amazing &lt;a href=&#34;https://themes.gohugo.io/mainroad/&#34;&gt;Mainroad-theme&lt;/a&gt; and blogdown’s easy integration with RStudio, I was heavily thinking about migrating my blog from jekyll’s engine to blogdown. What made me take another year was (1) time and (2) the question of whether I could also easily and seamlessly leverage the blogdown-environment in combination with the RStudio IDE to also write about various other programming langugages. The answer to (2) is ‘definitely, yes!’. And now that I finally had the time I sat down for two days to make it happen. Here’s what I did.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;readingwatching-list-for-blogdown&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Reading/Watching-List for Blogdown&lt;/h3&gt;
&lt;p&gt;Due to my background in R and basic knowledge in web technologies, my transition to blogdown went rather smoothly. But independently of your background (even if you are a beginner in both R and web technologies and/or have never used Git/Github before), you should be up and running very quickly just to have enough time right after deployment to understand how everything actually works together. In his presentation (see below), the creator of blogdown (Yihui Xie) even mentions that someone with no prior experience in building websites will probably have his/her site up and running faster than someone &lt;em&gt;with&lt;/em&gt; knowledge in web technologies when it comes to customization of the templates etc. Here’s the sequence of introductory resources I used:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=CjTLN-FXiFA&#34;&gt;Introduction to Blogdown (R Package) RStudio Webinar&lt;/a&gt; from the creator of the blogdowm-package himself, &lt;a href=&#34;https://yihui.org/en/&#34;&gt;Yihui Xie&lt;/a&gt;: The video is about 2.5 years old but it is still an hour worth spent to get a quick overview of blogdown. Interestingly, Yihui himself wasn’t too happy with jekyll and explains the speed of &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;(the static site-generator built into the blogdown-package which is itself written in the &lt;a href=&#34;https://golang.org/&#34;&gt;Go-langugage&lt;/a&gt;) as one of the key-reasons to having used it as the foundation of the blogdown-package.&lt;/li&gt;
&lt;li&gt;blogdown’s e-book &lt;a href=&#34;https://bookdown.org/yihui/blogdown/&#34;&gt;blogdown: Creating Websites with RMarkdown&lt;/a&gt; by Yihui Xie, Amber Thomas and Alison Presmanes Hill: Arguably it is possible to set up the blog by just reading/skimming through Chapter 1 (Get Started) and 3 (Deployment) of this book, but I do think that the other parts (especially Chapter 2 on Hugo (the static site-generator serving under the hood in the blogdown package) is definitely worth to read to get a more fundamental understanding to start out with.&lt;/li&gt;
&lt;li&gt;As a complementary resource a great article by Martin Frigaard on Storybench about &lt;a href=&#34;https://www.storybench.org/how-to-build-a-website-with-blogdown-in-r/&#34;&gt;How to build a website with Blogdown in R&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That’s about it to have the website up and running locally in almost no time.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;tweaking-some-emerging-issues&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Tweaking Some Emerging Issues&lt;/h3&gt;
&lt;p&gt;After having finished the initial set-up, I started moving my former jekyll-posts to my new blog’s folder structure. Along the way I stumbled over the following issues for which I could find solutions online and which I want to briefly explain:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Inserting Raw &lt;code&gt;html&lt;/code&gt; into markdown files (&lt;code&gt;.md&lt;/code&gt;):&lt;/strong&gt;&lt;br /&gt;
As aptly formulated by &lt;a href=&#34;https://anaulin.org/&#34;&gt;Ana Ulin&lt;/a&gt;, the simplicity of creating new content using markdown is amazing. But sometimes, markdown is not enough and this is where integrating html-code into the markdown-file comes into play. In Hugo, when working in a &lt;code&gt;.Rmd&lt;/code&gt;-file, you can simply start writing plain &lt;code&gt;html&lt;/code&gt;-code into the &lt;code&gt;.Rmd&lt;/code&gt;-file and the Hugo-engine will render it accordingly. When using a &lt;code&gt;.md&lt;/code&gt;-file, however, I discovered that my previous posts, which would leverage this possibility, would not display the &lt;code&gt;html&lt;/code&gt;-code correctly. This issue seems to be attributable to Hugo. Ana Ulin presents the &lt;a href=&#34;https://anaulin.org/blog/hugo-raw-html-shortcode/&#34;&gt;solution on her blog&lt;/a&gt; as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Add a shortcode template to your site in &lt;code&gt;layouts/shortcodes/rawhtml.html&lt;/code&gt; with the following content:&lt;/p&gt;
&lt;pre class=&#34;html&#34;&gt;&lt;code&gt;&amp;lt;!-- raw html --&amp;gt;
{{.Inner}}&lt;/code&gt;&lt;/pre&gt;
This template tells Hugo to simply render the inner content passed to your shortcode directly into the HTML of your side.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This shortcode can then be used in the markdown content (&lt;code&gt;.md&lt;/code&gt;-file) as follows:&lt;/p&gt;
&lt;pre class=&#34;html&#34;&gt;&lt;code&gt;{{&amp;lt; rawhtml &amp;gt;}}
  &amp;lt;p class=&amp;quot;some random class&amp;quot;&amp;gt;
    This is &amp;lt;strong&amp;gt;raw HTML&amp;lt;/strong&amp;gt;, inside Markdown.
  &amp;lt;/p&amp;gt;
{{&amp;lt; /rawhtml &amp;gt;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There are subtle difference between &lt;code&gt;.Rmarkdown&lt;/code&gt;, &lt;code&gt;.Rmd&lt;/code&gt; and &lt;code&gt;.markdown&lt;/code&gt; - files which are briefly discussed in the &lt;a href=&#34;https://bookdown.org/yihui/blogdown/output-format.html&#34;&gt;blogdown-book&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Indenting code-blocks in lists:&lt;/strong&gt;&lt;br /&gt;
In lists or enumerations in jekyll, the engine would automatically indent code-blocks. To see what I’m talking about, here’s the corresponding code and output from both jekyll and hugo (blogdown):&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;jekyll&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;The below markdown-code&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/jekyll_markdown_example_input.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;automaticall gives&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/jekyll_markdown_example_output.png&#34; /&gt;&lt;br /&gt;
when rendered on the web-page with jekyll.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;hugo (blogdown)&lt;/strong&gt;:
When running the same in hugo&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/hugo_markdown_example_input.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;we get&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/hugo_markdown_example_output.jpeg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;which doesn’t look very pretty.&lt;/p&gt;
&lt;p&gt;A hint can be found &lt;a href=&#34;https://commonmark.org/help/tutorial/10-nestedLists.html&#34;&gt;here&lt;/a&gt; where it says &lt;em&gt;to nest a code block, indent by either 8 spaces or two tabs&lt;/em&gt;. By trial and error I discovered that &lt;strong&gt;three&lt;/strong&gt; tabs did the trick for me and the following code&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/hugo_markdown_example_solution.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;generates the desired output&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/hugo_markdown_example_solution2.png&#34; /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Lists and Enumerations:&lt;/strong&gt; &lt;br /&gt;
In hugo (blogdown), lists and enumerations did not render for me when simply migrating my &lt;code&gt;.markdown&lt;/code&gt;-blogposts to blogdown. The reasin was quickly found as discussed here on &lt;a href=&#34;https://stackoverflow.com/questions/55186599/bullet-lists-not-rendering-in-blogdown-rmd-file&#34;&gt;stackoverflow&lt;/a&gt;: You have to add an empty line before the list.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;How to include ‘Non-blog-files’ (like e.g. &lt;code&gt;.pdf&lt;/code&gt;-files):&lt;/strong&gt;&lt;br /&gt;
The approach is fairly similar to when using jekyll and is described &lt;a href=&#34;https://community.rstudio.com/t/is-there-a-place-we-can-put-non-blog-files-pdf-files-in-blogdown/10138/3&#34;&gt;here&lt;/a&gt;.&lt;br /&gt;
If you want to have e.g. a &lt;code&gt;.pdf&lt;/code&gt;-file to go along with the blog post, simply put it in the static directory. There you can freely choose how to organize your files and folders. I have decided to simply add a &lt;code&gt;files&lt;/code&gt;-folder under &lt;code&gt;static&lt;/code&gt;. Now when wanting to include that &lt;code&gt;.pdf&lt;/code&gt;-file into my blog-post I can simply reference it e.g. simply via &lt;code&gt;See the [handout](/files/file1.pdf) for more info.&lt;/code&gt; Note that you have to include the correct path!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Including syntax highlighting:&lt;/strong&gt;&lt;br /&gt;
The Mainroad-theme is not shipped with automatic syntax highlighting. The preferred approach to include syntax highlighting in Hugo is &lt;a href=&#34;https://highlightjs.org/&#34;&gt;highlight.js&lt;/a&gt;. &lt;a href=&#34;https://notast.netlify.app/post/adding-syntax-highlight/&#34;&gt;Benjamin C.&lt;/a&gt; gives a brilliant overview of the approaches of how to include the necessary files into your blog. Similarly it is explained in a post on &lt;a href=&#34;https://stackoverflow.com/questions/48075493/change-style-color-of-blocks-of-code-in-blogdown&#34;&gt;stackoverflow&lt;/a&gt; or on &lt;a href=&#34;https://github.com/rstudio/blogdown/issues/10&#34;&gt;github&lt;/a&gt; with comments from Yihui Xie himself.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Customizing the color-scheme and some other tweaks of the Mainroad-theme:&lt;/strong&gt;&lt;br /&gt;
Mainroad is by default shipped with a red color-theme. To switch that to a more blue-ish scheme I adjusted the color-codes in the following places:
&lt;ul&gt;
&lt;li&gt;Set &lt;code&gt;highlightColor = &amp;quot;#1756a9&amp;quot;&lt;/code&gt; in &lt;code&gt;config.toml&lt;/code&gt;. This will change the color-scheme for most of the colored text-elements&lt;/li&gt;
&lt;li&gt;In the file &lt;code&gt;style.css&lt;/code&gt; which you can find under &lt;code&gt;themes/Mainroad/static/css&lt;/code&gt; change the color-code of the &lt;code&gt;code&lt;/code&gt; - block via &lt;code&gt;color: #1756a9;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;I noticed that code-chunkgs by default come along with a huge padding-frame. To remove this behavior I out-commented the following line in &lt;code&gt;style.css&lt;/code&gt;: &lt;code&gt;/* padding: 0.1rem; */&lt;/code&gt;.&lt;br /&gt;
&lt;br /&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Support math expressions through MathJax:&lt;/strong&gt; 
Yihui Xie explains how to add the support for mathematical expressions in the &lt;a href=&#34;https://bookdown.org/yihui/blogdown/templates.html&#34;&gt;blogdown e-book&lt;/a&gt; in chapter 2.5.2. To do this, you have to add the below code to &lt;code&gt;footer.html&lt;/code&gt; which is parked in &lt;code&gt;themes/Mainroad/layouts/partials&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```raw
&amp;lt;script src=&amp;quot;//yihui.org/js/math-code.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script async
src=&amp;quot;//YOUR-CDN-LINK/MathJax.js?config=TeX-MML-AM_CHTML&amp;quot;&amp;gt;
&amp;lt;/script&amp;gt;
```&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, &lt;code&gt;YOUR-CDN-LINK&lt;/code&gt; has to be replaced with the link to your preferred CDN host of MathJax, .e.g &lt;code&gt;cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Including an RSS-feed:&lt;/strong&gt;&lt;br /&gt;
As an optional set-up you can include an RSS-feed for your blog which is a prerequisite to be on &lt;a href=&#34;https://www.r-bloggers.com/add-your-blog/&#34;&gt;r-bloggers&lt;/a&gt;. &lt;a href=&#34;https://notast.netlify.app/post/blogdown-hugo-git-github-netlify-rss-disqus/&#34;&gt;Benjaming C&lt;/a&gt; outlines how he set up the RSS-feeds (at the bottom of the blog-post). The steps are as follows:
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Create a &lt;code&gt;.xml&lt;/code&gt;-file under &lt;code&gt;themes/Mainroad/layouts/_default&lt;/code&gt;. Name the file &lt;code&gt;rss.xml&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Furnish the bank &lt;code&gt;rss.xml&lt;/code&gt;-file with &lt;a href=&#34;https://gohugo.io/templates/rss/#the-embedded-rss-xml&#34;&gt;Hugo’s embedded rss.xml code&lt;/a&gt;. You can find the RSS template at the bottom of the page. Here’s the &lt;a href=&#34;https://github.com/gohugoio/hugo/blob/master/tpl/tplimpl/embedded/templates/_default/rss.xml&#34;&gt;direct link&lt;/a&gt;. Replace summary feed script &lt;code&gt;{{ .Summary | html }}&lt;/code&gt; with full content script &lt;code&gt;{{ .Content | html }}&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Update &lt;code&gt;baseurl&lt;/code&gt; at the top of &lt;code&gt;config.toml&lt;/code&gt; with your website’s URL address.&lt;/li&gt;
&lt;li&gt;Test if your website ahs full content RSS Feeds with &lt;a href=&#34;https://validator.w3.org/feed/check.cgi&#34;&gt;https://validator.w3.org/feed/check.cgi&lt;/a&gt; or &lt;a href=&#34;https://simplepie.org/demo/&#34;&gt;https://simplepie.org/demo/&lt;/a&gt;.&lt;br /&gt;
&lt;br /&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;First Fine-Tuning of the blog:&lt;/strong&gt;&lt;br /&gt;
Having stumbled over &lt;a href=&#34;https://notast.netlify.app/&#34;&gt;Benjaming C’s blog&lt;/a&gt; which leveraged the same Mainroad-theme that I had chosen, I realized that there were a few additional tweaks to the page which I thought I had to implement myself. Turns out that I just had to read the &lt;a href=&#34;https://themes.gohugo.io/mainroad/&#34;&gt;documentation of the Mainroad-theme&lt;/a&gt; to understand that the theme is even more amazing than I thought. It comes along with the possibility to
&lt;ul&gt;
&lt;li&gt;add widgets for your social networks (linkedin, github, etc.),&lt;/li&gt;
&lt;li&gt;enable a “Read more” button for ever post’s preview on your main page,&lt;/li&gt;
&lt;li&gt;turn pagination on/off and adjust the number of posts per page,&lt;/li&gt;
&lt;li&gt;enable disqus comments by entering your Disqus shortname,&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Overall, I’m pretty impressed by the amount of options you have without having to turn the templates that come along with the Mainroad-Theme upside down.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Deployment:&lt;/strong&gt;&lt;br /&gt;
Deployment id, among others, discussed in &lt;a href=&#34;https://bookdown.org/yihui/blogdown/&#34;&gt;blogdown: Creating Websites with RMarkdown&lt;/a&gt; itself. While for jekyll the recommended solution was to use github-pages and a similar approach is also viable for blogdown, the authors recommend using &lt;a href=&#34;https://app.netlify.com&#34;&gt;Netlify&lt;/a&gt; for continuous deployment. I have made use of this option myself and was able to deploy the website (which you first have to push to your remote github repository) worked like a charm.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>APIs and Web Services: Background and an Example</title>
      <link>/post/2018-03-13-apis-and-web-services-background-and-an-example/</link>
      <pubDate>Tue, 13 Mar 2018 21:13:37 -0500</pubDate>
      
      <guid>/post/2018-03-13-apis-and-web-services-background-and-an-example/</guid>
      <description>


&lt;p&gt;About a year ago I familiarized myself with &lt;strong&gt;web-services&lt;/strong&gt; and &lt;strong&gt;APIs&lt;/strong&gt; (&lt;em&gt;Application Program(ming) Interface&lt;/em&gt;) more generally to get a better understanding of the technological background. My conclusion back then was that the terms are used in various contexts and depending on the exact context, everyone seemed to have a vague idea about what they actually mean and stand for.&lt;/p&gt;
&lt;div id=&#34;a-first-explainer-getting-some-intuition&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;A First Explainer: Getting Some Intuition&lt;/h3&gt;
&lt;p&gt;In an introductory class about web development from &lt;a href=&#34;https://www.linkedin.com/in/coltsteele/&#34;&gt;Colt Steele&lt;/a&gt; which I had attended last year, he introduces APIs at some point in the course right after having moved from front-end technologies to back-end web development as follows: &lt;em&gt;API’s are interfaces for code/computers to talk to one another.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;He goes on to clarify that the term ‘API’ is actually a &lt;em&gt;‘broader term that refers to any type of code/interface that is made for other code to be used with/to communicated with’&lt;/em&gt;. Referring to the corresponding &lt;a href=&#34;https://en.wikipedia.org/wiki/Application_programming_interface&#34;&gt;Wikipedia article&lt;/a&gt;, the definition of an API undermines the very broad/vague definition that Colt used to introduce APIs by stating that &lt;em&gt;‘[a]n application programming interface (API) is a set of routines, protocols, and tools for building software and applications.’&lt;/em&gt; Hence, the term API comprises anything ranging from libraries, packages, modules to databases, web-APIs, etc.&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;div id=&#34;commonly-referred-to-as-apis-today-web-apis&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Commonly referred to as APIs today: web APIs&lt;/h4&gt;
&lt;p&gt;But what people nowadays typically mean they refer to APIs are &lt;strong&gt;web (application) APIs&lt;/strong&gt;, which are, strictly speaking, only a subset of the much broader definition of APIs from above. It is only that web APIs have become so prevalent and common, that when people refer to an API they usually actually are referring to a &lt;strong&gt;web API&lt;/strong&gt;, meaning any sort of generic interface to an application via the web.&lt;/p&gt;
&lt;p&gt;Today a classical example where web APIs are exploited extensively are all kinds of travel search engines like Trivago, Expedia, Checkfelix, etc., that aggregate information from a number of other services via the corresponding web APIs and thereby make the respective data of the services whose web APIs they are consuming available on their platforms for customers to e.g., compare prices.&lt;/p&gt;
&lt;p&gt;The above example already makes clear, that the way that applications get data from web APIs or access its interface is through the internet (or more precisely, via &lt;a href=&#34;https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol&#34;&gt;HTTP&lt;/a&gt;, the ‘Hypertext Transfer Protocol’ which is &lt;em&gt;the&lt;/em&gt; foundation of data communication for the modern world wide web and functions as a request-response protocol in the client-server computing model).&lt;/p&gt;
&lt;p&gt;Today almost all major (internet)-giants like &lt;a href=&#34;https://www.programmableweb.com/api/twitter&#34;&gt;Twitter&lt;/a&gt;, &lt;a href=&#34;https://www.programmableweb.com/api/facebook&#34;&gt;Facebook&lt;/a&gt;, &lt;a href=&#34;https://console.developers.google.com/apis/dashboard&#34;&gt;Google&lt;/a&gt; (in their developers section; their most popular/interesting API being their Maps API), &lt;a href=&#34;https://www.programmableweb.com/search/ebay&#34;&gt;eBay&lt;/a&gt;, &lt;a href=&#34;https://www.programmableweb.com/search/yahoo&#34;&gt;Yahoo&lt;/a&gt;, &lt;a href=&#34;https://www.programmableweb.com/category/all/apis?keyword=amazon&#34;&gt;Amazon&lt;/a&gt;, etc. actively maintain dozens of various web-APIs that are all designed for specific purposes and audiences and have become part of these companies’ standard product range/deliverables.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;two-examples-reddits-api-and-yahoo-weather&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Two Examples: Reddit’s API and Yahoo Weather&lt;/h4&gt;
&lt;p&gt;As an example and to distinguish a web API from a &lt;em&gt;normal&lt;/em&gt; human-readable website, Colt refers to &lt;a href=&#34;https://www.reddit.com/r/aww&#34;&gt;reddit.com/r/aww&lt;/a&gt; which represents a subreddit for cute photos in a human-readable format (which our browser appropriately renders for us to have a look at). In other words, the underlying data (of content in the route ‘/r/aww’) is embedded in HTML-structure of the page which we get back rendered when making an HTTP request to &lt;a href=&#34;https://www.reddit.com/r/aww&#34;&gt;reddit.com/r/aww&lt;/a&gt;. But there is also the corresponding web API-version for &lt;em&gt;code&lt;/em&gt; to interact with of exactly this ‘aww’ subreddit available under &lt;a href=&#34;https://www.reddit.com/r/aww.json&#34;&gt;reddit.com/r/aww.json&lt;/a&gt; that strips away all the extra-clutter that comes along with the data (HTML, etc.).&lt;a href=&#34;#fn2&#34; class=&#34;footnote-ref&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; The base-bone data in &lt;a href=&#34;https://en.wikipedia.org/wiki/JSON&#34;&gt;JSON&lt;/a&gt; (Javascript Object Notation) format is easier for computers/code/applications to handle as compared to the human-readable version from before. Together with another very popular output-format called &lt;a href=&#34;https://en.wikipedia.org/wiki/XML&#34;&gt;XML&lt;/a&gt; (eXtensible Markup Language), ‘JSON’ are the standard output-formats of HTTP requests to web APIs (so web APIs respond with data directly).&lt;/p&gt;
&lt;p&gt;Another simple example is the &lt;a href=&#34;https://developer.yahoo.com/weather/&#34;&gt;Yahoo Weather API&lt;/a&gt; which allows to easily toggle between JSON and XML - responses and, e.g., refers you to the following end-point (URL) for a request for the sunset time in Hawaii in JSON - format (as an arbitrary example): &lt;a href=&#34;https://query.yahooapis.com/v1/public/yql?q=select%20astronomy.sunset%20from%20weather.forecast%20where%20woeid%20in%20(select%20woeid%20from%20geo.places(1)%20where%20text%3D%22maui%2C%20hi%22)&amp;amp;format=json&amp;amp;env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys&#34;&gt;Endpoint Sunset time Hawaii&lt;/a&gt;. The data that should be displayed in JSON-format is the following:&lt;/p&gt;
&lt;pre class=&#34;json&#34;&gt;&lt;code&gt;{
  query: {
    count: 1,
    created: &amp;quot;2018-03-23T21:26:22Z&amp;quot;,
    lang: &amp;quot;de-DE&amp;quot;,
    results: {
      channel: {
        astronomy: {
          sunset: &amp;quot;6:37 pm&amp;quot;
        }
      }
    }
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The corresponding output in XML-format would look as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;query xmlns:yahoo=&amp;quot;http://www.yahooapis.com/v1/base.rng&amp;quot; yahoo:count=&amp;quot;1&amp;quot; yahoo:created=&amp;quot;2018-03-23T21:28:07Z&amp;quot; yahoo:lang=&amp;quot;de-DE&amp;quot;&amp;gt;
  &amp;lt;results&amp;gt;
    &amp;lt;channel&amp;gt;
      &amp;lt;yweather:astronomy xmlns:yweather=&amp;quot;http://xml.weather.yahoo.com/ns/rss/1.0&amp;quot; sunset=&amp;quot;6:37 pm&amp;quot;/&amp;gt;
    &amp;lt;/channel&amp;gt;
  &amp;lt;/results&amp;gt;
&amp;lt;/query&amp;gt;
&amp;lt;!--  total: 18  --&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;advantage-of-json-and-xml---formats&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Advantage of JSON and XML - formats&lt;/h4&gt;
&lt;p&gt;What makes the ‘raw’ data format returned from web APIs so attractive is that the response can, e.g., seamlessly be integrated into your own application/program. In such a scenario the HTTP-request to a certain endpoint of a web-API would therefore not be made via a browser but e.g., from within a program’s code (using certain packages that support HTTP-requests like &lt;em&gt;urllib&lt;/em&gt; or &lt;em&gt;httplib&lt;/em&gt; in Python, &lt;em&gt;httr&lt;/em&gt; in R or &lt;em&gt;request&lt;/em&gt; in NodeJS). Beyond that, there is also the possibility to fire HTTP-requests via the command-line using a tool called &lt;code&gt;curl&lt;/code&gt; which ships with Macs by default but has to be installed on Windows machines. The bottom line is: browsers are not the only tools that can be used to make HTTP-requests to certain URLs (end-points).&lt;a href=&#34;#fn3&#34; class=&#34;footnote-ref&#34; id=&#34;fnref3&#34;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;web-api-vs.-regular-websites&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Web API vs. ‘regular websites’&lt;/h4&gt;
&lt;p&gt;After all of the above, we could be confused and think that &lt;em&gt;regular&lt;/em&gt; websites and web APIs are two completely different technologies &lt;em&gt;or&lt;/em&gt; we could concentrate on the similarities (i.e., the fact that they use the same HTTP protocol to fetch for data) and think that they are actually practically the same. Truth is, the difference between the two is actually negligible. What makes APIs stand out are the already discussed format they send data back (JSON or XML instead of HTML) and an accompanied syntax (usually explained in a dedicated documentation) that has to be used in order to retrieve/locate certain end-points according to one’s own needs.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;useful-websites&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Useful Websites&lt;/h4&gt;
&lt;p&gt;As an interesting (not so say funny) application of such web APIs, in his web-development class Colt mentions &lt;a href=&#34;https://ifttt.com/recipes&#34;&gt;ifttt.com/recipes&lt;/a&gt; which is a service that enables you to make apps and devices to work together by exploiting the connection/concatenation of web APIs (that are supported on this platform).&lt;/p&gt;
&lt;p&gt;Further, a great place that collects a comprehensive list of available web APIs (i.e., kind of like an API directory) is &lt;a href=&#34;https://programmableweb.com&#34;&gt;programmableweb.com&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;a-second-explainer&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;A Second Explainer&lt;/h3&gt;
&lt;p&gt;In his book &lt;a href=&#34;http://shop.oreilly.com/product/0636920034391.do&#34;&gt;&lt;em&gt;Web Scraping with Python (2015)&lt;/em&gt;&lt;/a&gt;&lt;a href=&#34;#fn4&#34; class=&#34;footnote-ref&#34; id=&#34;fnref4&#34;&gt;&lt;sup&gt;4&lt;/sup&gt;&lt;/a&gt; which I recently read through some of the chapters, Ryan Mitchell introduces generic APIs as &lt;em&gt;‘[…] convenient interfaces between multiple disparate applications […]’&lt;/em&gt; and that &lt;em&gt;‘[…] APIs are designed to serve as a lingua franca between different pieces of software that need to share information with each other’ (p. 49)&lt;/em&gt;. Without going into much detail about &lt;em&gt;what&lt;/em&gt; exactly is meant with this definition for a layman, &lt;em&gt;web (application) APIs&lt;/em&gt; are introduced as what has been commonly understood in recent times when people refer to ‘APIs’ (exactly like we discussed in our first explainer above).&lt;/p&gt;
&lt;p&gt;Mitchell goes on and lists a few simple &lt;em&gt;ground rules&lt;/em&gt; that are common to almost all web APIs:
* &lt;strong&gt;Methods:&lt;/strong&gt;
Information is requested via HTTP - requests whereby the four most commonly used ‘verbs’ are &lt;code&gt;GET, POST, PUT, DELETE&lt;/code&gt;.
* &lt;strong&gt;Authentication:&lt;/strong&gt;
While there are many free API services, there are also many proprietary APIs that require some type of authentication before they can be used (e.g., Twitter).
* &lt;strong&gt;Responses:&lt;/strong&gt;
The most common types of response formatting are XML and JSON whereby in recent years JSON has become more and more popular. This can generally be attributed to (1) JSON files being generally smaller than their corresponding XML - counterparts and (2) that many backend frameworks used in web development nowadays use Javascript which natively integrates better with JSON - data.&lt;/p&gt;
&lt;p&gt;Two must-reads that Mitchell refers to to get a more or less complete overview of both the theory and practice of modern APIs are &lt;a href=&#34;http://shop.oreilly.com/product/0636920028468.do&#34;&gt;&lt;em&gt;RESTful Web APIs (2013)&lt;/em&gt;&lt;/a&gt; by Richardson, Ruby and Amundsen as well as as video series on &lt;a href=&#34;http://shop.oreilly.com/product/110000125.do&#34;&gt;&lt;em&gt;Designing APIs for the Web&lt;/em&gt;&lt;/a&gt; by Amundsen.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;a-third-explainer-and-building-your-own-web-api&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;A Third Explainer and Building Your Own Web-API&lt;/h3&gt;
&lt;p&gt;My third encounter with APIs was in Miguel Grinberg’s book &lt;a href=&#34;http://shop.oreilly.com/product/0636920031116.do&#34;&gt;&lt;em&gt;Flask Web Development&lt;/em&gt;&lt;/a&gt; where he introduces APIs by mentioning that in recent years &lt;em&gt;‘there has been a trend in web applications to move more and more of the business logic to the client side, producing an architectural style that is known as Rich Internet Applications (RIA). In RIAs, the server’s main (and sometimes only) function is to provide client application with data retrieval and storage services.’ (p. 175)&lt;/em&gt; It is exactly in this setting that the server’s purposes reduces to becoming a &lt;em&gt;web service&lt;/em&gt; or &lt;em&gt;Application Programming Interface (API)&lt;/em&gt;&lt;a href=&#34;#fn5&#34; class=&#34;footnote-ref&#34; id=&#34;fnref5&#34;&gt;&lt;sup&gt;5&lt;/sup&gt;&lt;/a&gt;.
That is, Grinberg uses the terms &lt;em&gt;(web) APIs&lt;/em&gt; and &lt;em&gt;web service&lt;/em&gt; interchangeably.&lt;/p&gt;
&lt;p&gt;Mentioning the RPC (Remote Procedure Call) and SOAP (Simplified Object Access Protocols) that were the popular choices by which RIAs would communicate with a web service in the past years, Grinberg’s focus then shifts fully on the more recently emerged REST (Representational State Transfer) architecture for web services by exploiting and being built on the most powerful distributed computing system that we all know: the World Wide Web.&lt;/p&gt;
&lt;p&gt;Referring to &lt;a href=&#34;http://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm&#34;&gt;Roy Fielding’s dissertation&lt;/a&gt; which introduces the REST architecture for web services, Grinberg lists the six defining characteristics that make a web service RESTful:
* &lt;em&gt;Client-Server&lt;/em&gt;: There must be a clear separation between the client and the server.
* &lt;em&gt;Stateless&lt;/em&gt;: A client request must contain all the information that is necessary to carry out the request. The server must not store any state about the client that persists from one request to the next.
* &lt;em&gt;Cache&lt;/em&gt;: Responses from the server can be labeled as cacheable or non-cacheable so that clients (or intermediaries between clients and servers) can use a cache for optimization purposes.
* &lt;em&gt;Uniform Interface&lt;/em&gt;: The protocol by which clients access server resources must be consistent, well defined, and standardized. Hence, the commonly used uniform interface of REST web services is the HTTP protocol.
* &lt;em&gt;Layered System&lt;/em&gt;: Proxy servers, caches, or gateways can be inserted between clients and servers as necessary to improve performance, reliability, and scalability.
* &lt;em&gt;Code-on-Demand&lt;/em&gt;: Clients can optionally download code from the server to execute in their context.&lt;/p&gt;
&lt;p&gt;Before showing the reading how to actually build a web API, Grinberg mentions three additional concepts:
* &lt;strong&gt;Resources Are Everything:&lt;/strong&gt; &lt;em&gt;Resources&lt;/em&gt; are considered the core to the REST architectural style which are nothing else then items of interest in the domain of the application (if you, e.g., consider a blogging application then &lt;em&gt;resources&lt;/em&gt; would be users, blog posts, comments, etc.).&lt;br&gt;
Thereby each resource must have a unique URL by which it is represented (staying with the blogging example, a blog post could be represented by the URL &lt;code&gt;/api/posts/123345&lt;/code&gt; where &lt;code&gt;12345&lt;/code&gt; is a unique identifier for a post such as the post’s database primary key).&lt;br&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Request Methods:&lt;/strong&gt; While client applications send requests to a server using the corresponding URL, the request &lt;em&gt;method&lt;/em&gt; indicates the desired operation. And because REST APIs use the HTTP-protocol that we are so well aware of, the respective HTTP-verbs are being exploited (i.e., the above mentioned &lt;code&gt;GET, POST, PUT, DELETE&lt;/code&gt; to name only the most frequently used). Thereby the REST architecture does not require that all methods be implemented for a resource. An un-implemented request method would result in the client receiving a 405 status code as a response.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Request and Response Bodies:&lt;/strong&gt;
Resources are sent back and forth between client and server in the bodies of requests and responses, but REST does not specify the format to use to encode resources. As already mentioned multiple times, the two formats commonly used with RESTful web services are JSON and XML whereby for web-based RIAS, JSON is more attractive/userful because of its usefulness in the context of Javascript.
An additional interesting aspect mentioned by Grinberg is that in a well-designed RESTful API, the client just knows a short list of top-level resource URLs and then discovers the rest from links included in the response, similar to how we can discover new web pages by simply browsing the Web by clicking on links that we stumble upon.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;building-a-web-api&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Building a Web-API&lt;/h3&gt;
&lt;p&gt;While in his book &lt;a href=&#34;http://shop.oreilly.com/product/0636920031116.do&#34;&gt;&lt;em&gt;Flask Web Development&lt;/em&gt;&lt;/a&gt;, Grinberg guides the reader through the process of exposing the already implemented blogging platform by using the familiar &lt;code&gt;route()&lt;/code&gt; decorator along with its &lt;code&gt;methods&lt;/code&gt; argument to declare the routes that would handle the resource URLs exposed by the web service, in another &lt;a href=&#34;https://blog.miguelgrinberg.com/post/designing-a-restful-api-with-python-and-flask/page/0#comments&#34;&gt;blog post&lt;/a&gt; Grinberg goes through a very simple ad-hoc example of how to easily create a web service that would adhere to the REST architecture by means of just a few lines of code.&lt;/p&gt;
&lt;p&gt;The below example does not claim to be a complete tutorial of how to create a full-fledged RESTful API and is not backed by a proper database. It simply outlines some design aspects which in the case of a web service that adheres to the REST guidelines simply becomes an exercise in identifying the resources that will be exposed and how they will be affected by the different request methods.&lt;/p&gt;
&lt;p&gt;The example that Gringberg outlines is a simple ‘To Do List’ application whereby the only resource that will be exposed by this service are &lt;em&gt;tasks&lt;/em&gt;. This tasks resource will use HTTP methods as follows:&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;
HTTP Method
&lt;/th&gt;
&lt;th&gt;
URI
&lt;/th&gt;
&lt;th&gt;
Action
&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
GET
&lt;/td&gt;
&lt;td&gt;
&lt;a href=&#34;http://%5Bhostname%5D/todo/api/v1.0/tasks&#34; class=&#34;uri&#34;&gt;http://[hostname]/todo/api/v1.0/tasks&lt;/a&gt;
&lt;/td&gt;
&lt;td&gt;
Retrieve list of tasks
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
GET
&lt;/td&gt;
&lt;td&gt;
&lt;a href=&#34;http://%5Bhostname%5D/todo/api/v1.0/tasks/%5Btask_id%5D&#34; class=&#34;uri&#34;&gt;http://[hostname]/todo/api/v1.0/tasks/[task_id]&lt;/a&gt;
&lt;/td&gt;
&lt;td&gt;
Retrieve a task
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
POST
&lt;/td&gt;
&lt;td&gt;
&lt;a href=&#34;http://%5Bhostname%5D/todo/api/v1.0/tasks&#34; class=&#34;uri&#34;&gt;http://[hostname]/todo/api/v1.0/tasks&lt;/a&gt;
&lt;/td&gt;
&lt;td&gt;
Create a new task
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
DELETE
&lt;/td&gt;
&lt;td&gt;
&lt;a href=&#34;http://%5Bhostname%5D/todo/api/v1.0/tasks/%5Btask_id%5D&#34; class=&#34;uri&#34;&gt;http://[hostname]/todo/api/v1.0/tasks/[task_id]&lt;/a&gt;
&lt;/td&gt;
&lt;td&gt;
Delete a task
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;In addition, a task as defined as having the following fields:
* &lt;strong&gt;id:&lt;/strong&gt; unique identifier for tasks (numeric)
* &lt;strong&gt;title:&lt;/strong&gt; short description of task (string)
* &lt;strong&gt;description:&lt;/strong&gt; long task description (text)
* &lt;strong&gt;done:&lt;/strong&gt; state of task completion (boolean)&lt;/p&gt;
&lt;p&gt;Assuming that you have had a basic exposure to Python including the powerful Flask web development framework and working with virtual environments, switch to your command-line and run the following commands that create a root directory &lt;code&gt;createRESTfulAPI&lt;/code&gt;, create a virtual environment within that root directory, activate that virtual environment, install flask using &lt;code&gt;pip&lt;/code&gt; and create an additional folder &lt;code&gt;app&lt;/code&gt; which will hold our application:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mkdir createRESTfulAPI
$ cd createRESTfulAPI
$ virtualenv virtual
New python executable in ...............................
Also creating executable in ............................
Installing setuptools, pip, wheel...done.
$ source virtual/bin/activate
$ pip install flask
$ mkdir app
$ cd app&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Having installed flask, a simple web application can be created by just a few lines of code which we will put in a file called &lt;code&gt;app.py&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;from flask import Flask

app = Flask(__name__)

@app.route(&amp;#39;/&amp;#39;)
def index():
    return &amp;quot;Hello, World!&amp;quot;

if __name__ == &amp;#39;__main__&amp;#39;:
    app.run(debug=True)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let us briefly disentangle what all of the above code is actually doing (for a more comprehensive review of the basics to get started with flask, see the &lt;a href=&#34;http://flask.pocoo.org/docs/0.12/quickstart/&#34;&gt;quickstart manual&lt;/a&gt;) (note that for the below it helps at least to have an intuition about Object-Oriented Programming (OOP) in Python):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;from flask import Flask&lt;/code&gt; imports the &lt;code&gt;Flask&lt;/code&gt; class; an instance of this class will be our &lt;a href=&#34;https://en.wikipedia.org/wiki/Web_Server_Gateway_Interface&#34;&gt;WSGI&lt;/a&gt; application&lt;/li&gt;
&lt;li&gt;then we create an instance of this class with &lt;code&gt;app = Flask(__name__)&lt;/code&gt; whereby the first argument is the name of the application’s module or package. If we are using a single module (as in this example), we should use &lt;code&gt;__name__&lt;/code&gt; because depending on if it’s started as application or imported as module the name will be different (&lt;code&gt;__main__&lt;/code&gt; versus the actual import name)&lt;/li&gt;
&lt;li&gt;then we use the &lt;code&gt;route()&lt;/code&gt; decorator in &lt;code&gt;@app.route(&#39;/&#39;)&lt;/code&gt; to tell Flask what URL should trigger our function&lt;/li&gt;
&lt;li&gt;the function is given a name which is also used to generate URLs for that particular function and then returns the message we want to display in the user’s browser&lt;/li&gt;
&lt;li&gt;with the line &lt;code&gt;if __name__ == &#39;__main__&#39;: app.run(debug=True)&lt;/code&gt;, we start the debugger when starting the application&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now, to run this application, simply execute &lt;code&gt;python3 app.py&lt;/code&gt; in your command-line, switch to your web-browser and type &lt;code&gt;http://localhost:5000&lt;/code&gt; to see your application already in action (note that in my case I have to execute &lt;code&gt;python3&lt;/code&gt; because for my system &lt;code&gt;python&lt;/code&gt; is assigned to python 2; in your case simply running &lt;code&gt;python&lt;/code&gt; might run already python3).&lt;a href=&#34;#fn6&#34; class=&#34;footnote-ref&#34; id=&#34;fnref6&#34;&gt;&lt;sup&gt;6&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As mentioned above, the proper way to install our web service would be to have it backed by a proper database. But because the tutorial is not about databases, Miguel continues the implementation of the web service by means of a simple memory structure (which will only work if the web server that runs the application in the end is single process and single threaded which is okay for Flask’s own development server but would not be recommended for a real production web server).&lt;/p&gt;
&lt;p&gt;To implement the first entry point of our web service, we update the above flask - application by removing the &lt;code&gt;index&lt;/code&gt; entry point, adding a list of dictionaries called &lt;code&gt;tasks&lt;/code&gt; which contains the four fields which we have defined above and correspondingly create the ‘route’ (the entry-point) from which all the tasks are retrievable via a &lt;code&gt;GET&lt;/code&gt; request:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;from flask import Flask, jsonify

app = Flask(__name__)

tasks = [
    {
        &amp;#39;id&amp;#39;: 1,
        &amp;#39;title&amp;#39;: u&amp;#39;Buy groceries&amp;#39;,
        &amp;#39;description&amp;#39;: u&amp;#39;Milk, Cheese, Pizza, Fruit, Tylenol&amp;#39;,
        &amp;#39;done&amp;#39;: False
    },
    {
        &amp;#39;id&amp;#39;: 2,
        &amp;#39;title&amp;#39;: u&amp;#39;Learn Python&amp;#39;,
        &amp;#39;description&amp;#39;: u&amp;#39;Need to find a good Python tutorial on the web&amp;#39;,
        &amp;#39;done&amp;#39;: False
    }
]

@app.route(&amp;#39;/todo/api/v1.0/tasks&amp;#39;, methods=[&amp;#39;GET&amp;#39;])
def get_tasks():
    return jsonify({&amp;#39;tasks&amp;#39;: tasks})

if __name__ == &amp;#39;__main__&amp;#39;:
    app.run(debug=True)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The implemented &lt;code&gt;get_tasks&lt;/code&gt; function is associated with the implemented URI &lt;code&gt;/todo/api/v1.0/tasks&lt;/code&gt; and responds with our &lt;code&gt;tasks&lt;/code&gt; data in JSON format (note the import of &lt;code&gt;jsonify&lt;/code&gt; from flask in the header of our script and the line &lt;code&gt;return jsonify({&#39;tasks&#39;: tasks})&lt;/code&gt; that transforms the list of dictionaries into a JSON structure.)&lt;/p&gt;
&lt;p&gt;By running the application on a local server (for this again type &lt;code&gt;python3 app.py&lt;/code&gt; into your command-line&lt;a href=&#34;#fn7&#34; class=&#34;footnote-ref&#34; id=&#34;fnref7&#34;&gt;&lt;sup&gt;7&lt;/sup&gt;&lt;/a&gt;) and typing &lt;code&gt;http://localhost:5000/todo/api/v1.0/tasks&lt;/code&gt; into your browser should show you the following JSON output:&lt;/p&gt;
&lt;pre class=&#34;javascript&#34;&gt;&lt;code&gt;{
  tasks: [
    {
      description: &amp;quot;Milk, Cheese, Pizza, Fruit, Tylenol&amp;quot;,
      done: false,
      &amp;quot;id&amp;quot;: 1,
      title: &amp;quot;Buy groceries&amp;quot;
    },
    {
      description: &amp;quot;Need to find a good Python tutorial on the web&amp;quot;,
      done: false,
      &amp;quot;id&amp;quot;: 2,
      title: &amp;quot;Learn Python&amp;quot;
    }
  ]
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Above we have already discussed that web browsers are not the only means to issue HTTP - requests. Similarly, here we actually want to either use the &lt;a href=&#34;https://curl.haxx.se/&#34;&gt;&lt;code&gt;curl&lt;/code&gt;&lt;/a&gt; - command to issue the HTTP GET - request from the command-line or use a tool like &lt;a href=&#34;https://www.getpostman.com/&#34;&gt;Postman&lt;/a&gt; which is specifically designed for API development.&lt;/p&gt;
&lt;p&gt;If we try to access your end-point with the &lt;code&gt;curl&lt;/code&gt; - command via the command line, your output should like similar to the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ curl -i http://localhost:5000/todo/api/v1.0/tasks
HTTP/1.0 200 OK
Content-Type: application/json
Content-Length: 294
Server: Werkzeug/0.14.1 Python/3.6.4
Date: Sat, 24 Mar 2018 14:46:55 GMT

{
  &amp;quot;tasks&amp;quot;: [
    {
      &amp;quot;description&amp;quot;: &amp;quot;Milk, Cheese, Pizza, Fruit, Tylenol&amp;quot;,
      &amp;quot;done&amp;quot;: false,
      &amp;quot;id&amp;quot;: 1,
      &amp;quot;title&amp;quot;: &amp;quot;Buy groceries&amp;quot;
    },
    {
      &amp;quot;description&amp;quot;: &amp;quot;Need to find a good Python tutorial on the web&amp;quot;,
      &amp;quot;done&amp;quot;: false,
      &amp;quot;id&amp;quot;: 2,
      &amp;quot;title&amp;quot;: &amp;quot;Learn Python&amp;quot;
    }
  ]
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Voila - we just accessed the first end-point of our web service! Note that the part &lt;code&gt;-i&lt;/code&gt; (which is called a ‘flag’, ‘option’, ‘argument’ or ‘parameter’ in command line jargon) stands for &lt;code&gt;--include&lt;/code&gt; and makes the HTTP response to include the header in the output (the header can include things like server name, cookies, date of the document, etc.). For an comprehensive overview of available options for the &lt;code&gt;curl&lt;/code&gt; tool refer to the following &lt;a href=&#34;https://curl.haxx.se/docs/manpage.html&#34;&gt;website&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When ran through Postman, the response looks exactly the same:
&lt;br&gt;
&lt;img src=&#34;/img/Postman1.png&#34; /&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Next, we turn to extending our web service by adding an additional &lt;code&gt;GET&lt;/code&gt; method for our tasks resource that will be used to return the data of a single task. For the corresponding &lt;code&gt;get_task()&lt;/code&gt; - function which is associated with the URI &lt;code&gt;/todo/api/v1.0/tasks/&amp;lt;int:task_id&amp;gt;&lt;/code&gt;, we add an additional check to see if the &lt;code&gt;id&lt;/code&gt; that we are handing over the HTTP request actually exists in our database (for this we have to import the &lt;code&gt;abort&lt;/code&gt; object of the flask library ). The corresponding code looks as follows:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;from flask import abort

@app.route(&amp;#39;/todo/api/v1.0/tasks/&amp;lt;int:task_id&amp;gt;&amp;#39;, methods=[&amp;#39;GET&amp;#39;])
def get_task(task_id):
    task = [task for task in tasks if task[&amp;#39;id&amp;#39;] == task_id]
    if len(task) == 0:
        abort(404)
    return jsonify({&amp;#39;task&amp;#39;: task[0]})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let us briefly disentangle the code and take a closer look in particular at the part &lt;code&gt;task = [task for task in tasks if task[&#39;id&#39;] == task_id]&lt;/code&gt;. The concept being applied here is a so-called &lt;em&gt;list comprehension&lt;/em&gt;. List comprehensions are a very concise way to produce lists in python which can be very intuitive once you get the hang of them but can be a bit intimidating at the beginning. What proves especially useful is to rewrite a list comprehension as a for loop or a &lt;em&gt;lambda function&lt;/em&gt; (which is another way to create lists in Python which we, however, will not investigate any further).&lt;/p&gt;
&lt;p&gt;To briefly recap: Lists are one of the four built-in data structures in Python (besides tuples, dictionaries and sets). Like in R is a compound data type, meaning that the values stored in the list don’t need to be of the same type. They are simply an ordered collection of items or objects which can be iterated. &lt;br&gt;
The single best way to think about list comprehensions is to think of how we describe sets, tuples or vectors in Math:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;S = {x^2: x in {0 ... 9}}
V = (2^x: x in {0, ..., 12})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In Python, list comprehensions are constructed as follows: &lt;code&gt;list_variable = [x for x in iterable]&lt;/code&gt;. The direct translation of this into the above examples of the sets &lt;code&gt;S&lt;/code&gt;and &lt;code&gt;V&lt;/code&gt; would mean:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;S = [x**2 for x in range(10)]
S
[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]

V = [2**i for i in range(13)]
V
[1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We see that the syntax of list comprehensions in Python is very similar to the mathematical defintions of the sets we have described above. Overall, list comprehensions are very powerful because they can be a complete substitue to for loops, lambda functions and the functions &lt;code&gt;map()&lt;/code&gt;, &lt;code&gt;filter()&lt;/code&gt;and &lt;code&gt;reduce()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now, if we want we can even add conditionals to the list comprehensions. If, e.g., in the set &lt;code&gt;S&lt;/code&gt; from above we would only like to get even numbers, we could write:&lt;/p&gt;
&lt;pre class=&#34;pthon&#34;&gt;&lt;code&gt;S = [x**2 for x in range(10) if x%2==0]
S
[0, 4, 16, 36, 64]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Coming back to our implementation of the new route, we see that we get the id of the task in the URL which is then handed over as the argument &lt;code&gt;task_id&lt;/code&gt; to the route’s associated function &lt;code&gt;get_task(task_id)&lt;/code&gt; (not to be confused with &lt;code&gt;get_tasks()&lt;/code&gt; from our first route from above). With the argument &lt;code&gt;task_id&lt;/code&gt; we search in our &lt;code&gt;tasks&lt;/code&gt; array and if the id in our request does not exist in our in memory database (i.e., &lt;code&gt;len(task) == 0&lt;/code&gt;), we return error code 404 which, according to the HTTP specification, stands for “Resource Not Found”. If, on the other hand, we find a corresponding task in our database, we again package it as JSON using &lt;code&gt;jsonify&lt;/code&gt; and send it as a response. Start the local server again via &lt;code&gt;python3 app.py&lt;/code&gt; and switch to the command-line to execute an HTTP request using &lt;code&gt;curl&lt;/code&gt; as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ curl -i http://localhost:5000/todo/api/v1.0/tasks/2
HTTP/1.0 200 OK
Content-Type: application/json
Content-Length: 152
Server: Werkzeug/0.14.1 Python/3.6.4
Date: Sat, 24 Mar 2018 22:05:30 GMT

{
  &amp;quot;task&amp;quot;: {
    &amp;quot;description&amp;quot;: &amp;quot;Need to find a good Python tutorial on the web&amp;quot;,
    &amp;quot;done&amp;quot;: false,
    &amp;quot;id&amp;quot;: 2,
    &amp;quot;title&amp;quot;: &amp;quot;Learn Python&amp;quot;
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Requesting a non-existent tasks give us the following response:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ curl -i http://localhost:5000/todo/api/v1.0/tasks/3
HTTP/1.0 404 NOT FOUND
Content-Type: text/html
Content-Length: 233
Server: Werkzeug/0.14.1 Python/3.6.4
Date: Sat, 24 Mar 2018 22:07:55 GMT

&amp;lt;!DOCTYPE HTML PUBLIC &amp;quot;-//W3C//DTD HTML 3.2 Final//EN&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;404 Not Found&amp;lt;/title&amp;gt;
&amp;lt;h1&amp;gt;Not Found&amp;lt;/h1&amp;gt;
&amp;lt;p&amp;gt;The requested URL was not found on the server.  If you entered the URL manually please check your spelling and try again.&amp;lt;/p&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Querying for resource id #2 gave us the expected result. However, querying for &lt;code&gt;task_id == 3&lt;/code&gt; returned an HTML message instead of JSON because this is how Flask generates the 404 response by default. If ran through the browser, the returned web page would look as follows:&lt;/p&gt;
&lt;p&gt;&lt;br&gt;
&lt;img src=&#34;/img/NotFound.png&#34; /&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;To also respond with JSON in the event of a 404 error, we slightly tweak our 404 error handler:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;from flask import make_response

@app.errorhandler(404)
def not_found(error):
    return make_response(jsonify({&amp;#39;error&amp;#39;: &amp;#39;Not found&amp;#39;}), 404)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After this, the printed response in our command-line looks much better:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ curl -i http://localhost:5000/todo/api/v1.0/tasks/3
HTTP/1.0 404 NOT FOUND
Content-Type: application/json
Content-Length: 27
Server: Werkzeug/0.14.1 Python/3.6.4
Date: Sat, 24 Mar 2018 22:15:57 GMT

{
  &amp;quot;error&amp;quot;: &amp;quot;Not found&amp;quot;
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We continue with the implementation of a &lt;code&gt;POST&lt;/code&gt; method to be able to add a new item to our task database. For this we need the &lt;code&gt;request&lt;/code&gt; object from the flask library. Note how we switched the &lt;code&gt;methods&lt;/code&gt; attribute from &lt;code&gt;GET&lt;/code&gt; to &lt;code&gt;POST&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;from flask import request

@app.route(&amp;#39;/todo/api/v1.0/tasks&amp;#39;, methods=[&amp;#39;POST&amp;#39;])
def create_task():
    if not request.json or not &amp;#39;title&amp;#39; in request.json:
        abort(400)
    task = {
        &amp;#39;id&amp;#39;: tasks[-1][&amp;#39;id&amp;#39;] + 1,
        &amp;#39;title&amp;#39;: request.json[&amp;#39;title&amp;#39;],
        &amp;#39;description&amp;#39;: request.json.get(&amp;#39;description&amp;#39;, &amp;quot;&amp;quot;),
        &amp;#39;done&amp;#39;: False
    }
    tasks.append(task)
    return jsonify({&amp;#39;task&amp;#39;: task}), 201&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following aspects are worth noting:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;in Flask, data a client sends to the server is provided by the global &lt;code&gt;request&lt;/code&gt; object&lt;/li&gt;
&lt;li&gt;&lt;code&gt;request.json&lt;/code&gt; will contain the posted data only if it came marked as JSON&lt;/li&gt;
&lt;li&gt;if the data is not there or is missing a &lt;code&gt;title&lt;/code&gt; item, we return error code 400 (&lt;em&gt;bad request&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;if the posted data is accepted as JSON, we create a new task dictionary using the id of the last task plus one via &lt;code&gt;&#39;id&#39;: tasks[-1][&#39;id&#39;] + 1&lt;/code&gt;. The construction takes the last task dictionary in our list of task dictionaries (&lt;code&gt;tasks[-1]&lt;/code&gt;) and then extracts the &lt;code&gt;id&lt;/code&gt; from this last task dictionary by extracting the corresponding &lt;code&gt;value&lt;/code&gt; belonging to the key &lt;code&gt;id&lt;/code&gt; (note that dictionaries in python are so-called &lt;em&gt;key-value pairs&lt;/em&gt;.) So if our task dictionary contains e.g., two tasks, &lt;code&gt;tasks[-1][&#39;id&#39;]&lt;/code&gt; will evalute to &lt;code&gt;2&lt;/code&gt;, hence &lt;code&gt;&#39;id&#39;: tasks[-1][&#39;id&#39;] + 1&lt;/code&gt; will make &lt;code&gt;&#39;id&#39;&lt;/code&gt; to evalute to &lt;code&gt;3&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;in order to hand over the data as JSON we have to set the request content type to &lt;code&gt;application/json&lt;/code&gt; when firing the &lt;code&gt;POST&lt;/code&gt; request via the command line&lt;/li&gt;
&lt;li&gt;we assume the &lt;code&gt;done&lt;/code&gt; field to always start as &lt;code&gt;False&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;the &lt;code&gt;description&lt;/code&gt; field is optional and does not have to be delivered in the &lt;code&gt;POST&lt;/code&gt; request&lt;/li&gt;
&lt;li&gt;after adding the newly created task (via &lt;code&gt;tasks.append(task)&lt;/code&gt;)to our list of tasks (our &lt;code&gt;tasks&lt;/code&gt; array), we respond to the client with the added task like above including a status code 201 which according to HTTP stands for “Created”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Launching our web service with &lt;code&gt;python3 app.py&lt;/code&gt; and jumping over to our command line to test the newly implemented functionality results in the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ curl -i -H &amp;quot;Content-Type: application/json&amp;quot; -X POST -d &amp;#39;{&amp;quot;title&amp;quot;:&amp;quot;Read a book&amp;quot;}&amp;#39; http://localhost:5000/todo/api/v1.0/tasks
HTTP/1.0 201 CREATED
Content-Type: application/json
Content-Length: 105
Server: Werkzeug/0.14.1 Python/3.6.4
Date: Sat, 24 Mar 2018 23:18:39 GMT

{
  &amp;quot;task&amp;quot;: {
    &amp;quot;description&amp;quot;: &amp;quot;&amp;quot;,
    &amp;quot;done&amp;quot;: false,
    &amp;quot;id&amp;quot;: 3,
    &amp;quot;title&amp;quot;: &amp;quot;Read a book&amp;quot;
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The above command suddenly comes along with a bunch of additional &lt;code&gt;parameters&lt;/code&gt;. Let us review them in turn:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt; was already clarified above and includes the header into an HTTP request&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-H&lt;/code&gt; is used to include any number of extra headers into an HTTP request; and because ‘Content-Type’ is the name of one of the internal headers that &lt;code&gt;curl&lt;/code&gt; would use (usually set to text/html by default), by setting it explicitly as a custom header, this externally set header will be used instead of the internal one.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-X&lt;/code&gt;specified a custom request method to use when communicating with an HTTP server; the specified request method will be sued instead of the method otherwise used (which defaults to GET)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt; send the specified data in a POST request to the HTTP server in the same way that a browser does when a user has filled in an HTML form and presses the submit button; this will cause &lt;code&gt;curl&lt;/code&gt; to pass the data to the server using the content-type application/x-www-form-urlencoded.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After adding this new task to our in-memory database, we can retrieve the list of all tasks including the new one:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ curl -i http://localhost:5000/todo/api/v1.0/tasks
HTTP/1.0 200 OK
Content-Type: application/json
Content-Length: 424
Server: Werkzeug/0.14.1 Python/3.6.4
Date: Sat, 24 Mar 2018 23:20:13 GMT

{
  &amp;quot;tasks&amp;quot;: [
    {
      &amp;quot;description&amp;quot;: &amp;quot;Milk, Cheese, Pizza, Fruit, Tylenol&amp;quot;,
      &amp;quot;done&amp;quot;: false,
      &amp;quot;id&amp;quot;: 1,
      &amp;quot;title&amp;quot;: &amp;quot;Buy groceries&amp;quot;
    },
    {
      &amp;quot;description&amp;quot;: &amp;quot;Need to find a good Python tutorial on the web&amp;quot;,
      &amp;quot;done&amp;quot;: false,
      &amp;quot;id&amp;quot;: 2,
      &amp;quot;title&amp;quot;: &amp;quot;Learn Python&amp;quot;
    },
    {
      &amp;quot;description&amp;quot;: &amp;quot;&amp;quot;,
      &amp;quot;done&amp;quot;: false,
      &amp;quot;id&amp;quot;: 3,
      &amp;quot;title&amp;quot;: &amp;quot;Read a book&amp;quot;
    }
  ]
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The very last route we are going to implement is the &lt;code&gt;DELETE&lt;/code&gt;request:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;@app.route(&amp;#39;/todo/api/v1.0/tasks/&amp;lt;int:task_id&amp;gt;&amp;#39;, methods=[&amp;#39;DELETE&amp;#39;])
def delete_task(task_id):
    task = [task for task in tasks if task[&amp;#39;id&amp;#39;] == task_id]
    if len(task) == 0:
        abort(404)
    tasks.remove(task[0])
    return jsonify({&amp;#39;result&amp;#39;: True})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Again, like in the case for the &lt;code&gt;POST&lt;/code&gt;request we perform the list comprehension &lt;code&gt;task = [task for task in tasks if task[&#39;id&#39;] == task_id]&lt;/code&gt;. If the task to be deleted indeed exists in the &lt;code&gt;tasks&lt;/code&gt; array, the variable &lt;code&gt;task&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To explain the line &lt;code&gt;tasks.remove(task[0])&lt;/code&gt; a little bit better, let us assume that the user wants to delete the first task in our database (our in-memory array). Then we would set &lt;code&gt;&amp;lt;int:task_id&amp;gt;&lt;/code&gt; equal to &lt;code&gt;1&lt;/code&gt; in the &lt;code&gt;DELETE&lt;/code&gt; request and the function associated with this route (i.e., &lt;code&gt;delete_task&lt;/code&gt;) will first run the list comprehension to end up with the variable &lt;code&gt;task&lt;/code&gt; which is itself a list and in our example would only contain one single list item, namely &lt;code&gt;[{&#39;id&#39;: 1, &#39;title&#39;: &#39;Buy groceries&#39;, &#39;description&#39;: &#39;Milk, Cheese, Pizza, Fruit, Tylenol&#39;, &#39;done&#39;: False}]&lt;/code&gt;.
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;task[0]&lt;/code&gt; accordingly selects the first item of our list &lt;code&gt;task&lt;/code&gt; which only consists of that one element, i.e., &lt;code&gt;task[0]&lt;/code&gt; returns the dictionary which corresponds to the first list element in &lt;code&gt;task&lt;/code&gt;. &lt;code&gt;tasks.remove(task[0])&lt;/code&gt; then removes exactly the dictionary we want to remove from the &lt;code&gt;tasks&lt;/code&gt; array which contains all currently stored tasks.&lt;/p&gt;
&lt;p&gt;To test the newly created route, we run a &lt;code&gt;DELETE&lt;/code&gt; - request via our command line to delete task #2:&lt;/p&gt;
&lt;pre class=&#34;raw&#34;&gt;&lt;code&gt;$ curl -i -X DELETE http://localhost:5000/todo/api/v1.0/tasks/2
HTTP/1.0 200 OK
Content-Type: application/json
Content-Length: 21
Server: Werkzeug/0.14.1 Python/3.6.4
Date: Sun, 25 Mar 2018 11:34:32 GMT

{
  &amp;quot;result&amp;quot;: true
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Our new &lt;code&gt;tasks&lt;/code&gt; array then looks as follows:&lt;/p&gt;
&lt;pre class=&#34;raw&#34;&gt;&lt;code&gt;$ curl -i http://localhost:5000/todo/api/v1.0/tasks
HTTP/1.0 200 OK
Content-Type: application/json
Content-Length: 163
Server: Werkzeug/0.14.1 Python/3.6.4
Date: Sun, 25 Mar 2018 11:36:28 GMT

{
  &amp;quot;tasks&amp;quot;: [
    {
      &amp;quot;description&amp;quot;: &amp;quot;Milk, Cheese, Pizza, Fruit, Tylenol&amp;quot;,
      &amp;quot;done&amp;quot;: false,
      &amp;quot;id&amp;quot;: 1,
      &amp;quot;title&amp;quot;: &amp;quot;Buy groceries&amp;quot;
    }
  ]
}&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;small-improvements&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Small Improvements&lt;/h4&gt;
&lt;p&gt;Our home-made web service is actually fully functional by now but there are two additional improvements we want to add which also Miguel Grinberg has included in his original &lt;a href=&#34;https://blog.miguelgrinberg.com/post/designing-a-restful-api-with-python-and-flask/page/0#comments&#34;&gt;blog post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;First, the problem with the current design of the web API is that we assume clients to know how the respective URIs are built (in practice this is also usually the case since all major web APIs come along with ample documentation).
But there is another drawback: If we would want to apply any changes to these URIs in the future, we first would have to update relevant documentation, educate users, etc. Therefore it is easier if we return the full URIs that control a task (instead of only the task ids) so that clients always get the URIs ready to be used along with their requests. For this, we add a small helper function that generates a “public” version of a task that will be sent to the client along with a request:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;from flask import url_for

def make_public_task(task):
    new_task = {}
    for field in task:
        if field == &amp;#39;id&amp;#39;:
            new_task[&amp;#39;uri&amp;#39;] = url_for(&amp;#39;get_task&amp;#39;, task_id=task[&amp;#39;id&amp;#39;], _external=True)
        else:
            new_task[field] = task[field]
    return new_task&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let us explain what the above function &lt;code&gt;make_public_task&lt;/code&gt; is doing:
If we quickly start a python session in our shell (by executing &lt;code&gt;python3&lt;/code&gt; in our command line window and then create our tasks array, we can just pick one task out of the &lt;code&gt;tasks&lt;/code&gt; array (our list of dictionaries) with which we have been working so far and assign it to the variable &lt;code&gt;task1&lt;/code&gt; as shown below:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;$ python3
Python 3.6.4 (v3.6.4:d48ecebad5, Dec 18 2017, 21:07:28)
[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin

Type &amp;quot;help&amp;quot;, &amp;quot;copyright&amp;quot;, &amp;quot;credits&amp;quot; or &amp;quot;license&amp;quot; for more information.
&amp;gt;&amp;gt;&amp;gt;
&amp;gt;&amp;gt;&amp;gt; tasks = [
...     {
...         &amp;#39;id&amp;#39;: 1,
...         &amp;#39;title&amp;#39;: u&amp;#39;Buy groceries&amp;#39;,
...         &amp;#39;description&amp;#39;: u&amp;#39;Milk, Cheese, Pizza, Fruit, Tylenol&amp;#39;,
...         &amp;#39;done&amp;#39;: False
...     },
...     {
...         &amp;#39;id&amp;#39;: 2,
...         &amp;#39;title&amp;#39;: u&amp;#39;Learn Python&amp;#39;,
...         &amp;#39;description&amp;#39;: u&amp;#39;Need to find a good Python tutorial on the web&amp;#39;,
...         &amp;#39;done&amp;#39;: False
...     }
... ]
&amp;gt;&amp;gt;&amp;gt; tasks[0]
{&amp;#39;id&amp;#39;: 1, &amp;#39;title&amp;#39;: &amp;#39;Buy groceries&amp;#39;, &amp;#39;description&amp;#39;: &amp;#39;Milk, Cheese, Pizza, Fruit, Tylenol&amp;#39;, &amp;#39;done&amp;#39;: False}
&amp;gt;&amp;gt;&amp;gt; task1 = tasks[0]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, we create an empty dictionary called &lt;code&gt;new_task&lt;/code&gt; and then iterate through all keys of the &lt;code&gt;task1&lt;/code&gt; dictionary (which represents one single task). If the current key is not &lt;code&gt;id&lt;/code&gt;, we simply add the current key-value pair to our newly created dictionary &lt;code&gt;new_task&lt;/code&gt;. However, if the current key we are looking at is the &lt;code&gt;id&lt;/code&gt;, we create an entry in our dictionary with the key &lt;code&gt;uri&lt;/code&gt; instead and the corresponding value equal to the respective tasks URI. &lt;br&gt;
If we were to perform the above description manually for one task, we would have the following:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; new_task = {}
&amp;gt;&amp;gt;&amp;gt; new_task[&amp;#39;title&amp;#39;] = task1[&amp;#39;title&amp;#39;]
&amp;gt;&amp;gt;&amp;gt; new_task[&amp;#39;done&amp;#39;] = task1[&amp;#39;done&amp;#39;]
&amp;gt;&amp;gt;&amp;gt; new_task[&amp;#39;description&amp;#39;] = task1[&amp;#39;description&amp;#39;]
&amp;gt;&amp;gt;&amp;gt; new_task
{&amp;#39;title&amp;#39;: &amp;#39;Buy groceries&amp;#39;, &amp;#39;done&amp;#39;: False, &amp;#39;description&amp;#39;: &amp;#39;Milk, Cheese, Pizza, Fruit, Tylenol&amp;#39;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For the key &lt;code&gt;id&lt;/code&gt; as described above, instead we want to generate the URI which we do by using Flasks &lt;code&gt;url_for&lt;/code&gt; - function. How does that work?&lt;br&gt;
Remembering that the &lt;code&gt;route()&lt;/code&gt; decorator in flask is used to bind a function to a URL, the &lt;code&gt;url_for()&lt;/code&gt; command generates the URI which is associated with a particular function. In our case, the URI we want to create is the URI associated with the function &lt;code&gt;get_task(task_id)&lt;/code&gt; which we have defined above. But because we cannot generate a URL without the application actually running, I will only write down the code that will generate exactly what we want (namely the associated value belonging to the key &lt;code&gt;uri&lt;/code&gt;): &lt;br&gt;&lt;code&gt;new_task[&#39;uri&#39;] = url_for(&#39;get_task&#39;, task_id=task[&#39;id&#39;], _external=True)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Having disentangled the newly created function, we can then pass the list of tasks through this newly created function before sending them to the client by slightly changing the very first route which we have implemented (again pay attention to the list comprehension used):&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;@app.route(&amp;#39;/todo/api/v1.0/tasks&amp;#39;, methods=[&amp;#39;GET&amp;#39;])
def get_tasks():
    return jsonify({&amp;#39;tasks&amp;#39;: [make_public_task(task) for task in tasks]})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So now if we want to get a list of all tasks we would get the following:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;$ curl -i http://localhost:5000/todo/api/v1.0/tasks
HTTP/1.0 200 OK
Content-Type: application/json
Content-Length: 407
Server: Werkzeug/0.14.1 Python/3.6.4
Date: Sun, 25 Mar 2018 14:41:25 GMT

{
  &amp;quot;tasks&amp;quot;: [
    {
      &amp;quot;description&amp;quot;: &amp;quot;Milk, Cheese, Pizza, Fruit, Tylenol&amp;quot;,
      &amp;quot;done&amp;quot;: false,
      &amp;quot;title&amp;quot;: &amp;quot;Buy groceries&amp;quot;,
      &amp;quot;uri&amp;quot;: &amp;quot;http://localhost:5000/todo/api/v1.0/tasks/1&amp;quot;
    },
    {
      &amp;quot;description&amp;quot;: &amp;quot;Need to find a good Python tutorial on the web&amp;quot;,
      &amp;quot;done&amp;quot;: false,
      &amp;quot;title&amp;quot;: &amp;quot;Learn Python&amp;quot;,
      &amp;quot;uri&amp;quot;: &amp;quot;http://localhost:5000/todo/api/v1.0/tasks/2&amp;quot;
    }
  ]
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We should apply this technique to all other functions to ensure that the client always also sees the URIs instead of the ids (not shown here).&lt;/p&gt;
&lt;p&gt;The very last piece we want to implement following &lt;a href=&#34;https://blog.miguelgrinberg.com/post/designing-a-restful-api-with-python-and-flask/page/0#comments&#34;&gt;Grinberg’s post&lt;/a&gt; is to secure our web service with an authentication. by requiring clients to provide a username and password.&lt;br&gt;
Usually in web applications where we would have a login form that sends the credentials to the server which then creates a session for the logged in user would violate the &lt;em&gt;stateless&lt;/em&gt; requirement of REST. Therefore, instead we have to ask clients to send their authentication information with every request they send to us.
and because with REST we always try to adhere to the HTTP protocol as much as we can, we can make use of the Flask extension &lt;code&gt;Flask-HTTPAuth&lt;/code&gt; which allows us to secure our web API. For this, we first have to install the extension with&lt;/p&gt;
&lt;pre class=&#34;raw&#34;&gt;&lt;code&gt;$ pip install flask-httpauth&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and then import the &lt;code&gt;HTTPBasicAuth&lt;/code&gt; object into our script &lt;code&gt;app.py&lt;/code&gt;, instantiate an instance of the &lt;code&gt;HTTPBasicAuth&lt;/code&gt; object and then implement the two callback functions &lt;code&gt;get_password&lt;/code&gt; and &lt;code&gt;error_handler&lt;/code&gt; (obviously you have to replace &lt;code&gt;your_password&lt;/code&gt; and &lt;code&gt;your_username&lt;/code&gt; with your own credentials of choice):&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;from flask_httpauth import HTTPBasicAuth
auth = HTTPBasicAuth()

@auth.get_password
def get_password(username):
    if username == &amp;#39;your_username&amp;#39;:
        return &amp;#39;your_password&amp;#39;
    return None

@auth.error_handler
def unauthorized():
    return make_response(jsonify({&amp;#39;error&amp;#39;: &amp;#39;Unauthorized access&amp;#39;}), 401)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The callback function &lt;code&gt;get_password&lt;/code&gt; is used by the extension to obtain the password for a given user (in the case of an application backed by a database, we would check the user’s table).&lt;br&gt;
The function &lt;code&gt;error_handler&lt;/code&gt; will be used by the extension in case an unauthorized client tries to access the service. Like we did with other custom error messages, we make sure that it contains JSON instead of HTML.&lt;/p&gt;
&lt;p&gt;Having implemented the above, the only thing left is to indicate all the functions that need to be protected by adding the &lt;code&gt;@auth.login_required&lt;/code&gt; at the respective positions in the code.For our &lt;code&gt;GET&lt;/code&gt; request that returns all tasks at once, this would look as follows:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;@app.route(&amp;#39;/todo/api/v1.0/tasks&amp;#39;, methods=[&amp;#39;GET&amp;#39;])
@auth.login_required
def get_tasks():
    return jsonify({&amp;#39;tasks&amp;#39;: [make_public_task(task) for task in tasks]})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If we would now request all tasks without authentication we would get the following output printed to our command line:&lt;/p&gt;
&lt;pre class=&#34;raw&#34;&gt;&lt;code&gt;$ curl -i http://localhost:5000/todo/api/v1.0/tasks
HTTP/1.0 401 UNAUTHORIZED
Content-Type: application/json
WWW-Authenticate: Basic realm=&amp;quot;Authentication Required&amp;quot;
Content-Length: 37
Server: Werkzeug/0.14.1 Python/3.6.4
Date: Sun, 25 Mar 2018 15:41:33 GMT

{
  &amp;quot;error&amp;quot;: &amp;quot;Unauthorized access&amp;quot;
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If we, however, hand our credentials over to the request, we get the full response as expected:&lt;/p&gt;
&lt;pre class=&#34;raw&#34;&gt;&lt;code&gt;$ curl -u your_username:your_password http://localhost:5000/todo/api/v1.0/tasks
{
  &amp;quot;tasks&amp;quot;: [
    {
      &amp;quot;description&amp;quot;: &amp;quot;Milk, Cheese, Pizza, Fruit, Tylenol&amp;quot;,
      &amp;quot;done&amp;quot;: false,
      &amp;quot;title&amp;quot;: &amp;quot;Buy groceries&amp;quot;,
      &amp;quot;uri&amp;quot;: &amp;quot;http://localhost:5000/todo/api/v1.0/tasks/1&amp;quot;
    },
    {
      &amp;quot;description&amp;quot;: &amp;quot;Need to find a good Python tutorial on the web&amp;quot;,
      &amp;quot;done&amp;quot;: false,
      &amp;quot;title&amp;quot;: &amp;quot;Learn Python&amp;quot;,
      &amp;quot;uri&amp;quot;: &amp;quot;http://localhost:5000/todo/api/v1.0/tasks/2&amp;quot;
    }
  ]
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that we changed the flag &lt;code&gt;-i&lt;/code&gt; to &lt;code&gt;-u&lt;/code&gt; which is the necessary flag to be able to specify user name and password to use for server authentication right after the flag. If we would only specify the user name, &lt;code&gt;curl&lt;/code&gt; would prompt for a password.&lt;/p&gt;
&lt;p&gt;Having successfully replicated Miguel’s amazing &lt;a href=&#34;https://blog.miguelgrinberg.com/post/designing-a-restful-api-with-python-and-flask/page/0#comments&#34;&gt;post&lt;/a&gt;], there is time to briefly about possible improvements that Miguel himself suggested:
* A real web service should be backed by a real databases. So at some point we should get rid of the in memory structure and apply a MySQL or PostgreSQL database.
* Our web service could be extended to be able to handle multiple users and correspondingly maintain multiple lists. In such a system we would have a second resource which would be the users.
* The implemented &lt;code&gt;GET&lt;/code&gt; request for the entire task list could be extended with a filter functionality.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;deployment-to-a-real-web-server&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Deployment to a real web server&lt;/h4&gt;
&lt;p&gt;Being able to run our little web service on a local server, we want to add one more piece to the story by deploying it to a real web server via ‘Heroku’ so that we can ask a friend to access our web service as well.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;In order to do this we assume (1) that you are vaguely familiar with &lt;a href=&#34;https://git-scm.com/&#34;&gt;‘git’&lt;/a&gt; and (2) the deployment process using ‘heroku’. This means that you have to have (1) &lt;a href=&#34;https://git-scm.com/book/en/v2/Getting-Started-Installing-Git&#34;&gt;‘git’ installed on your machine&lt;/a&gt; and (2) that you have to have at least a free account on &lt;a href=&#34;https://www.heroku.com/home&#34;&gt;heroku.com&lt;/a&gt; as well as the &lt;a href=&#34;https://devcenter.heroku.com/articles/heroku-cli&#34;&gt;Heroku Command Line Interface (CLI)&lt;/a&gt; installed.&lt;br&gt;
Below we will go through the deployment process in 10 easy steps, assuming that your folder-structure looks like the below and you are currently in your &lt;code&gt;/app&lt;/code&gt; directory and your virtual environment is still activated:&lt;/p&gt;
&lt;pre class=&#34;raw&#34;&gt;&lt;code&gt;CreateRESTfulAPI/
  app/
    app.py
  virtual/&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In case you are in the &lt;code&gt;/app&lt;/code&gt; directory but your virtual environment is deactivated execute &lt;code&gt;$ source ../virtual/bin/activate&lt;/code&gt; and your virtual environment should be activated again.
1. Execute &lt;code&gt;pip install gunicorn&lt;/code&gt;. &lt;code&gt;gunicorn&lt;/code&gt; is a Python WSGI HTTP Server and needed later by Heroku to be able to run our application.&lt;/p&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Execute &lt;code&gt;pip freeze &amp;gt; requirements.txt&lt;/code&gt; to create the file &lt;code&gt;requirements.txt&lt;/code&gt; - file that contains a list of all the python packages that are currently in your virtual installation. This file is necessary to tell ‘Heroku’ what to install in their system.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create a file called &lt;code&gt;Procile&lt;/code&gt; without an extension and write &lt;code&gt;web: gunicorn app:app&lt;/code&gt; whereby the first instance of &lt;code&gt;app&lt;/code&gt; refers to the name of your file &lt;code&gt;app.py&lt;/code&gt; and the second &lt;code&gt;app&lt;/code&gt; refers to the name of the variable holding the Flask instance.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The last file we need is a file called &lt;code&gt;runtime.txt&lt;/code&gt; in which we have to write the version of python we want our app to run on. To specify the correct version, simply refer to the &lt;a href=&#34;https://devcenter.heroku.com/articles/python-runtimes&#34;&gt;Heroku DevCenter&lt;/a&gt; that always lists the latest supported python distributions for Python 2 and 3. In our case, we write &lt;code&gt;python-3.6.4&lt;/code&gt; to our file.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Next, we have to log in to &lt;code&gt;heroku&lt;/code&gt; from the command line ty executing &lt;code&gt;heroku login&lt;/code&gt;. When asked type in your Email-address and password.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; ```raw
 $ heroku login
 Enter your Heroku credentials:
 Email: &amp;lt;your_email_address&amp;gt;
 Password: &amp;lt;your_password&amp;gt;
 Logged in as &amp;lt;your_email_address&amp;gt;
 ```&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We create a new app by executing &lt;code&gt;heroku create todo-api-tutorial&lt;/code&gt;. Note that you will have to use a different name because &lt;code&gt;todo-api-tutorial&lt;/code&gt; will already be taken by me unless I deleted this app again in the meantime and the name is free again.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Type the following sequence of commands that creates a local git repository, stages all files in the repository and commits all changes:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; ```raw
 $ git init
 Initialized empty Git repository in ..........................
 $ git add .
 $ git commit -m &amp;quot;first commit&amp;quot;
 [master (root-commit) 77ab482] first commit
  5 files changed, 287 insertions(+)
  create mode 100644 Procfile
  create mode 100644 app.py
  create mode 100644 requirements.txt
  create mode 100644 runtime.txt
  create mode 100644 tasks.txt
 ```&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We want to connect to our &lt;code&gt;todo-api-tutorial&lt;/code&gt; app by executing &lt;code&gt;heroku git:remote --app todo-api-tutorial&lt;/code&gt;. To check that the connection was successful run &lt;code&gt;heroku info&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;By running &lt;code&gt;git push heroku master&lt;/code&gt; will detect all the files that you created above, install all dependencies and packages specified in &lt;code&gt;requirements.txt&lt;/code&gt; and ultimately deploy the app. The entire deployment process should end with&lt;/p&gt;
&lt;pre class=&#34;raw&#34;&gt;&lt;code&gt;remote: Verifying deploy... done.
To https://git.heroku.com/todo-api-tutorial.git
 * [new branch]      master -&amp;gt; master&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now comes the big moment where we will check whether our deployed web service is now actually also retrievable. Executing the below &lt;code&gt;GET&lt;/code&gt; request in your command line should give you the following output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```raw
$ curl -u your_username:your_password http://todo-api-tutorial.herokuapp.com/todo/api/v1.0/tasks
{
  &amp;quot;tasks&amp;quot;: [
    {
      &amp;quot;description&amp;quot;: &amp;quot;Milk, Cheese, Pizza, Fruit, Tylenol&amp;quot;,
      &amp;quot;done&amp;quot;: false,
      &amp;quot;title&amp;quot;: &amp;quot;Buy groceries&amp;quot;,
      &amp;quot;uri&amp;quot;: &amp;quot;http://todo-api-tutorial.herokuapp.com/todo/api/v1.0/tasks/1&amp;quot;
    },
    {
      &amp;quot;description&amp;quot;: &amp;quot;Need to find a good Python tutorial on the web&amp;quot;,
      &amp;quot;done&amp;quot;: false,
      &amp;quot;title&amp;quot;: &amp;quot;Learn Python&amp;quot;,
      &amp;quot;uri&amp;quot;: &amp;quot;http://todo-api-tutorial.herokuapp.com/todo/api/v1.0/tasks/2&amp;quot;
    }
  ]
}
```&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If so, congratulations!&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In a similar fashion, you can add a task:&lt;/p&gt;
&lt;pre class=&#34;raw&#34;&gt;&lt;code&gt;$ curl -u your_username:your_password -H &amp;quot;Content-Type: application/json&amp;quot; -X POST -d &amp;#39;{&amp;quot;title&amp;quot;:&amp;quot;Read a book&amp;quot;}&amp;#39; http://todo-api-tutorial.herokuapp.com/todo/api/v1.0/tasks
{
  &amp;quot;task&amp;quot;: {
    &amp;quot;description&amp;quot;: &amp;quot;&amp;quot;,
    &amp;quot;done&amp;quot;: false,
    &amp;quot;id&amp;quot;: 4,
    &amp;quot;title&amp;quot;: &amp;quot;Read a book&amp;quot;
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and then again retrieve the newly updated list:&lt;/p&gt;
&lt;pre class=&#34;raw&#34;&gt;&lt;code&gt;$ curl -u your_username:your_password http://todo-api-tutorial.herokuapp.com/todo/api/v1.0/tasks
{
  &amp;quot;tasks&amp;quot;: [
    {
      &amp;quot;description&amp;quot;: &amp;quot;Milk, Cheese, Pizza, Fruit, Tylenol&amp;quot;,
      &amp;quot;done&amp;quot;: false,
      &amp;quot;title&amp;quot;: &amp;quot;Buy groceries&amp;quot;,
      &amp;quot;uri&amp;quot;: &amp;quot;http://todo-api-tutorial.herokuapp.com/todo/api/v1.0/tasks/1&amp;quot;
    },
    {
      &amp;quot;description&amp;quot;: &amp;quot;Need to find a good Python tutorial on the web&amp;quot;,
      &amp;quot;done&amp;quot;: false,
      &amp;quot;title&amp;quot;: &amp;quot;Learn Python&amp;quot;,
      &amp;quot;uri&amp;quot;: &amp;quot;http://todo-api-tutorial.herokuapp.com/todo/api/v1.0/tasks/2&amp;quot;
    },
    {
      &amp;quot;description&amp;quot;: &amp;quot;&amp;quot;,
      &amp;quot;done&amp;quot;: false,
      &amp;quot;title&amp;quot;: &amp;quot;Read a book&amp;quot;,
      &amp;quot;uri&amp;quot;: &amp;quot;http://todo-api-tutorial.herokuapp.com/todo/api/v1.0/tasks/3&amp;quot;
    }
  ]
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;Building on all of the above, a fairly neat explanation is given by &lt;a href=&#34;https://study.com/academy/lesson/application-programming-interface-api-definition-example.html&#34;&gt;Martin Gibbs&lt;/a&gt; where he states that &lt;em&gt;APIs are a set of tools that programmers can use in helping them create software&lt;/em&gt; and thereby &lt;em&gt;allow a programmer to deliver solid solutions fairly rapidly without having to rebuild everything from scratch every time.&lt;/em&gt;&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;Note that depending on whether or not you already have it, there is a Chrome-extension called &lt;a href=&#34;https://chrome.google.com/webstore/detail/jsonview/chklaanhfefbnpoihckbnefhakgolnmc?hl=de&#34;&gt;JSONView&lt;/a&gt; that nicely formats raw JSON-responses in the browser. Similar tools should also be available for other browsers.&lt;a href=&#34;#fnref2&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn3&#34;&gt;&lt;p&gt;We could, for example, easily type &lt;code&gt;curl http://www.google.com&lt;/code&gt; into our command-line and get back a whole mess of unstructured HTML that a browser would usually nicely render for us when we request &lt;a href=&#34;http://www.google.com&#34; class=&#34;uri&#34;&gt;http://www.google.com&lt;/a&gt; from the browser. In other words, web APIs are designed to return structured data (in XML or JSON) and &lt;em&gt;not&lt;/em&gt; to respond with HTML.&lt;a href=&#34;#fnref3&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn4&#34;&gt;&lt;p&gt;Note that although Ryan Mitchell declares that using APIs is generally not considered classical &lt;em&gt;web scraping&lt;/em&gt;, he declares that both practices (of &lt;em&gt;web scraping&lt;/em&gt; and using dedicated &lt;em&gt;web APIs&lt;/em&gt;) make use of the same techniques and can often be very complementary to each other (p. 49).&lt;a href=&#34;#fnref4&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn5&#34;&gt;&lt;p&gt;From the way Grinberg introduces APIs I would conclude that he already jumps into &lt;em&gt;web APIs&lt;/em&gt; without dealing with other things that could represent an API.&lt;a href=&#34;#fnref5&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn6&#34;&gt;&lt;p&gt;Although there are Flask extensions that would help with building a RESTful service using Flask, Miguel decides to continue his tutorial without extensions.&lt;a href=&#34;#fnref6&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn7&#34;&gt;&lt;p&gt;Note that your terminal must be in the respective directory where your file &lt;code&gt;app.py&lt;/code&gt; is located in order for the command &lt;code&gt;python3 app.py&lt;/code&gt; to start Flask’s local server.&lt;a href=&#34;#fnref7&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>A Collapsible Tree with D3.js</title>
      <link>/post/2018-03-09-collapsible-tree-with-d3js/</link>
      <pubDate>Fri, 02 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018-03-09-collapsible-tree-with-d3js/</guid>
      <description>&lt;p&gt;A couple of weeks ago at work we were faced with the issue of how best to represent hierarchical structures, i.e., parent-child-relationships. This issue was something that I had actually been thinking about for a while already and then finally when a colleague approached me with the wish to create such visualizations, finally we decided to invest some time into how we best could implement this&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;In a first step, we searched for common visualizations of such relationships and fairly quickly arrived at so-called &amp;lsquo;node-tree diagrams&amp;rsquo; (or simply &amp;lsquo;tree diagrams&amp;rsquo;). Additionally, the trees should eventually come along with the possibility to filter for certain characteristics and thereby only select parts of the tree that the user actually filters for (but this was an issue we kept aside for the moment and focussed on the core of the problem).&lt;/p&gt;
&lt;p&gt;Because we had been working with Tableau a couple of times recently, instead of trying to implement tree-diagrams in R or Python, our choice in a first instance fell on Tableau.&lt;/p&gt;
&lt;p&gt;While in the world of data science dedicated packages/libraries available in &lt;em&gt;R&lt;/em&gt; (ggplot2, plotly) or &lt;em&gt;Python&lt;/em&gt; (matplotlib, seaborn, ggplot, bokeh, gleam)&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; are widely used, Tableau (with almost no coding involved) has more of a usage in the business word. At the same time, there are software developers as kind of a third group distinct from classical data scientists of business analysts that also need to visualize data at some point during their work and this is where frequently javascript libraries like &lt;em&gt;Chart.js&lt;/em&gt; or &lt;em&gt;D3.js&lt;/em&gt; are more frequently used as tools being more well known in this domain.&lt;/p&gt;
&lt;p&gt;In the more recent past however, things are starting to overlap and software developers wanting to dive into the world of data science are also largely acquiring skills in tools like &lt;em&gt;R&lt;/em&gt; or &lt;em&gt;Python&lt;/em&gt; and data scientists are leaving their set of tools and also making more and more use of the javascript libraries we mentioned above.&lt;/p&gt;
&lt;p&gt;It is exactly &lt;em&gt;D3.js&lt;/em&gt; which caught my attention although it would require some investment into learning the syntax. But I saw a huge benefit in actually learning the syntax to create incredibly beautiful and concise visualizations. In fact, on Mike Boston&amp;rsquo;s homepage, he gather a huge set of example visualizations that give you a fairly good impression of what is possible with &lt;em&gt;D3.js&lt;/em&gt; and that learning it is well worth the investment.&lt;/p&gt;
&lt;p&gt;In this post I will try to describe as clearly as possible the generation of a tree-diagram using the javascript library D3.js.&lt;/p&gt;
&lt;p&gt;The reason I stumbled over this in the first place is that when diving into Tableau we had stumbled over the possibility to create node-tree diagrams. In particular, Jeffrey Shaffer pioneered the generation of such node-tree diagrams in Tableau.&lt;/p&gt;


&lt;div style=&#34;height: 800px; width: 1000;&#34; id=&#34;example&#34;&gt;&lt;/div&gt;

&lt;style&gt;

.node {
  cursor: pointer;
}

.node circle {
  fill: #fff;
  stroke: steelblue;
  stroke-width: 1.5px;
}

.node text {
  font: 10px sans-serif;
}

.link {
  fill: none;
  stroke: #ccc;
  stroke-width: 1.5px;
}

&lt;/style&gt;

&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js&#34;&gt;&lt;/script&gt;

&lt;script&gt;

var margin = {top: 20, right: 120, bottom: 20, left: 120},
    width = 960 - margin.right - margin.left,
    height = 800 - margin.top - margin.bottom;

var i = 0,
    duration = 750,
    root;

var tree = d3.layout.tree()
    .size([height, width]);

var diagonal = d3.svg.diagonal()
    .projection(function(d) { return [d.y, d.x]; });

var svg = d3.select(&#34;div#example&#34;).append(&#34;svg&#34;)
    .attr(&#34;width&#34;, width + margin.right + margin.left)
    .attr(&#34;height&#34;, height + margin.top + margin.bottom)
  .append(&#34;g&#34;)
    .attr(&#34;transform&#34;, &#34;translate(&#34; + margin.left + &#34;,&#34; + margin.top + &#34;)&#34;);

var data = &#39;{ &#34;name&#34;: &#34;DE45245235&#34;, &#34;children&#34;: [ { &#34;name&#34;: &#34;AT75124&#34;, &#34;size&#34;: 17010 }, { &#34;name&#34;: &#34;DE0473947&#34;, &#34;children&#34;: [ {&#34;name&#34;: &#34;LU3493424&#34;, &#34;size&#34;: 3534} ] }, { &#34;name&#34;: &#34;AT845654&#34;, &#34;size&#34;: 353 }, { &#34;name&#34;: &#34;DE1234&#34;, &#34;children&#34;: [ {&#34;name&#34;: &#34;DE98533&#34;, &#34;children&#34;: [ {&#34;name&#34;: &#34;DE5689&#34;, &#34;size&#34;: 2138}, {&#34;name&#34;: &#34;DE1437934&#34;, &#34;size&#34;: 3824},{&#34;name&#34;: &#34;AT93842&#34;, &#34;size&#34;: 1353}, {&#34;name&#34;: &#34;AT1234083&#34;, &#34;size&#34;: 4665}, {&#34;name&#34;: &#34;LU134739&#34;, &#34;size&#34;: 2649}, {&#34;name&#34;: &#34;DE1243934&#34;, &#34;children&#34;: [ {&#34;name&#34;: &#34;DE74153&#34;, &#34;size&#34;: 2138}, {&#34;name&#34;: &#34;DE713&#34;, &#34;size&#34;: 3824}, {&#34;name&#34;: &#34;DE14635&#34;, &#34;size&#34;: 763}, {&#34;name&#34;: &#34;AT3542345&#34;, &#34;size&#34;: 5222}, {&#34;name&#34;: &#34;DE8265&#34;, &#34;size&#34;: 7862}, {&#34;name&#34;: &#34;AT9673&#34;, &#34;size&#34;: 8435} ] }, {&#34;name&#34;: &#34;DE097134&#34;, &#34;size&#34;: 4896}, {&#34;name&#34;: &#34;DE13493&#34;, &#34;size&#34;: 763}, {&#34;name&#34;: &#34;AT130943&#34;, &#34;size&#34;: 5222}, {&#34;name&#34;: &#34;DE0932439&#34;, &#34;size&#34;: 7862}, {&#34;name&#34;: &#34;AT09234&#34;, &#34;size&#34;: 8435} ] }, {&#34;name&#34;: &#34;LU964694&#34;, &#34;size&#34;: 1675} ] }, { &#34;name&#34;: &#34;BE8562452&#34;, &#34;size&#34;: 2313 }, { &#34;name&#34;: &#34;DE9834923894&#34;, &#34;children&#34;: [ {&#34;name&#34;: &#34;DE085324&#34;, &#34;size&#34;: 2042} ] }, { &#34;name&#34;: &#34;DE9459458&#34;, &#34;size&#34;: 6314 }, { &#34;name&#34;: &#34;DE84294839&#34;, &#34;size&#34;: 4614 }, { &#34;name&#34;: &#34;ES234&#34;, &#34;size&#34;: 20859 }, { &#34;name&#34;: &#34;ES237849&#34;, &#34;size&#34;: 4461 }, { &#34;name&#34;: &#34;FR32894&#34;, &#34;children&#34;: [ {&#34;name&#34;: &#34;FR84394893&#34;, &#34;children&#34;: [ {&#34;name&#34;: &#34;IT92347923&#34;, &#34;size&#34;: 6725} ] }, {&#34;name&#34;: &#34;FR123&#34;, &#34;size&#34;: 3727}, {&#34;name&#34;: &#34;FR9034&#34;, &#34;size&#34;: 9317}, {&#34;name&#34;: &#34;IT2349&#34;, &#34;children&#34;: [ {&#34;name&#34;: &#34;IT92347923&#34;, &#34;size&#34;: 6725}, {&#34;name&#34;: &#34;IT347932&#34;, &#34;size&#34;: 3727}, {&#34;name&#34;: &#34;IT65923&#34;, &#34;children&#34;: [ {&#34;name&#34;: &#34;IT02397493&#34;, &#34;size&#34;: 6725}, {&#34;name&#34;: &#34;IT143234&#34;, &#34;size&#34;: 3727}, {&#34;name&#34;: &#34;IT023947293&#34;, &#34;size&#34;: 9317} ] }, {&#34;name&#34;: &#34;IT134238&#34;, &#34;size&#34;: 12003}, {&#34;name&#34;: &#34;IT9273492&#34;, &#34;size&#34;: 4853}, {&#34;name&#34;: &#34;FR134793&#34;, &#34;children&#34;: [ {&#34;name&#34;: &#34;IT6832046208&#34;, &#34;size&#34;: 6725}, {&#34;name&#34;: &#34;IT298342398&#34;, &#34;size&#34;: 9317} ] }, {&#34;name&#34;: &#34;IT5793&#34;, &#34;size&#34;: 4864}, {&#34;name&#34;: &#34;ES237432&#34;, &#34;size&#34;: 3174}, {&#34;name&#34;: &#34;FR43242&#34;, &#34;children&#34;: [ {&#34;name&#34;: &#34;IT023974923&#34;, &#34;size&#34;: 6725}, {&#34;name&#34;: &#34;IT1231738&#34;, &#34;size&#34;: 9317} ] }, {&#34;name&#34;: &#34;IT239479234&#34;, &#34;size&#34;: 12870}, {&#34;name&#34;: &#34;IT7937493&#34;, &#34;size&#34;: 2728}, {&#34;name&#34;: &#34;IT20342&#34;, &#34;size&#34;: 12348}, {&#34;name&#34;: &#34;IT028343&#34;, &#34;size&#34;: 870}, {&#34;name&#34;: &#34;IT09237493&#34;, &#34;size&#34;: 9121}, {&#34;name&#34;: &#34;IT092349&#34;, &#34;size&#34;: 9191} ] }, {&#34;name&#34;: &#34;AT09348&#34;, &#34;size&#34;: 4853}, {&#34;name&#34;: &#34;FR12983742&#34;, &#34;size&#34;: 8411}, {&#34;name&#34;: &#34;IT8403&#34;, &#34;size&#34;: 4864}, {&#34;name&#34;: &#34;ES729347&#34;, &#34;size&#34;: 3174}, {&#34;name&#34;: &#34;FR9104&#34;, &#34;size&#34;: 7881}, {&#34;name&#34;: &#34;FR05634&#34;, &#34;size&#34;: 12870}, {&#34;name&#34;: &#34;FR18348932&#34;, &#34;size&#34;: 2728}, {&#34;name&#34;: &#34;FR09384&#34;, &#34;size&#34;: 12348}, {&#34;name&#34;: &#34;FR12493&#34;, &#34;size&#34;: 870}, {&#34;name&#34;: &#34;US129439&#34;, &#34;size&#34;: 9121}, {&#34;name&#34;: &#34;FR093043&#34;, &#34;size&#34;: 9191} ] }, { &#34;name&#34;: &#34;FR32894&#34;, &#34;size&#34;: 5219 }, { &#34;name&#34;: &#34;GR273847283&#34;, &#34;size&#34;: 9956 }, { &#34;name&#34;: &#34;IE724893&#34;, &#34;size&#34;: 1286 }, { &#34;name&#34;: &#34;IT72384923879&#34;, &#34;children&#34;: [ {&#34;name&#34;: &#34;IT832942&#34;, &#34;size&#34;: 1041}, {&#34;name&#34;: &#34;IT2384932&#34;, &#34;size&#34;: 5593} ] }, { &#34;name&#34;: &#34;IT123123&#34;, &#34;size&#34;: 870 }, { &#34;name&#34;: &#34;LU2352&#34;, &#34;size&#34;: 9191 }, { &#34;name&#34;: &#34;LU65398&#34;, &#34;size&#34;: 2490 }, { &#34;name&#34;: &#34;NL73492&#34;, &#34;size&#34;: 2023 }, { &#34;name&#34;: &#34;PT1313&#34;, &#34;size&#34;: 16540 } ] }&#39;;

  root = JSON.parse(data);
  root.x0 = height / 2;
  root.y0 = 0;

  function collapse(d) {
    if (d.children) {
      d._children = d.children;
      d._children.forEach(collapse);
      d.children = null;
    }
  }

root.children.forEach(collapse);
update(root);

d3.select(self.frameElement).style(&#34;height&#34;, &#34;800px&#34;);

function update(source) {

  // Compute the new tree layout.
  var nodes = tree.nodes(root).reverse(),
      links = tree.links(nodes);

  // Normalize for fixed-depth.
  nodes.forEach(function(d) { d.y = d.depth * 180; });

  // Update the nodes…
  var node = svg.selectAll(&#34;g.node&#34;)
      .data(nodes, function(d) { return d.id || (d.id = ++i); });

  // Enter any new nodes at the parent&#39;s previous position.
  var nodeEnter = node.enter().append(&#34;g&#34;)
      .attr(&#34;class&#34;, &#34;node&#34;)
      .attr(&#34;transform&#34;, function(d) { return &#34;translate(&#34; + source.y0 + &#34;,&#34; + source.x0 + &#34;)&#34;; })
      .on(&#34;click&#34;, click);

  nodeEnter.append(&#34;circle&#34;)
      .attr(&#34;r&#34;, 1e-6)
      .style(&#34;fill&#34;, function(d) { return d._children ? &#34;lightsteelblue&#34; : &#34;#fff&#34;; });

  nodeEnter.append(&#34;text&#34;)
      .attr(&#34;x&#34;, function(d) { return d.children || d._children ? -10 : 10; })
      .attr(&#34;dy&#34;, &#34;.35em&#34;)
      .attr(&#34;text-anchor&#34;, function(d) { return d.children || d._children ? &#34;end&#34; : &#34;start&#34;; })
      .text(function(d) { return d.name; })
      .style(&#34;fill-opacity&#34;, 1e-6);

  // Transition nodes to their new position.
  var nodeUpdate = node.transition()
      .duration(duration)
      .attr(&#34;transform&#34;, function(d) { return &#34;translate(&#34; + d.y + &#34;,&#34; + d.x + &#34;)&#34;; });

  nodeUpdate.select(&#34;circle&#34;)
      .attr(&#34;r&#34;, 4.5)
      .style(&#34;fill&#34;, function(d) { return d._children ? &#34;lightsteelblue&#34; : &#34;#fff&#34;; });

  nodeUpdate.select(&#34;text&#34;)
      .style(&#34;fill-opacity&#34;, 1);

  // Transition exiting nodes to the parent&#39;s new position.
  var nodeExit = node.exit().transition()
      .duration(duration)
      .attr(&#34;transform&#34;, function(d) { return &#34;translate(&#34; + source.y + &#34;,&#34; + source.x + &#34;)&#34;; })
      .remove();

  nodeExit.select(&#34;circle&#34;)
      .attr(&#34;r&#34;, 1e-6);

  nodeExit.select(&#34;text&#34;)
      .style(&#34;fill-opacity&#34;, 1e-6);

  // Update the links…
  var link = svg.selectAll(&#34;path.link&#34;)
      .data(links, function(d) { return d.target.id; });

  // Enter any new links at the parent&#39;s previous position.
  link.enter().insert(&#34;path&#34;, &#34;g&#34;)
      .attr(&#34;class&#34;, &#34;link&#34;)
      .attr(&#34;d&#34;, function(d) {
        var o = {x: source.x0, y: source.y0};
        return diagonal({source: o, target: o});
      });

  // Transition links to their new position.
  link.transition()
      .duration(duration)
      .attr(&#34;d&#34;, diagonal);

  // Transition exiting nodes to the parent&#39;s new position.
  link.exit().transition()
      .duration(duration)
      .attr(&#34;d&#34;, function(d) {
        var o = {x: source.x, y: source.y};
        return diagonal({source: o, target: o});
      })
      .remove();

  // Stash the old positions for transition.
  nodes.forEach(function(d) {
    d.x0 = d.x;
    d.y0 = d.y;
  });
}

// Toggle children on click.
function click(d) {
  if (d.children) {
    d._children = d.children;
    d.children = null;
  } else {
    d.children = d._children;
    d._children = null;
  }
  update(d);
}

&lt;/script&gt;


&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Note that in the below we go through everything irrespective of the actual context of the parent-child-relationships. &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;The examples of packages/libraries we have given is just a small selection of available packages in both languages. &lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>A Markdown Crash-Course</title>
      <link>/post/2018-03-09-a-markdown-crash-course/</link>
      <pubDate>Thu, 01 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018-03-09-a-markdown-crash-course/</guid>
      <description>&lt;p&gt;Markdown-syntax has already crossed my path both when producing reproducible reports using Jupyter and R Markdown notebooks.&lt;/p&gt;
&lt;p&gt;To check it&amp;rsquo;s features a bit more comprehensively I decided to make an exercise out of it and go through a detailed blog-post that I found on &lt;a href=&#34;https://ghost.org/de/&#34;&gt;ghost.org&lt;/a&gt;. The article is called &lt;a href=&#34;https://blog.ghost.org/markdown/&#34;&gt;How to Write Faster, Better &amp;amp; Longer: The Ultimate Guide to Markdown&lt;/a&gt;. Below will find all the snippets that I tried out myself while going through their article:&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;quick&lt;/em&gt; brown fox, jumped &lt;strong&gt;over&lt;/strong&gt; the lazy &lt;a href=&#34;https://en.wikipedia.org/wiki/Dog&#34;&gt;dog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Porchetta short loin chicken shoulder pork belly swine. Ground round biltong alcatra sausage pastrami kielbasa tenderloin filet mignon frankfurter capicola leberkas beef pig pork belly. Flank pork prosciutto sausage shankle shoulder swine burgdoggen drumstick. Turkey leberkas pancetta meatball porchetta ribeye buffalo sausage corned beef cupim meatloaf. Shoulder picanha burgdoggen spare ribs, kevin pastrami alcatra jowl kielbasa ground round turkey hamburger ribeye andouille tenderloin. Jerky rump kielbasa, pastrami tri-tip salami tenderloin short ribs meatloaf turducken beef ribs tail jowl.&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;basic-markdown-formatting&#34;&gt;Basic Markdown Formatting&lt;/h1&gt;
&lt;p&gt;Here are the elements we&amp;rsquo;ll use most often:&lt;/p&gt;
&lt;h2 id=&#34;headings&#34;&gt;Headings&lt;/h2&gt;
&lt;h1 id=&#34;heading-1&#34;&gt;Heading 1&lt;/h1&gt;
&lt;h2 id=&#34;heading-2&#34;&gt;Heading 2&lt;/h2&gt;
&lt;h3 id=&#34;heading-3&#34;&gt;Heading 3&lt;/h3&gt;
&lt;h4 id=&#34;heading-4&#34;&gt;Heading 4&lt;/h4&gt;
&lt;h2 id=&#34;text&#34;&gt;Text&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;italic&lt;/em&gt;
&lt;strong&gt;bold&lt;/strong&gt;
&lt;em&gt;&lt;strong&gt;bold-italic&lt;/strong&gt;&lt;/em&gt;
&lt;a href=&#34;http://www.orf.at&#34;&gt;link&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;images&#34;&gt;Images&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;http://via.placeholder.com/350x150&#34; alt=&#34;m&amp;rsquo;lady&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;unordered-lists&#34;&gt;Unordered Lists&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Milk&lt;/li&gt;
&lt;li&gt;Bread
&lt;ul&gt;
&lt;li&gt;Wholegrain&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Butter&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ordered-lists&#34;&gt;Ordered Lists&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Tidy the kitchen&lt;/li&gt;
&lt;li&gt;Prepare ingredients&lt;/li&gt;
&lt;li&gt;Cook delicious things&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;quotes&#34;&gt;Quotes&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;To be or not to be, that is the question.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&#34;intermediate-markdown-formatting&#34;&gt;Intermediate Markdown Formatting&lt;/h1&gt;
&lt;h2 id=&#34;horizontal-rules&#34;&gt;Horizontal Rules&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;code-snippets&#34;&gt;Code Snippets&lt;/h2&gt;
&lt;p&gt;Some text with an inline &lt;code&gt;code&lt;/code&gt; snippet.&lt;/p&gt;
&lt;p&gt;Indenting by &lt;strong&gt;4 spaces&lt;/strong&gt; will turn an entire paragraph into a code-block (further down we will learn how to specify the language for a proper syntax-highlighing:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.my-link {
    text-decoration: underline;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;reference-lists--titles&#34;&gt;Reference Lists &amp;amp; Titles&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;The quick brown &lt;a href=&#34;https://en.wikipedia.org/wiki/Fox&#34; title=&#34;Wikipedia: Fox&#34;&gt;fox&lt;/a&gt;, jumped over the lazy &lt;a href=&#34;https://en.wikipedia.org/wiki/Dog&#34; title=&#34;Wikipedia: Dog&#34;&gt;dog&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Anywhere we use a URL, we can follow it with a &lt;code&gt;&amp;quot;title in quotation marks&amp;quot;&lt;/code&gt; to generate a title attribute.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Dog&#34; title=&#34;Wikipedia: Dog&#34;&gt;Dog&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;escaping&#34;&gt;Escaping&lt;/h2&gt;
&lt;p&gt;*literally*&lt;/p&gt;
&lt;p&gt;Escaping Markdown characters with a back-slash &lt;code&gt;\&lt;/code&gt; allows us to use any characters which might be getting accidentally converted into HTML.&lt;/p&gt;
&lt;h2 id=&#34;embedding-html&#34;&gt;Embedding HTML&lt;/h2&gt;


&lt;button class=&#34;button-save large&#34;&gt; Big Fat Button &lt;/button&gt;


&lt;p&gt;Possibly the coolest feature of Markdown is that it also just supports plain old HTML.&lt;/p&gt;
&lt;p&gt;So we can drop in any HTML, sharing button JavaScript snipped or iFrame we like and it will work on the page just as normal.&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;advanced-markdown&#34;&gt;Advanced Markdown&lt;/h1&gt;
&lt;p&gt;Every example so far has been vanilla, normal Markdown. Those code snippets will work absolutely anywhere which supports Markdown syntax.&lt;/p&gt;
&lt;p&gt;Now we are going to look at some syntax which is &lt;strong&gt;not standard&lt;/strong&gt; to native Markdown (i.e., they are extensions of the language).&lt;/p&gt;
&lt;h2 id=&#34;strike-throughs-we-have-to-use-the-html-way-of-doing-it-here&#34;&gt;Strike-throughs (we have to use the html-way of doing it here)&lt;/h2&gt;


&lt;s&gt;deleted words&lt;/s&gt;


&lt;h2 id=&#34;highlights-we-have-to-use-the-html-way-of-doing-it-here&#34;&gt;Highlights (we have to use the html-way of doing it here)&lt;/h2&gt;


&lt;mark&gt;ooooh fancy&lt;/mark&gt;


&lt;h2 id=&#34;automatic-links-works&#34;&gt;Automatic Links (works)&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://ghost.org&#34;&gt;https://ghost.org&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;markdown-footnotes-works&#34;&gt;Markdown Footnotes (works)&lt;/h2&gt;
&lt;p&gt;The quick brown fox&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; jumped over the lazy dog&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;h2 id=&#34;syntax-highlighting&#34;&gt;Syntax Highlighting&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; sqlite3

&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Database&lt;/span&gt;:

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __init__(self, db):
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;conn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sqlite3&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect(db)
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cur&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cursor()
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cur&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;execute(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CREATE TABLE IF NOT EXISTS book (id INTEGER PRIMARY KEY, title text, author text, year integer, isbn integer)&amp;#34;&lt;/span&gt;)
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;commit()
        &lt;span style=&#34;color:#75715e&#34;&gt;# conn.close()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Another example using JavaScript Code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;// This .js-document is part of the udemy-class called &amp;#34;The Complete Web-Developer Bootcamp&amp;#34;.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PRINT ALL NUMBERS BETWEEN -10 AND 19&amp;#34;&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;){
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt;);
    &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;converting-html-to-markdown&#34;&gt;Converting HTML to Markdown&lt;/h1&gt;
&lt;p&gt;A &lt;a href=&#34;https://domchristie.github.io/turndown/&#34;&gt;very handy tool&lt;/a&gt; comes from Dom Christie which easily allows you to convert HTML to Markdown.&lt;/p&gt;
&lt;h1 id=&#34;best-markdown-apps&#34;&gt;Best Markdown Apps&lt;/h1&gt;
&lt;p&gt;Writing in Markdown also easily allows you to export to HTML, PDF, or a wide variety of document types.&lt;/p&gt;
&lt;p&gt;Some of the coolest Markdown editors for Mac, PC, desktop and mobile are:&lt;/p&gt;
&lt;h2 id=&#34;mac-osx-markdown-editors&#34;&gt;Mac OSX Markdown Editors&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Mou&lt;/li&gt;
&lt;li&gt;iA Writer&lt;/li&gt;
&lt;li&gt;Desk&lt;/li&gt;
&lt;li&gt;ByWord&lt;/li&gt;
&lt;li&gt;SublimeText&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;windows-pc-markdown-editors&#34;&gt;Windows PC Markdown Editors&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;WriteMonkey&lt;/li&gt;
&lt;li&gt;MarkdownPad&lt;/li&gt;
&lt;li&gt;Texts&lt;/li&gt;
&lt;li&gt;SublimeText&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;apple-ios-markdown-apps&#34;&gt;Apple iOS Markdown Apps&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Werdsmith&lt;/li&gt;
&lt;li&gt;iA Writer&lt;/li&gt;
&lt;li&gt;ByWord&lt;/li&gt;
&lt;/ul&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Foxes are red &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Dogs are usually not red &lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>Candlestick Chart using Python&#39;s Bokeh Library</title>
      <link>/post/2018-02-18-candlestick-chart-with-bokeh/</link>
      <pubDate>Mon, 19 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018-02-18-candlestick-chart-with-bokeh/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In today&amp;rsquo;s post we want to go through the creation of a chart using Python&amp;rsquo;s bokeh-library following an amazing tutorial by Ardit Sulce who is maintaining the website &lt;a href=&#34;https://pythonhow.com/&#34;&gt;PythonHow.com&lt;/a&gt; and also the creator of an amazing class on &lt;a href=&#34;https://www.udemy.com/the-python-mega-course/learn/v4/&#34;&gt;udemy&lt;/a&gt;. Along the way we will have a look at how to efficiently retrieve stock-market data directly from within python.&lt;/p&gt;
&lt;h2 id=&#34;generating-plot-locally&#34;&gt;Generating Plot Locally&lt;/h2&gt;
&lt;p&gt;To download stock-market data directly into our python-script we use &lt;code&gt;pandas_datareader&lt;/code&gt; (which used to be a module on the &lt;code&gt;pandas&lt;/code&gt; library). To be able to use it we have to install it (either globally or within our virtual environment) with &lt;code&gt;pip install pandas_datareader&lt;/code&gt;. In particular we want to make use of the class &lt;code&gt;data&lt;/code&gt; from &lt;code&gt;pandas_datareader&lt;/code&gt; which comes along with the method &lt;code&gt;DataReader&lt;/code&gt; that ultimately allows us to download stock-market data.&lt;/p&gt;
&lt;p&gt;Executing &lt;code&gt;data.DataReader?&lt;/code&gt; gives us an idea from the various sources from which we can download stock market data. We fetch the data by executing the following command (note that we also imported the datetime-library and store the start- and end-date for which we want to retrieve stock-market data in distinct variables because the &lt;code&gt;data.DataReader&lt;/code&gt; - object expects a datetime-object for start- and end-date).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pandas_datareader &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; data
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime

start &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime(&lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
end &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime(&lt;span style=&#34;color:#ae81ff&#34;&gt;2016&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataReader(name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GOOG&amp;#34;&lt;/span&gt;, data_source &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;google&amp;#34;&lt;/span&gt;, start&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;start, end&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;end)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If we execute &lt;code&gt;type(data.DataReader(name = &amp;quot;GOOG&amp;quot;, data_source = &amp;quot;google&amp;quot;, start=start, end=end))&lt;/code&gt; we see that the object that is instantiated is a &lt;code&gt;pandas&lt;/code&gt; - dataframe. If we further print &lt;code&gt;df&lt;/code&gt; to the screen we can inspect the header of our data:&lt;/p&gt;


&lt;div class=&#34;output_subarea&#34;&gt;&lt;div&gt;
&lt;style scoped=&#34;&#34;&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Open&lt;/th&gt;
      &lt;th&gt;High&lt;/th&gt;
      &lt;th&gt;Low&lt;/th&gt;
      &lt;th&gt;Close&lt;/th&gt;
      &lt;th&gt;Volume&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Date&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;2015-11-02&lt;/th&gt;
      &lt;td&gt;711.06&lt;/td&gt;
      &lt;td&gt;721.62&lt;/td&gt;
      &lt;td&gt;705.85&lt;/td&gt;
      &lt;td&gt;721.11&lt;/td&gt;
      &lt;td&gt;1871073&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2015-11-03&lt;/th&gt;
      &lt;td&gt;718.86&lt;/td&gt;
      &lt;td&gt;724.65&lt;/td&gt;
      &lt;td&gt;714.72&lt;/td&gt;
      &lt;td&gt;722.16&lt;/td&gt;
      &lt;td&gt;1560770&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2015-11-04&lt;/th&gt;
      &lt;td&gt;722.00&lt;/td&gt;
      &lt;td&gt;733.10&lt;/td&gt;
      &lt;td&gt;721.90&lt;/td&gt;
      &lt;td&gt;728.11&lt;/td&gt;
      &lt;td&gt;1704575&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2015-11-05&lt;/th&gt;
      &lt;td&gt;729.47&lt;/td&gt;
      &lt;td&gt;739.48&lt;/td&gt;
      &lt;td&gt;729.47&lt;/td&gt;
      &lt;td&gt;731.25&lt;/td&gt;
      &lt;td&gt;1860367&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2015-11-06&lt;/th&gt;
      &lt;td&gt;731.50&lt;/td&gt;
      &lt;td&gt;735.41&lt;/td&gt;
      &lt;td&gt;727.01&lt;/td&gt;
      &lt;td&gt;733.76&lt;/td&gt;
      &lt;td&gt;1509656&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;The candlestick chart now is typically a way to represent the price movements of a security/derivative/currency throughout the day whereby each bar represents four important prices of a certain day: open, close, high and low (note that their appearance reminds of box-plots while the two chart-types are unrelated). All the mentioned prices are already available in our dataframe.&lt;/p&gt;
&lt;p&gt;In the following we want to re-build &amp;lsquo;candlesticks&amp;rsquo; using Bokeh quadrants. For this we first need to import the required module from &lt;code&gt;bokeh&lt;/code&gt; (simply add them to the other imported modules at the top of your script):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; bokeh.plotting &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; figure, show, output_file
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next, we instantiate an empty &lt;code&gt;figure&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; figure(x_axis_type &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datetime&amp;#39;&lt;/span&gt;, width&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;, height &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;300&lt;/span&gt;, responsive &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; True)
p&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Candlestick Chart&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that we have added the &lt;code&gt;responsive&lt;/code&gt; - parameter to the figure-object above so that the chart adjusts with the window-size.&lt;/p&gt;
&lt;p&gt;The next question would be of how to draw the quadrants. For this we will make use of the &lt;code&gt;rect&lt;/code&gt; method of our instantiated &lt;code&gt;figure&lt;/code&gt; which we have called &lt;code&gt;p&lt;/code&gt; here. Further we need to build two sets of rectangles (for days where the opening price was higher than the closing price vs. days where the closing price was higher than the opening price).&lt;/p&gt;
&lt;p&gt;To be able to build the rectangles we need to pass four mandatory parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;x-coordinate of the central point&lt;/li&gt;
&lt;li&gt;y-coordinate of the central point&lt;/li&gt;
&lt;li&gt;width&lt;/li&gt;
&lt;li&gt;height.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To make the entire code and the generation of the two rectangles slightly more elegant, we add the following intermediate function and intermediate results:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;inc_dec&lt;/span&gt;(c, o):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; c &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; o:
        value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Increase&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; c &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; o:
        value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Decrease&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Equal&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; value
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The above function returns &amp;ldquo;Increase&amp;rdquo;, &amp;ldquo;Decrease&amp;rdquo; or &amp;ldquo;Equal&amp;rdquo; depending on which of the two input-parameters is higher. This furter allows us to add a &lt;code&gt;Status&lt;/code&gt; - column to our data-frame as making use of exactly this function as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Status&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [inc_dec(c, o) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; c, o &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; zip(df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Close, df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Open)]
df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Middle&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Open &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Close)&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Height&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; abs(df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Close &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Open)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In addition, in the above we create two additional columns &lt;code&gt;Middle&lt;/code&gt; and &lt;code&gt;Height&lt;/code&gt; which we&amp;rsquo;ll then simply use in the generation of the rectangles which can then be created as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# we use fill_color light-blue for days where the price increased;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# only look at days where close is greater than opening&lt;/span&gt;
p&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rect(df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index[df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Status&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Increase&amp;#34;&lt;/span&gt;], df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Middle[df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Status&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Increase&amp;#34;&lt;/span&gt;], hours_12, df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Height[df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Status&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Increase&amp;#34;&lt;/span&gt;],
       fill_color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#CCFFFF&amp;#34;&lt;/span&gt;, line_color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;black&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;# we use fill_color red for days where the price decreased&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# only looking at days where opening is greater than close&lt;/span&gt;
p&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rect(df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index[df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Status&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Decrease&amp;#34;&lt;/span&gt;], df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Middle[df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Status&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Decrease&amp;#34;&lt;/span&gt;], hours_12, df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Height[df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Status&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Decrease&amp;#34;&lt;/span&gt;],
       fill_color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#FF3333&amp;#34;&lt;/span&gt;, line_color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;black&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Looking at our &lt;code&gt;df&lt;/code&gt;we can see the three additional columns:&lt;/p&gt;


&lt;div class=&#34;output_subarea&#34;&gt;&lt;div&gt;
&lt;style scoped=&#34;&#34;&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Open&lt;/th&gt;
      &lt;th&gt;High&lt;/th&gt;
      &lt;th&gt;Low&lt;/th&gt;
      &lt;th&gt;Close&lt;/th&gt;
      &lt;th&gt;Volume&lt;/th&gt;
      &lt;th&gt;Status&lt;/th&gt;
      &lt;th&gt;Middle&lt;/th&gt;
      &lt;th&gt;Height&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Date&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;2015-11-02&lt;/th&gt;
      &lt;td&gt;711.06&lt;/td&gt;
      &lt;td&gt;721.62&lt;/td&gt;
      &lt;td&gt;705.85&lt;/td&gt;
      &lt;td&gt;721.11&lt;/td&gt;
      &lt;td&gt;1871073&lt;/td&gt;
      &lt;td&gt;Increase&lt;/td&gt;
      &lt;td&gt;716.085&lt;/td&gt;
      &lt;td&gt;10.05&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2015-11-03&lt;/th&gt;
      &lt;td&gt;718.86&lt;/td&gt;
      &lt;td&gt;724.65&lt;/td&gt;
      &lt;td&gt;714.72&lt;/td&gt;
      &lt;td&gt;722.16&lt;/td&gt;
      &lt;td&gt;1560770&lt;/td&gt;
      &lt;td&gt;Increase&lt;/td&gt;
      &lt;td&gt;720.510&lt;/td&gt;
      &lt;td&gt;3.30&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2015-11-04&lt;/th&gt;
      &lt;td&gt;722.00&lt;/td&gt;
      &lt;td&gt;733.10&lt;/td&gt;
      &lt;td&gt;721.90&lt;/td&gt;
      &lt;td&gt;728.11&lt;/td&gt;
      &lt;td&gt;1704575&lt;/td&gt;
      &lt;td&gt;Increase&lt;/td&gt;
      &lt;td&gt;725.055&lt;/td&gt;
      &lt;td&gt;6.11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2015-11-05&lt;/th&gt;
      &lt;td&gt;729.47&lt;/td&gt;
      &lt;td&gt;739.48&lt;/td&gt;
      &lt;td&gt;729.47&lt;/td&gt;
      &lt;td&gt;731.25&lt;/td&gt;
      &lt;td&gt;1860367&lt;/td&gt;
      &lt;td&gt;Increase&lt;/td&gt;
      &lt;td&gt;730.360&lt;/td&gt;
      &lt;td&gt;1.78&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2015-11-06&lt;/th&gt;
      &lt;td&gt;731.50&lt;/td&gt;
      &lt;td&gt;735.41&lt;/td&gt;
      &lt;td&gt;727.01&lt;/td&gt;
      &lt;td&gt;733.76&lt;/td&gt;
      &lt;td&gt;1509656&lt;/td&gt;
      &lt;td&gt;Increase&lt;/td&gt;
      &lt;td&gt;732.630&lt;/td&gt;
      &lt;td&gt;2.26&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;If we would want to have a look at the plot so far locally we can execute the below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;output_file(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Candlestick.html&amp;#34;&lt;/span&gt;)
show(p)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;There are two additional enhancements that we want to add:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We modify the grid-lines and&lt;/li&gt;
&lt;li&gt;add the segments to finish the candlestick-charts.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;p&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grid&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grid_line_alpha&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.3&lt;/span&gt;

p&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;segment(df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index, df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;High, df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index, df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Low, color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Black&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The entire code then looks as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pandas_datareader &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; data
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; bokeh.plotting &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; figure, show, output_file
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; bokeh.embed &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; components
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; bokeh.resources &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; CDN

start &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime(&lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
end &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime(&lt;span style=&#34;color:#ae81ff&#34;&gt;2016&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataReader(name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GOOG&amp;#34;&lt;/span&gt;, data_source &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;google&amp;#34;&lt;/span&gt;, start&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;start, end&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;end)

&lt;span style=&#34;color:#75715e&#34;&gt;# date_increase = df.index[df.Close &amp;gt; df.Open]&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# date_decrease = df.index[df.Close &amp;lt; df.Open]&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;inc_dec&lt;/span&gt;(c, o):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; c &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; o:
        value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Increase&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; c &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; o:
        value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Decrease&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Equal&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; value

df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Status&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [inc_dec(c, o) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; c, o &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; zip(df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Close, df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Open)]
df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Middle&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Open &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Close)&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Height&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; abs(df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Close &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Open)

p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; figure(x_axis_type &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datetime&amp;#39;&lt;/span&gt;, width&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;, height &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;300&lt;/span&gt;, responsive &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; True)
p&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Candlestick Chart&amp;#34;&lt;/span&gt;
p&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grid&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grid_line_alpha&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.3&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# we create a variable that stores the value for 12 hours in milliseconds&lt;/span&gt;
hours_12 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;

p&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;segment(df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index, df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;High, df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index, df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Low, color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Black&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;# we use fill_color light-blue for days where the price increased;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# only look at days where close is greater than opening&lt;/span&gt;
p&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rect(df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index[df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Status&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Increase&amp;#34;&lt;/span&gt;], df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Middle[df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Status&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Increase&amp;#34;&lt;/span&gt;], hours_12, df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Height[df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Status&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Increase&amp;#34;&lt;/span&gt;],
       fill_color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#CCFFFF&amp;#34;&lt;/span&gt;, line_color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;black&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;# we use fill_color red for days where the price decreased&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# only looking at days where opening is greater than close&lt;/span&gt;
p&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rect(df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index[df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Status&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Decrease&amp;#34;&lt;/span&gt;], df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Middle[df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Status&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Decrease&amp;#34;&lt;/span&gt;], hours_12, df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Height[df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Status&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Decrease&amp;#34;&lt;/span&gt;],
       fill_color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#FF3333&amp;#34;&lt;/span&gt;, line_color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;black&amp;#34;&lt;/span&gt;)



&lt;span style=&#34;color:#75715e&#34;&gt;# if we want to output the file locally:&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# output_file(&amp;#34;Candlestick.html&amp;#34;)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# show(p)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;embed-chart-in-webpage&#34;&gt;Embed Chart in Webpage&lt;/h2&gt;
&lt;p&gt;The last thing we want to do is to embed the chart into our webpage (as you can see below) and now only have a look at it locally.&lt;/p&gt;
&lt;p&gt;If we would inspect (in Chrome click &lt;code&gt;Cmd+Option+C&lt;/code&gt; on a Mac) the generated &amp;ldquo;Candlestick.html&amp;rdquo; output from above, we could see the entire source-code that generates the graph. More specifically, we would see the html-code that is rendering the chart-area as well as the javascript-code in the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; of our page that holds the data that is being rendered in the chart. In addition, in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; - tag we see a link to a particular bokeh-css-file as well as a corresponding bokeh javascript-file which constructs all the elements of the chart (as shown below):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;link rel&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;stylesheet&amp;#34;&lt;/span&gt; href&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://cdn.pydata.org/bokeh/release/bokeh-0.12.5.min.css&amp;#34;&lt;/span&gt; type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text/css&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;script type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text/javascript&amp;#34;&lt;/span&gt; src&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://cdn.pydata.org/bokeh/release/bokeh-0.12.5.min.js&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;script&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This means that we need to grab all the above mentioned elements out of the generated chart.&lt;/p&gt;
&lt;p&gt;To grab those elements we can use a function called &lt;code&gt;components&lt;/code&gt; which is part of the &lt;code&gt;embed&lt;/code&gt; - interface of bokeh. To be able to use this, we have to import the respective module in the header of our script:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; bokeh.embed &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; components
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then we can pass the figure-object &lt;code&gt;p&lt;/code&gt; into &lt;code&gt;components&lt;/code&gt; and store the result (the source-code which is a tuple including the javascript- and html-code):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;script1, div1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; components(p)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;script1&lt;/code&gt; contains the entire javascript-code, &lt;code&gt;div1&lt;/code&gt; contains the html-structure and tags (which are both nothing other than string-objects).&lt;/p&gt;
&lt;p&gt;To retrieve the links to the &lt;code&gt;css&lt;/code&gt;-link and &lt;code&gt;js&lt;/code&gt;-script in the header, we can generate those two links using a final module called &lt;code&gt;CDN&lt;/code&gt;(CDN stands for &amp;lsquo;Content Delivery Network&amp;rsquo;). We have to import &lt;code&gt;CDN&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; bokeh.resources &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; CDN
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and can then create two variables:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;cdn_js &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; CDN&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;js_files
cdn_css &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; CDN&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css_files
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Inspecting &lt;code&gt;cdn_js&lt;/code&gt; reveals that we have a list of three links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;basic bokeh javascript,&lt;/li&gt;
&lt;li&gt;bokeh widgets (which we will not make use of), and&lt;/li&gt;
&lt;li&gt;bokeh css.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All those elements then allow us to embed our plot in a dedicated webpage as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;assuming that we have built our web-app with python&amp;rsquo;s flask-library, we would have to add a dedicated route where we would execute the entire code that generates the plot from above:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@app.route&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/plot/&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;plot&lt;/span&gt;():
    &lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pandas_datareader &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; data
    &lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; bokeh.plotting &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; figure, show, output_file
    &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime
    &lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; bokeh.embed &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; components

    &lt;span style=&#34;color:#75715e&#34;&gt;# rest of code placed here!&lt;/span&gt;
    [&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;]

    script1, div1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; components(p)
    cdn_js &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; CDN&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;js_files[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
    cdn_css &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; CDN&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css_files[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; render_template(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;plot.html&amp;#34;&lt;/span&gt;,
            script1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; script1, div1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;div1,
            cdn_css &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cdn_css, cdn_js&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cdn_js)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Being executed in the back-end of our flask-app, the generated variables from our python-script can then be handed over to the following template called, e.g., plot.html (note that we assume that you have a webpage with a layout-template and the &lt;code&gt;plot.html&lt;/code&gt; just inherits from the &lt;code&gt;layout.html&lt;/code&gt; as specified below):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-raw&#34; data-lang=&#34;raw&#34;&gt;{%extends &amp;quot;layout.html&amp;quot;%}
{%block content%}
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href={{cdn_css | safe}} type=&amp;quot;text/css&amp;quot; /&amp;gt;
&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src={{cdn_js | safe}}&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;div class=&amp;quot;plot&amp;quot;&amp;gt;
    &amp;lt;h1&amp;gt;A Plot &amp;lt;/h1&amp;gt;
    &amp;lt;p&amp;gt;...produced with Python&#39;s Bokeh - library.&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
{{script1 | safe}}
{{div1| safe }}
{%endblock%}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The final plot is embedded below:&lt;/p&gt;


&lt;html lang=&#34;en&#34;&gt;
    &lt;head&gt;
        &lt;meta charset=&#34;utf-8&#34;&gt;
        &lt;title&gt;Bokeh Plot&lt;/title&gt;

        &lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.pydata.org/bokeh/release/bokeh-0.12.5.min.css&#34; type=&#34;text/css&#34; /&gt;

        &lt;script type=&#34;text/javascript&#34; src=&#34;https://cdn.pydata.org/bokeh/release/bokeh-0.12.5.min.js&#34;&gt;&lt;/script&gt;
        &lt;script type=&#34;text/javascript&#34;&gt;
            Bokeh.set_log_level(&#34;info&#34;);
        &lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;div class=&#34;bk-root&#34;&gt;
            &lt;div class=&#34;bk-plotdiv&#34; id=&#34;f336028c-8560-42cf-8737-d1d2f30fc69c&#34;&gt;&lt;/div&gt;
        &lt;/div&gt;

        &lt;script type=&#34;text/javascript&#34;&gt;
            (function() {
          var fn = function() {
            Bokeh.safely(function() {
              var docs_json = {&#34;461f3f5e-9e25-413d-bb77-526d00d3116e&#34;:{&#34;roots&#34;:{&#34;references&#34;:[{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x&#34;,&#34;y&#34;,&#34;height&#34;],&#34;data&#34;:{&#34;height&#34;:{&#34;__ndarray__&#34;:&#34;wHoUrkdhLkCA61G4HoUVQACuR+F6FBtAAM3MzMzMEkA=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;x&#34;:{&#34;__ndarray__&#34;:&#34;AADAlvcydUIAAABfODV1QgAAwMSKNXVCAACAKt01dUI=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;y&#34;:{&#34;__ndarray__&#34;:&#34;HoXrUbg5hkAK16NwPZqFQKRwPQrX7oVA9ihcj8IzhkA=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]}}},&#34;id&#34;:&#34;924bfd8a-fb05-4eb5-a2f5-6bf01a94ec68&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;c02832c8-c503-4750-83ef-9dcdd7270de9&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;7602fd5f-c3ec-42d9-972d-5f6470c96e8a&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;cb4937ce-a248-4f02-92df-66b0cea002a0&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;e834b9fb-16be-4fc4-960b-05bc023e66db&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;21a43bba-edb8-4651-87e9-a5787a796a76&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;aeda6731-d6be-4edc-9e7e-305dc8a90598&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:null,&#34;text&#34;:&#34;Candlestick Chart&#34;},&#34;id&#34;:&#34;6dfff3b4-6396-425b-a901-8b9879969e74&#34;,&#34;type&#34;:&#34;Title&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;ee42f17b-647b-41db-8387-a3ab362209aa&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;21a43bba-edb8-4651-87e9-a5787a796a76&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;c77c0177-e21f-4610-9b2d-fc6b01c52cba&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;6c97cdb7-6ef3-4752-ac90-e391af0fe3de&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;bottom_units&#34;:&#34;screen&#34;,&#34;fill_alpha&#34;:{&#34;value&#34;:0.5},&#34;fill_color&#34;:{&#34;value&#34;:&#34;lightgrey&#34;},&#34;left_units&#34;:&#34;screen&#34;,&#34;level&#34;:&#34;overlay&#34;,&#34;line_alpha&#34;:{&#34;value&#34;:1.0},&#34;line_color&#34;:{&#34;value&#34;:&#34;black&#34;},&#34;line_dash&#34;:[4,4],&#34;line_width&#34;:{&#34;value&#34;:2},&#34;plot&#34;:null,&#34;render_mode&#34;:&#34;css&#34;,&#34;right_units&#34;:&#34;screen&#34;,&#34;top_units&#34;:&#34;screen&#34;},&#34;id&#34;:&#34;1f0ad273-3824-4415-bfd6-3c77d006d045&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;attributes&#34;:{&#34;fill_color&#34;:{&#34;value&#34;:&#34;red&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;7602fd5f-c3ec-42d9-972d-5f6470c96e8a&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;b5698c4b-9614-41fa-bea2-6a942a905317&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;5e94ebb3-552d-48a3-ab34-a80cafd0f59f&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;attributes&#34;:{&#34;active_drag&#34;:&#34;auto&#34;,&#34;active_scroll&#34;:&#34;auto&#34;,&#34;active_tap&#34;:&#34;auto&#34;,&#34;tools&#34;:[{&#34;id&#34;:&#34;db55841a-9fb6-4d42-8476-8fa3fd25c761&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;id&#34;:&#34;209b4898-ecb3-45d9-a6c0-b4b020a5abff&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;id&#34;:&#34;18e1930a-3b06-4278-95d1-2e49413479a4&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;id&#34;:&#34;c77c0177-e21f-4610-9b2d-fc6b01c52cba&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;id&#34;:&#34;aeda6731-d6be-4edc-9e7e-305dc8a90598&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;id&#34;:&#34;3810f19f-8a7a-47ae-a58c-2ad21389b0af&#34;,&#34;type&#34;:&#34;HelpTool&#34;}]},&#34;id&#34;:&#34;e097f063-50b9-4819-8263-1e83b5c635dd&#34;,&#34;type&#34;:&#34;Toolbar&#34;},{&#34;attributes&#34;:{&#34;below&#34;:[{&#34;id&#34;:&#34;dbb64fbd-2474-490a-93b6-5c29f51a50a4&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;}],&#34;left&#34;:[{&#34;id&#34;:&#34;e839698b-f282-478b-aeed-701f9766dc9c&#34;,&#34;type&#34;:&#34;LinearAxis&#34;}],&#34;plot_height&#34;:300,&#34;plot_width&#34;:1000,&#34;renderers&#34;:[{&#34;id&#34;:&#34;dbb64fbd-2474-490a-93b6-5c29f51a50a4&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;id&#34;:&#34;6c9ef4d9-81d8-43e9-8822-e38e936de79b&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;e839698b-f282-478b-aeed-701f9766dc9c&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;id&#34;:&#34;bb1abee2-9389-4584-9538-71a2affcd475&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;8dbeba7f-e8f1-4891-876f-15536eb721da&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;id&#34;:&#34;14729697-fd5f-4e3e-ae6b-bf6effce1d9c&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;id&#34;:&#34;e38b0c83-9385-4bc4-adad-ae724629211d&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;}],&#34;title&#34;:{&#34;id&#34;:&#34;6dfff3b4-6396-425b-a901-8b9879969e74&#34;,&#34;type&#34;:&#34;Title&#34;},&#34;tool_events&#34;:{&#34;id&#34;:&#34;db79ece6-2c4e-4b8c-b5ad-3fb9806ee923&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},&#34;toolbar&#34;:{&#34;id&#34;:&#34;f2434638-09a7-4fdd-bd81-b783acadccb3&#34;,&#34;type&#34;:&#34;Toolbar&#34;},&#34;x_range&#34;:{&#34;id&#34;:&#34;9498db81-fa44-46f3-801d-cc7fa7ef6fe3&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},&#34;y_range&#34;:{&#34;id&#34;:&#34;320fcb2e-43f7-425f-88aa-d89d7820abe4&#34;,&#34;type&#34;:&#34;DataRange1d&#34;}},&#34;id&#34;:&#34;231076e5-9f5d-407c-9891-3c2c2e882314&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;252b0b34-39cc-4f02-8c2a-3fefc319ffe8&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;49049281-650c-4590-959c-d40138d3353d&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;25bc1666-8b6c-4a13-bc5c-299f0f5835b1&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;ecc2260e-3a3c-4345-bfce-46eeb69c5650&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;attributes&#34;:{&#34;overlay&#34;:{&#34;id&#34;:&#34;1f0ad273-3824-4415-bfd6-3c77d006d045&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;b5698c4b-9614-41fa-bea2-6a942a905317&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;7e1ee265-aec9-48bd-9f83-a44e9f2d693a&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;attributes&#34;:{&#34;fill_alpha&#34;:{&#34;value&#34;:0.1},&#34;fill_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;8a889acf-3b20-4048-8266-a1bdb82f10cb&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;b5698c4b-9614-41fa-bea2-6a942a905317&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;73cd6752-dfe8-456c-9977-f9d81d9fcb35&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;attributes&#34;:{&#34;bottom_units&#34;:&#34;screen&#34;,&#34;fill_alpha&#34;:{&#34;value&#34;:0.5},&#34;fill_color&#34;:{&#34;value&#34;:&#34;lightgrey&#34;},&#34;left_units&#34;:&#34;screen&#34;,&#34;level&#34;:&#34;overlay&#34;,&#34;line_alpha&#34;:{&#34;value&#34;:1.0},&#34;line_color&#34;:{&#34;value&#34;:&#34;black&#34;},&#34;line_dash&#34;:[4,4],&#34;line_width&#34;:{&#34;value&#34;:2},&#34;plot&#34;:null,&#34;render_mode&#34;:&#34;css&#34;,&#34;right_units&#34;:&#34;screen&#34;,&#34;top_units&#34;:&#34;screen&#34;},&#34;id&#34;:&#34;e34f8b41-1690-4723-9af8-2caa6f0c1b91&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;21a43bba-edb8-4651-87e9-a5787a796a76&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;209b4898-ecb3-45d9-a6c0-b4b020a5abff&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;attributes&#34;:{&#34;fill_alpha&#34;:{&#34;value&#34;:0.1},&#34;fill_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;cb4937ce-a248-4f02-92df-66b0cea002a0&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x&#34;,&#34;y&#34;,&#34;height&#34;],&#34;data&#34;:{&#34;height&#34;:{&#34;__ndarray__&#34;:&#34;gArXo3A9FUDAo3A9ClcoQABSuB6F6w9AAIjrUbge1T8A7FG4HoX3PwD2KFyPwg1AgKNwPQrXGEAArkfhehQaQIA9Ctej8CpAAK5H4XoUEkAACtejcD0eQACF61G4HgtAALgehetRAkBAMzMzMzMjQIAUrkfh+ilAAM3MzMzMHEAAZmZmZmb6PwDiehSuRwlAAGZmZmZm8j+AZmZmZmYWQEAK16NwPSVAAML1KFyP8j8AKVyPwvUOQACPwvUoXA9AgBSuR+H6MEAAxPUoXI/iPyDXo3A9Sj5AAFyPwvUo+D+AuB6F69EnQABUuB6F6+k/QI/C9ShcK0CgmZmZmdkzQMD1KFyPokVAgJmZmZmZLUDAzMzMzEw0QABSuB6F6wVAgD0K16NwH0AASOF6FK7/P8DMzMzMTClAAEjhehSu7z+AZmZmZmYWQACuR+F6FAxAAGdmZmZmBEAAMDMzMzPDPwDXo3A9ChlAgGZmZmZmEECAFK5H4XonQA==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[47]},&#34;x&#34;:{&#34;__ndarray__&#34;:&#34;AAAArZgOdUIAAABE4g91QgAAANsrEXVCAACAptARdUIAAIA9GhN1QgAAQKNsE3VCAADABVsVdUIAAEDR/xV1QgAAADdSFnVCAAAAzpsXdUIAAICZQBh1QgAAQP+SGHVCAAAAZeUYdUIAAAD8Lhp1QgAAgMfTGnVCAABALSYbdUIAAEDEbxx1QgAAACrCHHVCAADAjxQddUIAAEDyAh91QgAAAFhVH3VCAAAA754gdUIAAMBU8SB1QgAAQCCWIXVCAAAAhughdUIAAEC33yJ1QgAAwIKEI3VCAABA5XIldUIAAMBHYSd1QgAAgK2zJ3VCAABAEwYodUIAAMB19Cl1QgAAgNtGKnVCAABAQZkqdUIAAACn6yp1QgAAwKOHLHVCAABAbywtdUIAAEAGdi51QgAAwNEaL3VCAADAaGQwdUIAAIDOtjB1QgAAwP+tMXVCAAAAMaUydUIAAID8STN1QgAAQGKcM3VCAAAAyO4zdUIAAED55TR1Qg==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[47]},&#34;y&#34;:{&#34;__ndarray__&#34;:&#34;kML1KFy8hkBI4XoUrpiGQI/C9ShcuoZAmpmZmZkUh0AfhetRuKWHQIXrUbgecYdAcD0K16NNh0CF61G4Hu2HQDMzMzMzuodArkfhehTsh0CF61G4HpuHQArXo3A9eYdAhetRuB4gh0CamZmZmWGHQGZmZmZmn4dA4XoUrkc3h0CamZmZmXaHQIXrUbgef4dAzMzMzMxnh0BmZmZmZi6IQOxRuB6F4YdAkML1KFwzh0CG61G4HkSHQMzMzMzMwoZASOF6FK6XhkDC9Shcj2KGQHA9CtejXYZAj8L1KFz0hUAAAAAAAG2GQML1KFyPS4ZAcD0K16MWhkCamZmZmTSIQEjhehSuZIdA4XoUrkdbhkD2KFyPwq2FQFK4HoXra4VAcD0K16NyhUBSuB6F65+FQGZmZmZm/YVAcT0K16MXhkA0MzMzM9WFQJqZmZmZFoZAkML1KFzYhUBmZmZmZneGQGZmZmZmXIZA7FG4HoVHhkAK16NwPeiFQA==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[47]}}},&#34;id&#34;:&#34;f9db7f68-92a7-448c-875e-d0232f8beee4&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;ffe52fd4-64a3-442e-bbc3-3ec075017b51&#34;,&#34;type&#34;:&#34;YearsTicker&#34;},{&#34;attributes&#34;:{&#34;below&#34;:[{&#34;id&#34;:&#34;3bc6421e-52d0-4763-97ca-c40dff32a332&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;}],&#34;left&#34;:[{&#34;id&#34;:&#34;e2590152-4fb5-4e8a-be0b-9811e8ba2b1a&#34;,&#34;type&#34;:&#34;LinearAxis&#34;}],&#34;plot_height&#34;:300,&#34;plot_width&#34;:1000,&#34;renderers&#34;:[{&#34;id&#34;:&#34;3bc6421e-52d0-4763-97ca-c40dff32a332&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;id&#34;:&#34;e1c0a290-7c73-4517-a301-6f7293cdbd30&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;e2590152-4fb5-4e8a-be0b-9811e8ba2b1a&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;id&#34;:&#34;197273ba-41dd-4e39-a0f2-785b97938291&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;e34f8b41-1690-4723-9af8-2caa6f0c1b91&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;id&#34;:&#34;8e9be562-63a3-40cf-af6f-4c3fefaf0165&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;id&#34;:&#34;63c50434-f09b-4a4e-9d90-157933151f1e&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;}],&#34;title&#34;:{&#34;id&#34;:&#34;d05bc5af-f70b-421b-a3f8-4a15aa43a6bb&#34;,&#34;type&#34;:&#34;Title&#34;},&#34;tool_events&#34;:{&#34;id&#34;:&#34;8fa30519-009b-403a-b831-3ca86272a36d&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},&#34;toolbar&#34;:{&#34;id&#34;:&#34;e097f063-50b9-4819-8263-1e83b5c635dd&#34;,&#34;type&#34;:&#34;Toolbar&#34;},&#34;x_range&#34;:{&#34;id&#34;:&#34;819f8af6-6419-4b2b-81a6-da44a4ba25e6&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},&#34;y_range&#34;:{&#34;id&#34;:&#34;6c97cdb7-6ef3-4752-ac90-e391af0fe3de&#34;,&#34;type&#34;:&#34;DataRange1d&#34;}},&#34;id&#34;:&#34;21a43bba-edb8-4651-87e9-a5787a796a76&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},{&#34;attributes&#34;:{&#34;num_minor_ticks&#34;:5},&#34;id&#34;:&#34;9d01fe5b-8e6e-453c-bdd0-528cd2e32bd8&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:null,&#34;text&#34;:&#34;Candlestick Chart&#34;},&#34;id&#34;:&#34;d05bc5af-f70b-421b-a3f8-4a15aa43a6bb&#34;,&#34;type&#34;:&#34;Title&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;b5698c4b-9614-41fa-bea2-6a942a905317&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;f2b08d1b-ad56-499b-afc3-63e1eecb19e0&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;attributes&#34;:{&#34;grid_line_alpha&#34;:{&#34;value&#34;:0.3},&#34;plot&#34;:{&#34;id&#34;:&#34;21a43bba-edb8-4651-87e9-a5787a796a76&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;9d01fe5b-8e6e-453c-bdd0-528cd2e32bd8&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;e1c0a290-7c73-4517-a301-6f7293cdbd30&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{&#34;below&#34;:[{&#34;id&#34;:&#34;345ad4ec-5549-4b12-a63f-9ac2bd8039ee&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;}],&#34;left&#34;:[{&#34;id&#34;:&#34;ecc2260e-3a3c-4345-bfce-46eeb69c5650&#34;,&#34;type&#34;:&#34;LinearAxis&#34;}],&#34;plot_height&#34;:300,&#34;plot_width&#34;:1000,&#34;renderers&#34;:[{&#34;id&#34;:&#34;345ad4ec-5549-4b12-a63f-9ac2bd8039ee&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;id&#34;:&#34;750250fa-4da5-426d-896a-26a37722d85e&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;ecc2260e-3a3c-4345-bfce-46eeb69c5650&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;id&#34;:&#34;4fe1beb8-e0a5-4d27-bb49-76472a762460&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;0c686545-799d-49a6-9281-d0f949cdc5ce&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;id&#34;:&#34;9a0ac6ce-411d-4a12-a02e-ba84c1f67481&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;}],&#34;title&#34;:{&#34;id&#34;:&#34;08cc86c8-ad12-47ff-bac4-6201bd6edec7&#34;,&#34;type&#34;:&#34;Title&#34;},&#34;tool_events&#34;:{&#34;id&#34;:&#34;8c11d281-1767-4818-98b1-9790f0ca8928&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},&#34;toolbar&#34;:{&#34;id&#34;:&#34;8382364d-dd89-42d3-95cf-9608f2f30e13&#34;,&#34;type&#34;:&#34;Toolbar&#34;},&#34;x_range&#34;:{&#34;id&#34;:&#34;cd610ab2-79fb-41a1-8fea-c6dc854d5356&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},&#34;y_range&#34;:{&#34;id&#34;:&#34;b9aae0b7-5b52-4c35-a3b5-4b1e2a2ff714&#34;,&#34;type&#34;:&#34;DataRange1d&#34;}},&#34;id&#34;:&#34;49049281-650c-4590-959c-d40138d3353d&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;b5698c4b-9614-41fa-bea2-6a942a905317&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;16381e2c-2349-42f9-b2c3-5f9b2178ac5f&#34;,&#34;type&#34;:&#34;HelpTool&#34;},{&#34;attributes&#34;:{&#34;fill_color&#34;:{&#34;value&#34;:&#34;green&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;e5ed40e9-2e15-44e9-95b2-eabae5eba92b&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;4158dbb4-835e-4c06-863d-257f06245683&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;21a43bba-edb8-4651-87e9-a5787a796a76&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;9d01fe5b-8e6e-453c-bdd0-528cd2e32bd8&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;3bc6421e-52d0-4763-97ca-c40dff32a332&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;0ba1a3c4-27b1-477c-a5cf-e76f88958e32&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;49049281-650c-4590-959c-d40138d3353d&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;df307e45-b4cc-4cb2-87af-71e8d4a7a7f1&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;345ad4ec-5549-4b12-a63f-9ac2bd8039ee&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;252b0b34-39cc-4f02-8c2a-3fefc319ffe8&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;819f8af6-6419-4b2b-81a6-da44a4ba25e6&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;dimension&#34;:1,&#34;plot&#34;:{&#34;id&#34;:&#34;49049281-650c-4590-959c-d40138d3353d&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;25bc1666-8b6c-4a13-bc5c-299f0f5835b1&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;4fe1beb8-e0a5-4d27-bb49-76472a762460&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;db79ece6-2c4e-4b8c-b5ad-3fb9806ee923&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;b5698c4b-9614-41fa-bea2-6a942a905317&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;f4817193-7b8a-4f43-bc7c-ba0d545fcd32&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;8c11d281-1767-4818-98b1-9790f0ca8928&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x&#34;,&#34;y&#34;,&#34;height&#34;],&#34;data&#34;:{&#34;height&#34;:{&#34;__ndarray__&#34;:&#34;ADAzMzMzwz8A16NwPQoZQIBmZmZmZhBAgBSuR+F6J0A=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;x&#34;:{&#34;__ndarray__&#34;:&#34;AACA/EkzdUIAAEBinDN1QgAAAMjuM3VCAABA+eU0dUI=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;y&#34;:{&#34;__ndarray__&#34;:&#34;ZmZmZmZ3hkBmZmZmZlyGQOxRuB6FR4ZACtejcD3ohUA=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]}}},&#34;id&#34;:&#34;36fde260-6710-4814-9787-8bbe572e0b4f&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;active_drag&#34;:&#34;auto&#34;,&#34;active_scroll&#34;:&#34;auto&#34;,&#34;active_tap&#34;:&#34;auto&#34;,&#34;tools&#34;:[{&#34;id&#34;:&#34;c69baaaf-8d75-477a-a6a0-350a292fab48&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;id&#34;:&#34;16da96ee-6bd7-4a1b-b882-fd585b856098&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;id&#34;:&#34;eece24a5-2891-4891-a3b6-9c58d83fd3af&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;id&#34;:&#34;44408ee5-188e-4ab3-815e-13369ce78d5a&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;id&#34;:&#34;3e839278-60b9-48c8-9134-26dfdbd96245&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;id&#34;:&#34;bd5fade7-4aa1-4562-af1c-53548b5c834b&#34;,&#34;type&#34;:&#34;HelpTool&#34;}]},&#34;id&#34;:&#34;8382364d-dd89-42d3-95cf-9608f2f30e13&#34;,&#34;type&#34;:&#34;Toolbar&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;25bc1666-8b6c-4a13-bc5c-299f0f5835b1&#34;,&#34;type&#34;:&#34;BasicTicker&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;cd610ab2-79fb-41a1-8fea-c6dc854d5356&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;adc1ff79-81ba-4151-af12-a3a7fe11b733&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;8fa30519-009b-403a-b831-3ca86272a36d&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},{&#34;attributes&#34;:{&#34;dimension&#34;:1,&#34;grid_line_alpha&#34;:{&#34;value&#34;:0.3},&#34;plot&#34;:{&#34;id&#34;:&#34;21a43bba-edb8-4651-87e9-a5787a796a76&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;d2bdc96f-392b-4961-be78-09abb109efc6&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;197273ba-41dd-4e39-a0f2-785b97938291&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;49049281-650c-4590-959c-d40138d3353d&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;df307e45-b4cc-4cb2-87af-71e8d4a7a7f1&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;750250fa-4da5-426d-896a-26a37722d85e&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;21a43bba-edb8-4651-87e9-a5787a796a76&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;db55841a-9fb6-4d42-8476-8fa3fd25c761&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;0ba1a3c4-27b1-477c-a5cf-e76f88958e32&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;3dd57fbc-17f1-4cef-9ca0-87f87dbc6039&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;21a43bba-edb8-4651-87e9-a5787a796a76&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;d2bdc96f-392b-4961-be78-09abb109efc6&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;e2590152-4fb5-4e8a-be0b-9811e8ba2b1a&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;b9aae0b7-5b52-4c35-a3b5-4b1e2a2ff714&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;e7922959-137c-429f-a0f5-b7520c9a5dc1&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;e5ed40e9-2e15-44e9-95b2-eabae5eba92b&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;c41da678-65b7-4c5c-9bca-c55ffefa545f&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;9a0ac6ce-411d-4a12-a02e-ba84c1f67481&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;overlay&#34;:{&#34;id&#34;:&#34;e34f8b41-1690-4723-9af8-2caa6f0c1b91&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;21a43bba-edb8-4651-87e9-a5787a796a76&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;18e1930a-3b06-4278-95d1-2e49413479a4&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:null,&#34;text&#34;:&#34;Candlestick Chart&#34;},&#34;id&#34;:&#34;08cc86c8-ad12-47ff-bac4-6201bd6edec7&#34;,&#34;type&#34;:&#34;Title&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;d2bdc96f-392b-4961-be78-09abb109efc6&#34;,&#34;type&#34;:&#34;BasicTicker&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;49049281-650c-4590-959c-d40138d3353d&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;c69baaaf-8d75-477a-a6a0-350a292fab48&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x&#34;,&#34;y&#34;,&#34;height&#34;],&#34;data&#34;:{&#34;height&#34;:{&#34;__ndarray__&#34;:&#34;wHoUrkdhLkAAMDMzMzPDPwDXo3A9ChlAgGZmZmZmEECAFK5H4XonQIDrUbgehRVAAK5H4XoUG0AAzczMzMwSQA==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]},&#34;x&#34;:{&#34;__ndarray__&#34;:&#34;AADAlvcydUIAAABfODV1QgAAwMSKNXVCAACAKt01dUI=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;y&#34;:{&#34;__ndarray__&#34;:&#34;HoXrUbg5hkBmZmZmZneGQGZmZmZmXIZA7FG4HoVHhkAK16NwPeiFQArXo3A9moVApHA9CtfuhUD2KFyPwjOGQA==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]}}},&#34;id&#34;:&#34;e7922959-137c-429f-a0f5-b7520c9a5dc1&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;21a43bba-edb8-4651-87e9-a5787a796a76&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;3810f19f-8a7a-47ae-a58c-2ad21389b0af&#34;,&#34;type&#34;:&#34;HelpTool&#34;},{&#34;attributes&#34;:{&#34;num_minor_ticks&#34;:5},&#34;id&#34;:&#34;df307e45-b4cc-4cb2-87af-71e8d4a7a7f1&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;89da93e1-b0e0-40e0-9d4e-1d0f53d18231&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;8ee8ca7b-5da6-419a-8a2c-b72d82465172&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;dc9c3299-b911-4064-81c7-780062a0c19f&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;85a12bde-91a0-4d20-aad9-4ef0ba39e563&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;439292d3-fc67-4c58-b839-82ebea2d544f&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;cf90491a-1b33-4e60-afd7-6bc6cdf5702a&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;34fb2347-7f97-40af-81b8-c58969dd8b3a&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;c294c4e2-32f0-4c3c-8378-29bec8334dc2&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;6f2fd8ba-97ef-4187-bc55-98d0b0707155&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},{&#34;attributes&#34;:{&#34;fill_alpha&#34;:{&#34;value&#34;:0.1},&#34;fill_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;34fb2347-7f97-40af-81b8-c58969dd8b3a&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;fill_color&#34;:{&#34;value&#34;:&#34;#CCFFFF&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;cf90491a-1b33-4e60-afd7-6bc6cdf5702a&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;c0f79d7b-d8c2-4789-bb9e-1efbb6c935df&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;bottom_units&#34;:&#34;screen&#34;,&#34;fill_alpha&#34;:{&#34;value&#34;:0.5},&#34;fill_color&#34;:{&#34;value&#34;:&#34;lightgrey&#34;},&#34;left_units&#34;:&#34;screen&#34;,&#34;level&#34;:&#34;overlay&#34;,&#34;line_alpha&#34;:{&#34;value&#34;:1.0},&#34;line_color&#34;:{&#34;value&#34;:&#34;black&#34;},&#34;line_dash&#34;:[4,4],&#34;line_width&#34;:{&#34;value&#34;:2},&#34;plot&#34;:null,&#34;render_mode&#34;:&#34;css&#34;,&#34;right_units&#34;:&#34;screen&#34;,&#34;top_units&#34;:&#34;screen&#34;},&#34;id&#34;:&#34;e7d1f8c1-0929-41f9-b8ee-7e5dc3e5ff95&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:null,&#34;text&#34;:&#34;Candlestick Chart&#34;},&#34;id&#34;:&#34;7ecfad1d-b06a-42d7-aca0-0f77f6619905&#34;,&#34;type&#34;:&#34;Title&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,4,8]},&#34;id&#34;:&#34;557def52-529f-487d-a478-b1d7928a10c4&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;below&#34;:[{&#34;id&#34;:&#34;85a12bde-91a0-4d20-aad9-4ef0ba39e563&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;}],&#34;left&#34;:[{&#34;id&#34;:&#34;fad048f7-931c-48b3-8953-786d7b21298e&#34;,&#34;type&#34;:&#34;LinearAxis&#34;}],&#34;plot_height&#34;:300,&#34;plot_width&#34;:1000,&#34;renderers&#34;:[{&#34;id&#34;:&#34;85a12bde-91a0-4d20-aad9-4ef0ba39e563&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;id&#34;:&#34;1930e668-b841-4839-954f-e2e7b607cc50&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;fad048f7-931c-48b3-8953-786d7b21298e&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;id&#34;:&#34;57348079-88a7-4097-ae5b-ee51d4b68740&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;21829168-33d9-4f40-ae4d-e63f9a0e8324&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;id&#34;:&#34;37d01925-0ffd-43e3-8774-cab9f2ac949a&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;id&#34;:&#34;19207d38-95f7-4549-ba02-3d0fb156c754&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;}],&#34;title&#34;:{&#34;id&#34;:&#34;7ecfad1d-b06a-42d7-aca0-0f77f6619905&#34;,&#34;type&#34;:&#34;Title&#34;},&#34;tool_events&#34;:{&#34;id&#34;:&#34;6f2fd8ba-97ef-4187-bc55-98d0b0707155&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},&#34;toolbar&#34;:{&#34;id&#34;:&#34;63b7e115-2f7a-4ae8-bd1b-75379f5597da&#34;,&#34;type&#34;:&#34;Toolbar&#34;},&#34;x_range&#34;:{&#34;id&#34;:&#34;c0f79d7b-d8c2-4789-bb9e-1efbb6c935df&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},&#34;y_range&#34;:{&#34;id&#34;:&#34;d012a579-3b11-4f17-881b-d64c0b6bc2af&#34;,&#34;type&#34;:&#34;DataRange1d&#34;}},&#34;id&#34;:&#34;8ee8ca7b-5da6-419a-8a2c-b72d82465172&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;ffdc709a-4afe-440b-9242-b4f4d763b3c0&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;9ffba169-e892-4792-9d2e-c0596a003299&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x0&#34;,&#34;y0&#34;,&#34;x1&#34;,&#34;y1&#34;],&#34;data&#34;:{&#34;x0&#34;:{&#34;__ndarray__&#34;:&#34;AADA5FcMdUIAAIBKqgx1QgAAQLD8DHVCAAAAFk8NdUIAAMB7oQ11QgAAAK2YDnVCAADAEusOdUIAAIB4PQ91QgAAQN6PD3VCAAAAROIPdUIAAEB12RB1QgAAANsrEXVCAADAQH4RdUIAAICm0BF1QgAAQAwjEnVCAACAPRoTdUIAAECjbBN1QgAAAAm/E3VCAACA1GMUdUIAAMAFWxV1QgAAgGutFXVCAABA0f8VdUIAAAA3UhZ1QgAAwJykFnVCAAAAzpsXdUIAAMAz7hd1QgAAgJlAGHVCAABA/5IYdUIAAABl5Rh1QgAAQJbcGXVCAAAA/C4adUIAAMBhgRp1QgAAgMfTGnVCAABALSYbdUIAAIBeHRx1QgAAQMRvHHVCAAAAKsIcdUIAAMCPFB11QgAAwCZeHnVCAACAjLAedUIAAEDyAh91QgAAAFhVH3VCAAAA754gdUIAAMBU8SB1QgAAgLpDIXVCAABAIJYhdUIAAACG6CF1QgAAQLffInVCAAAAHTIjdUIAAMCChCN1QgAAgOjWI3VCAABATikkdUIAAEDlciV1QgAAAEvFJXVCAADAsBcmdUIAAIAWaiZ1QgAAwEdhJ3VCAACArbMndUIAAEATBih1QgAAAHlYKHVCAADA3qoodUIAAAAQoil1QgAAwHX0KXVCAACA20YqdUIAAEBBmSp1QgAAAKfrKnVCAABA2OIrdUIAAAA+NSx1QgAAwKOHLHVCAACACdosdUIAAEBvLC11QgAAQAZ2LnVCAAAAbMgudUIAAMDRGi91QgAAgDdtL3VCAADAaGQwdUIAAIDOtjB1QgAAQDQJMXVCAAAAmlsxdUIAAMD/rTF1QgAAADGlMnVCAADAlvcydUIAAID8STN1QgAAQGKcM3VCAAAAyO4zdUIAAED55TR1QgAAAF84NXVCAADAxIo1dUIAAIAq3TV1Qg==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[89]},&#34;x1&#34;:{&#34;__ndarray__&#34;:&#34;AADA5FcMdUIAAIBKqgx1QgAAQLD8DHVCAAAAFk8NdUIAAMB7oQ11QgAAAK2YDnVCAADAEusOdUIAAIB4PQ91QgAAQN6PD3VCAAAAROIPdUIAAEB12RB1QgAAANsrEXVCAADAQH4RdUIAAICm0BF1QgAAQAwjEnVCAACAPRoTdUIAAECjbBN1QgAAAAm/E3VCAACA1GMUdUIAAMAFWxV1QgAAgGutFXVCAABA0f8VdUIAAAA3UhZ1QgAAwJykFnVCAAAAzpsXdUIAAMAz7hd1QgAAgJlAGHVCAABA/5IYdUIAAABl5Rh1QgAAQJbcGXVCAAAA/C4adUIAAMBhgRp1QgAAgMfTGnVCAABALSYbdUIAAIBeHRx1QgAAQMRvHHVCAAAAKsIcdUIAAMCPFB11QgAAwCZeHnVCAACAjLAedUIAAEDyAh91QgAAAFhVH3VCAAAA754gdUIAAMBU8SB1QgAAgLpDIXVCAABAIJYhdUIAAACG6CF1QgAAQLffInVCAAAAHTIjdUIAAMCChCN1QgAAgOjWI3VCAABATikkdUIAAEDlciV1QgAAAEvFJXVCAADAsBcmdUIAAIAWaiZ1QgAAwEdhJ3VCAACArbMndUIAAEATBih1QgAAAHlYKHVCAADA3qoodUIAAAAQoil1QgAAwHX0KXVCAACA20YqdUIAAEBBmSp1QgAAAKfrKnVCAABA2OIrdUIAAAA+NSx1QgAAwKOHLHVCAACACdosdUIAAEBvLC11QgAAQAZ2LnVCAAAAbMgudUIAAMDRGi91QgAAgDdtL3VCAADAaGQwdUIAAIDOtjB1QgAAQDQJMXVCAAAAmlsxdUIAAMD/rTF1QgAAADGlMnVCAADAlvcydUIAAID8STN1QgAAQGKcM3VCAAAAyO4zdUIAAED55TR1QgAAAF84NXVCAADAxIo1dUIAAIAq3TV1Qg==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[89]},&#34;y0&#34;:{&#34;__ndarray__&#34;:&#34;KVyPwvWMhkAzMzMzM6WGQM3MzMzM6IZApHA9Ctcbh0DhehSuR/uGQEjhehSu9YZAH4XrUbjUhkAAAAAAACiHQGZmZmZmDodAMzMzMzPZhkBSuB6F68uGQB+F61G43oZA4XoUrkcrh0AAAAAAADCHQI/C9Shcr4dASOF6FK7Vh0AK16NwPZqHQAAAAAAAgIdA4XoUrkeLh0A9CtejcJeHQJqZmZmZB4hASOF6FK4/iEAAAAAAAAiIQFK4HoXrA4hApHA9CtcFiEBmZmZmZuaHQKRwPQrX4YdAzczMzMyeh0BI4XoUrk2HQKRwPQrXZYdAcT0K16Owh0AfhetRuMSHQD0K16Nw1YdA16NwPQqRh0AAAAAAAHCHQM3MzMzMlodASOF6FK6Rh0DNzMzMzHqHQFK4HoXr14dApHA9CtdfiEDNzMzMzEyIQAAAAAAADIhAFK5H4XpAh0AAAAAAAICHQD0K16NwWYdAAAAAAAAUh0CkcD0K1+mGQHsUrkfhdoZAAAAAAADGhkBSuB6F6/WGQI/C9Shcj4ZAUrgehesVhkCkcD0K1y+GQM3MzMzMFoZA7FG4HoV5hkDXo3A9CsGGQD0K16NwzYZACtejcD1yhkBSuB6F63GGQOxRuB6F7YZAUrgehetHh0B7FK5H4a6HQClcj8L1rohAAAAAAAA0iEAAAAAAALiGQFK4HoXr/4VACtejcD1ghUAzMzMzM9+FQBSuR+F66oVAzczMzMyKhUAAAAAAAK6FQAAAAAAA0IVAAAAAAAAuhkDNzMzMzEKGQHE9Ctej+IVAUrgehetJhkAzMzMzMyOGQAAAAAAA4IVApHA9CtcPhkA9CtejcEuGQIXrUbgeN4ZAFK5H4Xp2hkAAAAAAAICGQJqZmZmZe4ZAUrgehetjhkAfhetRuCCGQLgehetR/oVAPQrXo3ANhkDsUbgehWOGQA==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[89]},&#34;y1&#34;:{&#34;__ndarray__&#34;:&#34;zczMzMwOhkD2KFyPwlWGQDMzMzMzj4ZA9ihcj8LLhkCuR+F6FLiGQD0K16Nwe4ZAAAAAAAB0hkCkcD0K19GGQIXrUbgexYZApHA9CtdlhkBxPQrXozqGQArXo3A9mIZAAAAAAAC4hkA9CtejcAuHQAAAAAAAOIdAw/UoXI9+h0DXo3A9Cg2HQBSuR+F6UIdAUrgehetbh0Bcj8L1KCqHQJqZmZmZVYdASOF6FK63h0DXo3A9Ck2HQAAAAAAAcIdAH4XrUbiYh0CamZmZmZGHQAAAAAAACIdAcT0K16M+h0AAAAAAAAaHQI/C9ShcoYZArkfhehQ4h0DsUbgehRuHQAAAAAAAaIdAMzMzMzMRh0AAAAAAACCHQArXo3A9TIdAAAAAAABAh0ApXI/C9VSHQFyPwvUobIdAPQrXo3Dzh0AzMzMzM/eHQB+F61G4sodArkfhehTahkCF61G4HhWHQI/C9Shcx4ZAFK5H4Xp4hkAAAAAAAEiGQLgehetR/IVAw/UoXI9qhkB7FK5H4dSFQM3MzMzMiIVAKVyPwvVqhUDhehSuR6uFQK5H4XoUCoVASOF6FK6zhUApXI/C9YCGQK5H4XoUMIZApHA9CtcThkCF61G4HrOFQM3MzMzMQoZAZmZmZma2hkBcj8L1KDqHQDMzMzMz5YdAAAAAAACEhkB7FK5H4e6FQDMzMzMzQYVAFK5H4Xq4hEBcj8L1KOaEQNejcD0KUYVAKVyPwvXmhEDNzMzMzDSFQGZmZmZmaIVA16NwPQqbhUAK16NwPcCFQGZmZmZmsIVArkfhehT0hUBxPQrXo6yFQArXo3A9RoVAcT0K16OUhUB7FK5H4eaFQD0K16NwzYVAXI/C9SjehUAAAAAAAECGQFyPwvUoEIZAXI/C9SgQhkAzMzMzM3eFQB+F61G4aoVAAAAAAACwhUB7FK5H4fqFQA==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[89]}}},&#34;id&#34;:&#34;93a1dfe6-7b90-4e44-993a-81500954e74e&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:null,&#34;text&#34;:&#34;Candlestick Chart&#34;},&#34;id&#34;:&#34;77abf497-8e3f-48d8-984f-e39cd0183fb9&#34;,&#34;type&#34;:&#34;Title&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,6]},&#34;id&#34;:&#34;1facdaca-db84-4258-9ccb-feb4c189ceb0&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,15]},&#34;id&#34;:&#34;2b5cfeb6-d6a6-4ed7-8647-13dac443cd2c&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;d012a579-3b11-4f17-881b-d64c0b6bc2af&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x&#34;,&#34;y&#34;,&#34;height&#34;],&#34;data&#34;:{&#34;height&#34;:{&#34;__ndarray__&#34;:&#34;wHoUrkdhLkAAMDMzMzPDPwDXo3A9ChlAgGZmZmZmEECAFK5H4XonQIDrUbgehRVAAK5H4XoUG0AAzczMzMwSQA==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]},&#34;x&#34;:{&#34;__ndarray__&#34;:&#34;AACA/EkzdUIAAEBinDN1QgAAAMjuM3VCAABA+eU0dUI=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;y&#34;:{&#34;__ndarray__&#34;:&#34;HoXrUbg5hkBmZmZmZneGQGZmZmZmXIZA7FG4HoVHhkAK16NwPeiFQArXo3A9moVApHA9CtfuhUD2KFyPwjOGQA==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]}}},&#34;id&#34;:&#34;99de450d-ee4e-49a2-81f5-5b64d1a7c878&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:null,&#34;text&#34;:&#34;Candlestick Chart&#34;},&#34;id&#34;:&#34;df81375f-ae4c-4b25-84d4-3771fb05f0f1&#34;,&#34;type&#34;:&#34;Title&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;de97c414-3a28-4e35-a4d9-1b723b4f2b85&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;ffdc709a-4afe-440b-9242-b4f4d763b3c0&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;2415c02d-3ba6-4506-be5e-cbc0d85e81a9&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;744f0d16-5d49-4aa7-bb15-5ed469ffc6c2&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;attributes&#34;:{&#34;num_minor_ticks&#34;:5},&#34;id&#34;:&#34;dc9c3299-b911-4064-81c7-780062a0c19f&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;ffdc709a-4afe-440b-9242-b4f4d763b3c0&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;c7ded90f-e3a3-40ca-be2e-ba2d94ec232a&#34;,&#34;type&#34;:&#34;HelpTool&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;8ee8ca7b-5da6-419a-8a2c-b72d82465172&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;dc9c3299-b911-4064-81c7-780062a0c19f&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;1930e668-b841-4839-954f-e2e7b607cc50&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;ffdc709a-4afe-440b-9242-b4f4d763b3c0&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;5a34b636-b514-4d41-a3c1-6c50621e775a&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;attributes&#34;:{&#34;max_interval&#34;:500.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;66bf240f-0556-499c-9df3-813546f1fba7&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;active_drag&#34;:&#34;auto&#34;,&#34;active_scroll&#34;:&#34;auto&#34;,&#34;active_tap&#34;:&#34;auto&#34;,&#34;tools&#34;:[{&#34;id&#34;:&#34;d219aa83-7f95-432d-9ceb-48759ea940a8&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;id&#34;:&#34;591e92fc-a27b-42c5-adb0-6e509a5e88e4&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;id&#34;:&#34;52be68fd-f3b2-474d-9592-a034861c0cc1&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;id&#34;:&#34;e5cb91d3-27fc-4745-9f86-f159a08938d6&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;id&#34;:&#34;165d6d30-8efe-45d0-9449-815d307173a0&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;id&#34;:&#34;cefc8b02-19d2-4645-977d-1e3ba2b4c94a&#34;,&#34;type&#34;:&#34;HelpTool&#34;}]},&#34;id&#34;:&#34;63b7e115-2f7a-4ae8-bd1b-75379f5597da&#34;,&#34;type&#34;:&#34;Toolbar&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;c3f2ca0f-0b8a-4db0-afb2-bf52555e4851&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},{&#34;attributes&#34;:{&#34;dimension&#34;:1,&#34;plot&#34;:{&#34;id&#34;:&#34;8ee8ca7b-5da6-419a-8a2c-b72d82465172&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;bbf78bae-d0a0-4fd6-9cfb-81ac5f6c3a28&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;57348079-88a7-4097-ae5b-ee51d4b68740&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;e12805c4-4b5c-4da1-877c-0584675bef78&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;8ee8ca7b-5da6-419a-8a2c-b72d82465172&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;bbf78bae-d0a0-4fd6-9cfb-81ac5f6c3a28&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;fad048f7-931c-48b3-8953-786d7b21298e&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,4,7,10,13,16,19,22,25,28]},&#34;id&#34;:&#34;c9899509-4563-463d-8ecb-25e633098c1d&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;ae23af2c-9614-4bda-b4db-b98c50d2bbc3&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;bc3e29dd-3fcc-4c3d-a0ac-6ca3887eb4fb&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;5019a427-4049-4c42-968d-4834f87b1283&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;d7af93c0-3480-40da-bbfb-b7506f7ad434&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;bbf78bae-d0a0-4fd6-9cfb-81ac5f6c3a28&#34;,&#34;type&#34;:&#34;BasicTicker&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;89edc8c6-acb7-4f82-9d7b-68decd13f621&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;6ed46e64-4c17-41d8-a9a0-65ff39e4288d&#34;,&#34;type&#34;:&#34;HelpTool&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]},&#34;id&#34;:&#34;492d2bf3-a13b-4576-bcab-3199d1ae7442&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x&#34;,&#34;y&#34;,&#34;height&#34;],&#34;data&#34;:{&#34;height&#34;:{&#34;__ndarray__&#34;:&#34;ADAzMzMzwz8A16NwPQoZQIBmZmZmZhBAgBSuR+F6J0A=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;x&#34;:{&#34;__ndarray__&#34;:&#34;AACA/EkzdUIAAEBinDN1QgAAAMjuM3VCAABA+eU0dUI=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;y&#34;:{&#34;__ndarray__&#34;:&#34;ZmZmZmZ3hkBmZmZmZlyGQOxRuB6FR4ZACtejcD3ohUA=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]}}},&#34;id&#34;:&#34;ad90070e-3e10-47c5-973c-7465d6617431&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;44ecdf6e-da1e-4038-a2bf-313eb5e1b20b&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;1b57c90e-9e09-4a0d-981c-48bad914dbe7&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;91cfc893-6cd3-4983-b6cb-5bd11988fb84&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;37d01925-0ffd-43e3-8774-cab9f2ac949a&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;fill_color&#34;:{&#34;value&#34;:&#34;green&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;1b57c90e-9e09-4a0d-981c-48bad914dbe7&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;59037974-3911-4275-98a7-530c79125ba8&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;9b157f5d-f517-4d60-822f-24771fd6764e&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x&#34;,&#34;y&#34;,&#34;height&#34;],&#34;data&#34;:{&#34;height&#34;:{&#34;__ndarray__&#34;:&#34;wHoUrkdhLkCA61G4HoUVQACuR+F6FBtAAM3MzMzMEkA=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;x&#34;:{&#34;__ndarray__&#34;:&#34;AADAlvcydUIAAABfODV1QgAAwMSKNXVCAACAKt01dUI=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;y&#34;:{&#34;__ndarray__&#34;:&#34;HoXrUbg5hkAK16NwPZqFQKRwPQrX7oVA9ihcj8IzhkA=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]}}},&#34;id&#34;:&#34;44ecdf6e-da1e-4038-a2bf-313eb5e1b20b&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,2,4,6,8,10]},&#34;id&#34;:&#34;6be8ec29-3f77-40ac-9f8b-830859f2f7d7&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;bottom_units&#34;:&#34;screen&#34;,&#34;fill_alpha&#34;:{&#34;value&#34;:0.5},&#34;fill_color&#34;:{&#34;value&#34;:&#34;lightgrey&#34;},&#34;left_units&#34;:&#34;screen&#34;,&#34;level&#34;:&#34;overlay&#34;,&#34;line_alpha&#34;:{&#34;value&#34;:1.0},&#34;line_color&#34;:{&#34;value&#34;:&#34;black&#34;},&#34;line_dash&#34;:[4,4],&#34;line_width&#34;:{&#34;value&#34;:2},&#34;plot&#34;:null,&#34;render_mode&#34;:&#34;css&#34;,&#34;right_units&#34;:&#34;screen&#34;,&#34;top_units&#34;:&#34;screen&#34;},&#34;id&#34;:&#34;21829168-33d9-4f40-ae4d-e63f9a0e8324&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,2,4,6,8,10]},&#34;id&#34;:&#34;d712fe28-b384-4901-aa83-25580d27178b&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;base&#34;:60,&#34;mantissas&#34;:[1,2,5,10,15,20,30],&#34;max_interval&#34;:1800000.0,&#34;min_interval&#34;:1000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;90188a40-1f32-4e0a-9b03-88574280ca59&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;8ee8ca7b-5da6-419a-8a2c-b72d82465172&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;d219aa83-7f95-432d-9ceb-48759ea940a8&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]},&#34;id&#34;:&#34;b8dcea2f-4263-43ce-823f-3654109cbe3a&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;fill_alpha&#34;:{&#34;value&#34;:0.1},&#34;fill_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;91cfc893-6cd3-4983-b6cb-5bd11988fb84&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,8,15,22]},&#34;id&#34;:&#34;ef9d8b53-eef5-4539-bec8-20144050f0f2&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;x0&#34;:{&#34;field&#34;:&#34;x0&#34;},&#34;x1&#34;:{&#34;field&#34;:&#34;x1&#34;},&#34;y0&#34;:{&#34;field&#34;:&#34;y0&#34;},&#34;y1&#34;:{&#34;field&#34;:&#34;y1&#34;}},&#34;id&#34;:&#34;18aa6c9c-e638-4db9-a399-b35bafd710fb&#34;,&#34;type&#34;:&#34;Segment&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;8ee8ca7b-5da6-419a-8a2c-b72d82465172&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;591e92fc-a27b-42c5-adb0-6e509a5e88e4&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,1,2,3,4,5,6,7,8,9,10,11]},&#34;id&#34;:&#34;736b977d-1409-4c1b-9e77-2e1e2aa083e0&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;base&#34;:24,&#34;mantissas&#34;:[1,2,4,6,8,12],&#34;max_interval&#34;:43200000.0,&#34;min_interval&#34;:3600000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;36fe67f4-f156-46da-a25a-d66351a27cf4&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;overlay&#34;:{&#34;id&#34;:&#34;21829168-33d9-4f40-ae4d-e63f9a0e8324&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;8ee8ca7b-5da6-419a-8a2c-b72d82465172&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;52be68fd-f3b2-474d-9592-a034861c0cc1&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;89edc8c6-acb7-4f82-9d7b-68decd13f621&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;52adfb00-b116-45b3-921a-ef050cb1c0a0&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;8ee8ca7b-5da6-419a-8a2c-b72d82465172&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;e5cb91d3-27fc-4745-9f86-f159a08938d6&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;attributes&#34;:{&#34;bottom_units&#34;:&#34;screen&#34;,&#34;fill_alpha&#34;:{&#34;value&#34;:0.5},&#34;fill_color&#34;:{&#34;value&#34;:&#34;lightgrey&#34;},&#34;left_units&#34;:&#34;screen&#34;,&#34;level&#34;:&#34;overlay&#34;,&#34;line_alpha&#34;:{&#34;value&#34;:1.0},&#34;line_color&#34;:{&#34;value&#34;:&#34;black&#34;},&#34;line_dash&#34;:[4,4],&#34;line_width&#34;:{&#34;value&#34;:2},&#34;plot&#34;:null,&#34;render_mode&#34;:&#34;css&#34;,&#34;right_units&#34;:&#34;screen&#34;,&#34;top_units&#34;:&#34;screen&#34;},&#34;id&#34;:&#34;4ff34067-365c-4a44-af40-210b8a56614a&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;8ee8ca7b-5da6-419a-8a2c-b72d82465172&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;165d6d30-8efe-45d0-9449-815d307173a0&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;attributes&#34;:{&#34;active_drag&#34;:&#34;auto&#34;,&#34;active_scroll&#34;:&#34;auto&#34;,&#34;active_tap&#34;:&#34;auto&#34;,&#34;tools&#34;:[{&#34;id&#34;:&#34;8cd52c11-ba65-40ba-93a9-bc955b8b5779&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;id&#34;:&#34;a652e1a7-03f6-49d0-8c3c-774589d5ca48&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;id&#34;:&#34;70636a48-81ef-4fd7-b4e8-a38917463eaa&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;id&#34;:&#34;9ffba169-e892-4792-9d2e-c0596a003299&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;id&#34;:&#34;5a34b636-b514-4d41-a3c1-6c50621e775a&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;id&#34;:&#34;c7ded90f-e3a3-40ca-be2e-ba2d94ec232a&#34;,&#34;type&#34;:&#34;HelpTool&#34;}]},&#34;id&#34;:&#34;81cb5f46-25c3-4a24-8d48-42303976c35d&#34;,&#34;type&#34;:&#34;Toolbar&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,1,2,3,4,5,6,7,8,9,10,11]},&#34;id&#34;:&#34;011a255d-90d2-4e3c-85bd-59c4c73da43d&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,4,7,10,13,16,19,22,25,28]},&#34;id&#34;:&#34;05ff5521-6877-4d23-a3a4-bd686fb81f1d&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;8ee8ca7b-5da6-419a-8a2c-b72d82465172&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;cefc8b02-19d2-4645-977d-1e3ba2b4c94a&#34;,&#34;type&#34;:&#34;HelpTool&#34;},{&#34;attributes&#34;:{&#34;dimension&#34;:1,&#34;grid_line_alpha&#34;:{&#34;value&#34;:0.3},&#34;plot&#34;:{&#34;id&#34;:&#34;ffdc709a-4afe-440b-9242-b4f4d763b3c0&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;2415c02d-3ba6-4506-be5e-cbc0d85e81a9&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;faa660a4-f5ea-44d8-b64a-f581da415a3a&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,8,15,22]},&#34;id&#34;:&#34;160880fa-9182-4307-ba2b-8cd7a4adcda1&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;e12805c4-4b5c-4da1-877c-0584675bef78&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]},&#34;id&#34;:&#34;c019e6dc-c081-42d3-9d1c-4a25e5319b7e&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,15]},&#34;id&#34;:&#34;5fa7d6c4-fe1a-408d-9aca-a27a231a6dc1&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,4,7,10,13,16,19,22,25,28]},&#34;id&#34;:&#34;929edbc5-b9df-4201-a120-3e31e4a4a360&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;7d7ce654-81f2-4c1a-83b6-ecc87de4885d&#34;,&#34;type&#34;:&#34;YearsTicker&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,8,15,22]},&#34;id&#34;:&#34;47a88bcd-25a8-454d-89ca-fd6f9eed8b86&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,1,2,3,4,5,6,7,8,9,10,11]},&#34;id&#34;:&#34;4ab6063e-82ef-425e-814e-c96b0821b00f&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;max_interval&#34;:500.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;0ac79ff3-81fc-4d7f-b486-4a23e91a6383&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;ffdc709a-4afe-440b-9242-b4f4d763b3c0&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;8cd52c11-ba65-40ba-93a9-bc955b8b5779&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,2,4,6,8,10]},&#34;id&#34;:&#34;33710ca1-5217-4369-955a-4e33ea9b8547&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;89da93e1-b0e0-40e0-9d4e-1d0f53d18231&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,4,8]},&#34;id&#34;:&#34;bf80c378-6175-459c-bb91-8eff91d75411&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;base&#34;:60,&#34;mantissas&#34;:[1,2,5,10,15,20,30],&#34;max_interval&#34;:1800000.0,&#34;min_interval&#34;:1000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;bc296190-fcb4-4e30-9c5b-2b1a1ec7a657&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;c4bbea06-7771-414e-b7c9-ae133ff6efce&#34;,&#34;type&#34;:&#34;YearsTicker&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,6]},&#34;id&#34;:&#34;60e216e8-ab43-49b6-a846-7a68ee651004&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,8,15,22]},&#34;id&#34;:&#34;9334e767-87fd-4657-ba3d-49f0090764c5&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;overlay&#34;:{&#34;id&#34;:&#34;4ff34067-365c-4a44-af40-210b8a56614a&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;89edc8c6-acb7-4f82-9d7b-68decd13f621&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;ba967a39-cb13-4e9c-98aa-b3133f12127e&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;56018477-cfec-4c20-97ca-a424cb684880&#34;,&#34;type&#34;:&#34;YearsTicker&#34;},{&#34;attributes&#34;:{&#34;base&#34;:24,&#34;mantissas&#34;:[1,2,4,6,8,12],&#34;max_interval&#34;:43200000.0,&#34;min_interval&#34;:3600000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;ac422694-353a-431c-8631-c6108c87cf53&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;89edc8c6-acb7-4f82-9d7b-68decd13f621&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;6e00dcfa-2bcb-4757-96d4-918a24b759bf&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,15]},&#34;id&#34;:&#34;1600ffd1-c997-43f0-82f2-93dadecd0684&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,4,8]},&#34;id&#34;:&#34;d1f1f349-8b7f-4878-985b-f7c733a2d446&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,15]},&#34;id&#34;:&#34;36e11d79-bcaa-42c2-84be-0b4d587d1f02&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;c36276f0-dc6a-4454-9b84-15ddac850b92&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;de97c414-3a28-4e35-a4d9-1b723b4f2b85&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,1,2,3,4,5,6,7,8,9,10,11]},&#34;id&#34;:&#34;d48a34f6-901f-4273-b06d-f3c82744c210&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;x0&#34;:{&#34;field&#34;:&#34;x0&#34;},&#34;x1&#34;:{&#34;field&#34;:&#34;x1&#34;},&#34;y0&#34;:{&#34;field&#34;:&#34;y0&#34;},&#34;y1&#34;:{&#34;field&#34;:&#34;y1&#34;}},&#34;id&#34;:&#34;ce0ca4fc-3085-4988-8cb3-9d84731bd2c7&#34;,&#34;type&#34;:&#34;Segment&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,2,4,6,8,10]},&#34;id&#34;:&#34;47bcea3e-bc55-457d-99c9-14bf07de0b99&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,4,8]},&#34;id&#34;:&#34;abcf1675-1480-446a-8d60-5a8ba08b8ea2&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;overlay&#34;:{&#34;id&#34;:&#34;e7d1f8c1-0929-41f9-b8ee-7e5dc3e5ff95&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;ffdc709a-4afe-440b-9242-b4f4d763b3c0&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;70636a48-81ef-4fd7-b4e8-a38917463eaa&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;attributes&#34;:{&#34;fill_alpha&#34;:{&#34;value&#34;:0.1},&#34;fill_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;1c6b5819-ddda-4b71-a6c0-79490e9ebbcd&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;c36276f0-dc6a-4454-9b84-15ddac850b92&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;ffdc709a-4afe-440b-9242-b4f4d763b3c0&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;234d46e3-f466-4904-b5dd-672d12f625a5&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;e74b2d3b-0c5f-41a6-a863-166ec325c95d&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;caa879c9-a791-42cd-9bf0-130fca583f17&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;70838400-da50-4a56-a924-118b659179a4&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;1c6b5819-ddda-4b71-a6c0-79490e9ebbcd&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;19207d38-95f7-4549-ba02-3d0fb156c754&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;93a1dfe6-7b90-4e44-993a-81500954e74e&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;5e2b3568-63eb-4d25-8494-74f5a127a946&#34;,&#34;type&#34;:&#34;Segment&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;ce0ca4fc-3085-4988-8cb3-9d84731bd2c7&#34;,&#34;type&#34;:&#34;Segment&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;2ee76a9f-eaff-4f30-9fa7-b59a4f2d3a94&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x&#34;,&#34;y&#34;,&#34;height&#34;],&#34;data&#34;:{&#34;height&#34;:{&#34;__ndarray__&#34;:&#34;wHoUrkdhLkCA61G4HoUVQACuR+F6FBtAAM3MzMzMEkA=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;x&#34;:{&#34;__ndarray__&#34;:&#34;AADAlvcydUIAAABfODV1QgAAwMSKNXVCAACAKt01dUI=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;y&#34;:{&#34;__ndarray__&#34;:&#34;HoXrUbg5hkAK16NwPZqFQKRwPQrX7oVA9ihcj8IzhkA=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]}}},&#34;id&#34;:&#34;e2e2b63a-70da-4b12-b406-412989d4f428&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;fill_color&#34;:{&#34;value&#34;:&#34;red&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;70838400-da50-4a56-a924-118b659179a4&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;line_color&#34;:{&#34;value&#34;:&#34;Black&#34;},&#34;x0&#34;:{&#34;field&#34;:&#34;x0&#34;},&#34;x1&#34;:{&#34;field&#34;:&#34;x1&#34;},&#34;y0&#34;:{&#34;field&#34;:&#34;y0&#34;},&#34;y1&#34;:{&#34;field&#34;:&#34;y1&#34;}},&#34;id&#34;:&#34;5e2b3568-63eb-4d25-8494-74f5a127a946&#34;,&#34;type&#34;:&#34;Segment&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;ffdc709a-4afe-440b-9242-b4f4d763b3c0&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;a652e1a7-03f6-49d0-8c3c-774589d5ca48&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;attributes&#34;:{&#34;num_minor_ticks&#34;:5},&#34;id&#34;:&#34;234d46e3-f466-4904-b5dd-672d12f625a5&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;},{&#34;attributes&#34;:{&#34;fill_alpha&#34;:{&#34;value&#34;:0.1},&#34;fill_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;4bf5a1cf-7820-4d9c-bc9e-9512400a0862&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;fill_color&#34;:{&#34;value&#34;:&#34;#FF3333&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;033f9e4d-3b24-4908-970b-dcbc2e98b4ff&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;f789426e-8350-4ca8-9765-eb1bde027068&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;ad90070e-3e10-47c5-973c-7465d6617431&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;033f9e4d-3b24-4908-970b-dcbc2e98b4ff&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;4bf5a1cf-7820-4d9c-bc9e-9512400a0862&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;2caed9d0-2544-47a3-b1de-38eb4e83d8c1&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;9f009e8d-f0ac-4f58-8dad-aeb47a64f8d6&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,6]},&#34;id&#34;:&#34;82087794-81c9-4eca-a990-a6d132100a2b&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;grid_line_alpha&#34;:{&#34;value&#34;:0.3},&#34;plot&#34;:{&#34;id&#34;:&#34;ffdc709a-4afe-440b-9242-b4f4d763b3c0&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;234d46e3-f466-4904-b5dd-672d12f625a5&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;cc120fcd-0730-4bfb-9bf0-896f9c98ad58&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{&#34;below&#34;:[{&#34;id&#34;:&#34;e74b2d3b-0c5f-41a6-a863-166ec325c95d&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;}],&#34;left&#34;:[{&#34;id&#34;:&#34;744f0d16-5d49-4aa7-bb15-5ed469ffc6c2&#34;,&#34;type&#34;:&#34;LinearAxis&#34;}],&#34;plot_height&#34;:300,&#34;plot_width&#34;:1000,&#34;renderers&#34;:[{&#34;id&#34;:&#34;e74b2d3b-0c5f-41a6-a863-166ec325c95d&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;id&#34;:&#34;cc120fcd-0730-4bfb-9bf0-896f9c98ad58&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;744f0d16-5d49-4aa7-bb15-5ed469ffc6c2&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;id&#34;:&#34;faa660a4-f5ea-44d8-b64a-f581da415a3a&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;e7d1f8c1-0929-41f9-b8ee-7e5dc3e5ff95&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;id&#34;:&#34;2ee76a9f-eaff-4f30-9fa7-b59a4f2d3a94&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;id&#34;:&#34;756da2f0-77e5-471a-a74d-b8d47a7a662b&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;id&#34;:&#34;ad64ae82-8697-45a6-84cc-590d5edbbf0d&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;}],&#34;sizing_mode&#34;:&#34;scale_width&#34;,&#34;title&#34;:{&#34;id&#34;:&#34;77abf497-8e3f-48d8-984f-e39cd0183fb9&#34;,&#34;type&#34;:&#34;Title&#34;},&#34;tool_events&#34;:{&#34;id&#34;:&#34;59037974-3911-4275-98a7-530c79125ba8&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},&#34;toolbar&#34;:{&#34;id&#34;:&#34;81cb5f46-25c3-4a24-8d48-42303976c35d&#34;,&#34;type&#34;:&#34;Toolbar&#34;},&#34;x_range&#34;:{&#34;id&#34;:&#34;9f009e8d-f0ac-4f58-8dad-aeb47a64f8d6&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},&#34;y_range&#34;:{&#34;id&#34;:&#34;f789426e-8350-4ca8-9765-eb1bde027068&#34;,&#34;type&#34;:&#34;DataRange1d&#34;}},&#34;id&#34;:&#34;ffdc709a-4afe-440b-9242-b4f4d763b3c0&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,6]},&#34;id&#34;:&#34;045f1f2a-d3af-44df-bfb0-73655cdad375&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,4,8]},&#34;id&#34;:&#34;316f7dff-b29e-4467-a4f6-fabfce9884ab&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;base&#34;:60,&#34;mantissas&#34;:[1,2,5,10,15,20,30],&#34;max_interval&#34;:1800000.0,&#34;min_interval&#34;:1000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;a1f20ac8-06d9-4e6b-89b8-e689b9dd0241&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;max_interval&#34;:500.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;2b6685fd-0bf4-4469-8132-9434d3e4fd52&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]},&#34;id&#34;:&#34;74fa4115-fce6-4044-9bc3-3e15bd5a5023&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;base&#34;:24,&#34;mantissas&#34;:[1,2,4,6,8,12],&#34;max_interval&#34;:43200000.0,&#34;min_interval&#34;:3600000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;a7b0b7a7-5284-40f0-8ee3-67d38c3fab1f&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,8,15,22]},&#34;id&#34;:&#34;1411692c-61d0-4f73-a9a6-7708500dd1ed&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,15]},&#34;id&#34;:&#34;cde19ccb-e149-4bd2-8450-b91ce1f13f8a&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,4,7,10,13,16,19,22,25,28]},&#34;id&#34;:&#34;ef23dc3c-3094-4be1-9dd6-c8a4c3fdecf9&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;line_color&#34;:{&#34;value&#34;:&#34;Black&#34;},&#34;x0&#34;:{&#34;field&#34;:&#34;x0&#34;},&#34;x1&#34;:{&#34;field&#34;:&#34;x1&#34;},&#34;y0&#34;:{&#34;field&#34;:&#34;y0&#34;},&#34;y1&#34;:{&#34;field&#34;:&#34;y1&#34;}},&#34;id&#34;:&#34;c25508be-7624-4ceb-aa8f-e71ed38929ba&#34;,&#34;type&#34;:&#34;Segment&#34;},{&#34;attributes&#34;:{&#34;overlay&#34;:{&#34;id&#34;:&#34;8dbeba7f-e8f1-4891-876f-15536eb721da&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;231076e5-9f5d-407c-9891-3c2c2e882314&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;34a47e2d-4382-459d-85c4-fb58acc4892a&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:null,&#34;text&#34;:&#34;Candlestick Chart&#34;},&#34;id&#34;:&#34;761ff27a-54e9-435c-8343-29b8bc454fad&#34;,&#34;type&#34;:&#34;Title&#34;},{&#34;attributes&#34;:{&#34;below&#34;:[{&#34;id&#34;:&#34;13d4ae7b-e4bf-4d00-bd87-57f34907d61b&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;}],&#34;left&#34;:[{&#34;id&#34;:&#34;2b4cc72c-c38f-4d6b-b9c9-1985eb4d9375&#34;,&#34;type&#34;:&#34;LinearAxis&#34;}],&#34;plot_height&#34;:300,&#34;plot_width&#34;:1000,&#34;renderers&#34;:[{&#34;id&#34;:&#34;13d4ae7b-e4bf-4d00-bd87-57f34907d61b&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;id&#34;:&#34;cd57c551-31db-4220-a03a-b1836c8bd8ca&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;2b4cc72c-c38f-4d6b-b9c9-1985eb4d9375&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;id&#34;:&#34;b774e00a-18a3-49de-86e7-c42de6951544&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;090d48af-9eb5-4095-8d67-38962163e22e&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;id&#34;:&#34;5acfb5e4-5854-44c0-a845-557fcb5399a8&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;}],&#34;title&#34;:{&#34;id&#34;:&#34;761ff27a-54e9-435c-8343-29b8bc454fad&#34;,&#34;type&#34;:&#34;Title&#34;},&#34;tool_events&#34;:{&#34;id&#34;:&#34;8c4b8f89-bd3c-419f-bb95-b993939c88b5&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},&#34;toolbar&#34;:{&#34;id&#34;:&#34;561f1b38-76d3-4627-9a0e-4b7b77720bd8&#34;,&#34;type&#34;:&#34;Toolbar&#34;},&#34;x_range&#34;:{&#34;id&#34;:&#34;ef5a3e89-c9ac-4fc1-8a21-bdf56268266b&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},&#34;y_range&#34;:{&#34;id&#34;:&#34;a4b3b935-fdbb-4389-950b-6dcfd55db6de&#34;,&#34;type&#34;:&#34;DataRange1d&#34;}},&#34;id&#34;:&#34;f6267643-9809-4144-9798-4181200afc94&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x&#34;,&#34;y&#34;,&#34;height&#34;],&#34;data&#34;:{&#34;height&#34;:{&#34;__ndarray__&#34;:&#34;wHoUrkdhLkAAMDMzMzPDPwDXo3A9ChlAgGZmZmZmEECAFK5H4XonQIDrUbgehRVAAK5H4XoUG0AAzczMzMwSQA==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]},&#34;x&#34;:{&#34;__ndarray__&#34;:&#34;AADAlvcydUIAAABfODV1QgAAwMSKNXVCAACAKt01dUI=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;y&#34;:{&#34;__ndarray__&#34;:&#34;HoXrUbg5hkBmZmZmZneGQGZmZmZmXIZA7FG4HoVHhkAK16NwPeiFQArXo3A9moVApHA9CtfuhUD2KFyPwjOGQA==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]}}},&#34;id&#34;:&#34;ca515aad-67cb-452e-bc78-bdfed6ed32f7&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;fc3dda0a-51ac-4147-9baa-e900f48c0654&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;f6267643-9809-4144-9798-4181200afc94&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;6e9f29d3-b613-4509-97a0-8f5c553085ff&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;2b4cc72c-c38f-4d6b-b9c9-1985eb4d9375&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;attributes&#34;:{&#34;active_drag&#34;:&#34;auto&#34;,&#34;active_scroll&#34;:&#34;auto&#34;,&#34;active_tap&#34;:&#34;auto&#34;,&#34;tools&#34;:[{&#34;id&#34;:&#34;19a0d8cc-d7ec-4e53-aa4d-f1ba9cb36054&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;id&#34;:&#34;a5348196-36a7-4dbe-8d8a-a4a4f83fca7d&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;id&#34;:&#34;4613a52d-1215-4700-a09e-ac8638c8e164&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;id&#34;:&#34;80841ccf-fb2c-4b0b-b0a4-d3481f003aae&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;id&#34;:&#34;54145486-876f-4df6-abdb-b05562d93b3a&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;id&#34;:&#34;ec8f4e29-fc1b-4cb1-a2e7-9abb8f3a8f55&#34;,&#34;type&#34;:&#34;HelpTool&#34;}]},&#34;id&#34;:&#34;561f1b38-76d3-4627-9a0e-4b7b77720bd8&#34;,&#34;type&#34;:&#34;Toolbar&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;ef5a3e89-c9ac-4fc1-8a21-bdf56268266b&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;f6267643-9809-4144-9798-4181200afc94&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;49433bd8-12cb-4e24-9995-db2c0c0ad51f&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;cd57c551-31db-4220-a03a-b1836c8bd8ca&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;8c4b8f89-bd3c-419f-bb95-b993939c88b5&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;f29c6b42-37ea-47cc-ac05-129a90996990&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;f6267643-9809-4144-9798-4181200afc94&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;49433bd8-12cb-4e24-9995-db2c0c0ad51f&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;13d4ae7b-e4bf-4d00-bd87-57f34907d61b&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;a4b3b935-fdbb-4389-950b-6dcfd55db6de&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;num_minor_ticks&#34;:5},&#34;id&#34;:&#34;49433bd8-12cb-4e24-9995-db2c0c0ad51f&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;},{&#34;attributes&#34;:{&#34;base&#34;:60,&#34;mantissas&#34;:[1,2,5,10,15,20,30],&#34;max_interval&#34;:1800000.0,&#34;min_interval&#34;:1000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;4373c053-fc04-4c96-8ce2-9bacdb1b8312&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;fdb335ae-1a8f-4b0e-9c50-d396131435f0&#34;,&#34;type&#34;:&#34;YearsTicker&#34;},{&#34;attributes&#34;:{&#34;base&#34;:60,&#34;mantissas&#34;:[1,2,5,10,15,20,30],&#34;max_interval&#34;:1800000.0,&#34;min_interval&#34;:1000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;f25c379e-7a94-4bef-b369-76981ecfcbb5&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;c0f7808d-2eac-4912-90a8-89e005301f94&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,6]},&#34;id&#34;:&#34;ce8ab46c-086c-4c02-9950-a7dfb2a7dbe6&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;num_minor_ticks&#34;:5},&#34;id&#34;:&#34;a352976c-e5c0-4fca-87aa-41bf43f99cd4&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]},&#34;id&#34;:&#34;7075081a-c579-415c-aeaf-9bea4695d36c&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;overlay&#34;:{&#34;id&#34;:&#34;84fb954b-5157-445e-b509-9000e83b80b2&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;5ca3358e-17ed-47c1-87b4-c1784fefea19&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;97e87479-d890-47e1-94bb-94032a8c21aa&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;attributes&#34;:{&#34;below&#34;:[{&#34;id&#34;:&#34;15123baf-5615-45a8-8c1c-70bf3ac0b067&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;}],&#34;left&#34;:[{&#34;id&#34;:&#34;b0b39f69-ae38-4029-abf4-da7466053743&#34;,&#34;type&#34;:&#34;LinearAxis&#34;}],&#34;plot_height&#34;:300,&#34;plot_width&#34;:1000,&#34;renderers&#34;:[{&#34;id&#34;:&#34;15123baf-5615-45a8-8c1c-70bf3ac0b067&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;id&#34;:&#34;a2e803ce-4955-4fff-9053-d19a6e295acd&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;b0b39f69-ae38-4029-abf4-da7466053743&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;id&#34;:&#34;2213a01a-f26a-4be8-8ee0-5f78130a486c&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;c8c09528-e2e8-4d78-bbe6-496483c726fd&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;id&#34;:&#34;65879c2f-fddd-4538-9923-e475be285fd0&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;id&#34;:&#34;ef1c9f1d-8d49-4358-b2f5-036e0b14765c&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;}],&#34;title&#34;:{&#34;id&#34;:&#34;f752acd5-c7ba-42e7-8ea9-63035c284648&#34;,&#34;type&#34;:&#34;Title&#34;},&#34;tool_events&#34;:{&#34;id&#34;:&#34;9dd4599c-7230-41ef-a2bd-1de601aa0824&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},&#34;toolbar&#34;:{&#34;id&#34;:&#34;173bfa7b-fb53-467f-95db-71b9e024c888&#34;,&#34;type&#34;:&#34;Toolbar&#34;},&#34;x_range&#34;:{&#34;id&#34;:&#34;0621d702-636d-470a-800f-beafe47979cb&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},&#34;y_range&#34;:{&#34;id&#34;:&#34;c55f9e6c-2013-45c5-8bfa-5d81c54521c2&#34;,&#34;type&#34;:&#34;DataRange1d&#34;}},&#34;id&#34;:&#34;f8f2ae67-06ac-462d-9ea1-2608a7cc09b8&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},{&#34;attributes&#34;:{&#34;fill_alpha&#34;:{&#34;value&#34;:0.1},&#34;fill_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;be46db2f-7ab9-40da-b85f-71be40a7e41c&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;5ca3358e-17ed-47c1-87b4-c1784fefea19&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;deced914-3264-4f6b-9330-84971e21546f&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;7722eb40-3f1e-4d65-ac45-3aa63562627c&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;337f8e19-40b1-4e90-8e58-97f05d9f6b94&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;6443f3c3-e5f0-4392-8520-b66dd65fb059&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;14729697-fd5f-4e3e-ae6b-bf6effce1d9c&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,15]},&#34;id&#34;:&#34;99583d74-1369-4e24-b219-cf5f7780b657&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;base&#34;:24,&#34;mantissas&#34;:[1,2,4,6,8,12],&#34;max_interval&#34;:43200000.0,&#34;min_interval&#34;:3600000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;aa998445-432e-435a-8437-f302ba4a23fe&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;231076e5-9f5d-407c-9891-3c2c2e882314&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;bdbdff6c-0e14-4fef-a6ff-2635137fe888&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;a74ceb08-48af-4397-9a02-7eedcd981863&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;47c38c67-f90c-4620-9623-b852d50c80de&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;f348a951-0da1-425c-ad80-9348db9eb0c5&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;attributes&#34;:{&#34;max_interval&#34;:500.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;96220010-6952-4392-8ece-f6b0a2ceb2cc&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x&#34;,&#34;y&#34;,&#34;height&#34;],&#34;data&#34;:{&#34;height&#34;:{&#34;__ndarray__&#34;:&#34;ADAzMzMzwz8A16NwPQoZQIBmZmZmZhBAgBSuR+F6J0A=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;x&#34;:{&#34;__ndarray__&#34;:&#34;AACA/EkzdUIAAEBinDN1QgAAAMjuM3VCAABA+eU0dUI=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;y&#34;:{&#34;__ndarray__&#34;:&#34;ZmZmZmZ3hkBmZmZmZlyGQOxRuB6FR4ZACtejcD3ohUA=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]}}},&#34;id&#34;:&#34;7cb11bd8-4709-421b-aac1-7d784d2676c6&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;47c38c67-f90c-4620-9623-b852d50c80de&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;dd6ac384-6e00-4175-9cd7-89a1d9d6eecc&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]},&#34;id&#34;:&#34;612a3d97-a2c7-47fe-9c96-548e82d7e746&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:null,&#34;text&#34;:&#34;Candlestick Chart&#34;},&#34;id&#34;:&#34;f752acd5-c7ba-42e7-8ea9-63035c284648&#34;,&#34;type&#34;:&#34;Title&#34;},{&#34;attributes&#34;:{&#34;dimension&#34;:1,&#34;grid_line_alpha&#34;:{&#34;value&#34;:0.3},&#34;plot&#34;:{&#34;id&#34;:&#34;47c38c67-f90c-4620-9623-b852d50c80de&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;f5287347-3b2c-445e-92c6-b25fa77a7c59&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;9208fd6d-744a-4a54-9774-b377be9c8f8c&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;0ce77a2a-e686-4293-9058-754212338548&#34;,&#34;type&#34;:&#34;BasicTicker&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;70c6b9e1-f7a2-4277-98a0-4e28198233fa&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;f8f2ae67-06ac-462d-9ea1-2608a7cc09b8&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;a01ba455-17b1-4baf-ae4e-2e933da17498&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;b0b39f69-ae38-4029-abf4-da7466053743&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;5ca3358e-17ed-47c1-87b4-c1784fefea19&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;f1ec9c07-7fcb-45b2-8000-bf6922a0a6bb&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;attributes&#34;:{&#34;max_interval&#34;:500.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;c2c4ff76-bd8c-4d2c-836d-75d880fb4e4a&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;231076e5-9f5d-407c-9891-3c2c2e882314&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;a5df43d8-9cc8-443f-884f-5413a7c4277e&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;attributes&#34;:{&#34;overlay&#34;:{&#34;id&#34;:&#34;3964a1cc-a2c4-4985-8803-2e2c56c5ec45&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;47c38c67-f90c-4620-9623-b852d50c80de&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;1a58ed4e-244a-4973-a146-deec1382f3e2&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;5ca3358e-17ed-47c1-87b4-c1784fefea19&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;7eb1239c-e4f4-4640-9670-9105c0d039f4&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;attributes&#34;:{&#34;dimension&#34;:1,&#34;plot&#34;:{&#34;id&#34;:&#34;2b02d270-1fc5-4e2d-94c1-5a31dad07412&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;0ce77a2a-e686-4293-9058-754212338548&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;06a827da-f4e6-4f4e-a78d-543811a1e2be&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;47c38c67-f90c-4620-9623-b852d50c80de&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;4d1358c6-eb27-41e9-aee8-1407be6b169c&#34;,&#34;type&#34;:&#34;HelpTool&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,15]},&#34;id&#34;:&#34;45ab9ecf-9257-48f5-8892-44021b3f76c0&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;11906f8a-b5b2-48fc-84f5-d7d8b8fa8aaa&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;2b02d270-1fc5-4e2d-94c1-5a31dad07412&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;3ef3ac3c-c5ff-463e-8ec4-7786a7b8594f&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;0fb6a25e-393a-4907-a088-d1c44f33058d&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;attributes&#34;:{&#34;fill_color&#34;:{&#34;value&#34;:&#34;green&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;53fbe6b5-05f2-4e01-b69d-b02fbd6b42f8&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;grid_line_alpha&#34;:{&#34;value&#34;:0.3},&#34;plot&#34;:{&#34;id&#34;:&#34;47c38c67-f90c-4620-9623-b852d50c80de&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;a352976c-e5c0-4fca-87aa-41bf43f99cd4&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;d917e0a3-f8c8-4415-8c28-92e655ac761e&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,15]},&#34;id&#34;:&#34;57079c9e-b20d-44ad-9fc1-51f4eaff51fd&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;base&#34;:60,&#34;mantissas&#34;:[1,2,5,10,15,20,30],&#34;max_interval&#34;:1800000.0,&#34;min_interval&#34;:1000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;54c926ec-d445-4399-953b-c91eb3db02e8&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;bottom_units&#34;:&#34;screen&#34;,&#34;fill_alpha&#34;:{&#34;value&#34;:0.5},&#34;fill_color&#34;:{&#34;value&#34;:&#34;lightgrey&#34;},&#34;left_units&#34;:&#34;screen&#34;,&#34;level&#34;:&#34;overlay&#34;,&#34;line_alpha&#34;:{&#34;value&#34;:1.0},&#34;line_color&#34;:{&#34;value&#34;:&#34;black&#34;},&#34;line_dash&#34;:[4,4],&#34;line_width&#34;:{&#34;value&#34;:2},&#34;plot&#34;:null,&#34;render_mode&#34;:&#34;css&#34;,&#34;right_units&#34;:&#34;screen&#34;,&#34;top_units&#34;:&#34;screen&#34;},&#34;id&#34;:&#34;84fb954b-5157-445e-b509-9000e83b80b2&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;attributes&#34;:{&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;x0&#34;:{&#34;field&#34;:&#34;x0&#34;},&#34;x1&#34;:{&#34;field&#34;:&#34;x1&#34;},&#34;y0&#34;:{&#34;field&#34;:&#34;y0&#34;},&#34;y1&#34;:{&#34;field&#34;:&#34;y1&#34;}},&#34;id&#34;:&#34;e12cbf6a-2793-48c7-835e-73b9576a9ccb&#34;,&#34;type&#34;:&#34;Segment&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,15]},&#34;id&#34;:&#34;e7eb50d4-9da9-454f-9c0b-e7624338d00a&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;fill_alpha&#34;:{&#34;value&#34;:0.1},&#34;fill_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;07b9a2c0-3a14-4227-a5b1-98a6fcf6efde&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;5ca3358e-17ed-47c1-87b4-c1784fefea19&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;0dfda000-259f-4b09-9436-63c7acede24a&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;attributes&#34;:{&#34;bottom_units&#34;:&#34;screen&#34;,&#34;fill_alpha&#34;:{&#34;value&#34;:0.5},&#34;fill_color&#34;:{&#34;value&#34;:&#34;lightgrey&#34;},&#34;left_units&#34;:&#34;screen&#34;,&#34;level&#34;:&#34;overlay&#34;,&#34;line_alpha&#34;:{&#34;value&#34;:1.0},&#34;line_color&#34;:{&#34;value&#34;:&#34;black&#34;},&#34;line_dash&#34;:[4,4],&#34;line_width&#34;:{&#34;value&#34;:2},&#34;plot&#34;:null,&#34;render_mode&#34;:&#34;css&#34;,&#34;right_units&#34;:&#34;screen&#34;,&#34;top_units&#34;:&#34;screen&#34;},&#34;id&#34;:&#34;3964a1cc-a2c4-4985-8803-2e2c56c5ec45&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;attributes&#34;:{&#34;fill_color&#34;:{&#34;value&#34;:&#34;red&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;470e2757-d23b-4f8c-aa1b-87db2f62fde5&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;47c38c67-f90c-4620-9623-b852d50c80de&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;04a8d4e4-ad38-461a-8c61-249f32e3058f&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;attributes&#34;:{&#34;overlay&#34;:{&#34;id&#34;:&#34;b7620985-9208-4249-b8ad-8bdd9ad495cf&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;2b02d270-1fc5-4e2d-94c1-5a31dad07412&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;b65b5675-8283-40da-81ea-ddbc37b9c4bd&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;attributes&#34;:{&#34;fill_alpha&#34;:{&#34;value&#34;:0.1},&#34;fill_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;d18fa411-a891-4cea-8766-5f4a5a6f4494&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,4,7,10,13,16,19,22,25,28]},&#34;id&#34;:&#34;a19d4eac-b045-43ce-8740-fb733d077bd9&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;5ca3358e-17ed-47c1-87b4-c1784fefea19&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;954fac3f-aef0-41bc-b3ec-58881ca5e429&#34;,&#34;type&#34;:&#34;HelpTool&#34;},{&#34;attributes&#34;:{&#34;active_drag&#34;:&#34;auto&#34;,&#34;active_scroll&#34;:&#34;auto&#34;,&#34;active_tap&#34;:&#34;auto&#34;,&#34;tools&#34;:[{&#34;id&#34;:&#34;82eaddc1-e3d9-4d25-97fc-83ef98b92dec&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;id&#34;:&#34;fb957baa-6944-43b7-92dd-3d03f1bd35eb&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;id&#34;:&#34;34a47e2d-4382-459d-85c4-fb58acc4892a&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;id&#34;:&#34;bdbdff6c-0e14-4fef-a6ff-2635137fe888&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;id&#34;:&#34;a5df43d8-9cc8-443f-884f-5413a7c4277e&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;id&#34;:&#34;65b73ea5-b00c-4ac8-ab43-ee660d2a1578&#34;,&#34;type&#34;:&#34;HelpTool&#34;}]},&#34;id&#34;:&#34;f2434638-09a7-4fdd-bd81-b783acadccb3&#34;,&#34;type&#34;:&#34;Toolbar&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;f8f2ae67-06ac-462d-9ea1-2608a7cc09b8&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;3160f376-905e-4a2b-a348-f5e70dab8185&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;attributes&#34;:{&#34;active_drag&#34;:&#34;auto&#34;,&#34;active_scroll&#34;:&#34;auto&#34;,&#34;active_tap&#34;:&#34;auto&#34;,&#34;tools&#34;:[{&#34;id&#34;:&#34;69f00ba3-406e-4f7a-b19b-262343020d0e&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;id&#34;:&#34;04a8d4e4-ad38-461a-8c61-249f32e3058f&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;id&#34;:&#34;1a58ed4e-244a-4973-a146-deec1382f3e2&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;id&#34;:&#34;dd6ac384-6e00-4175-9cd7-89a1d9d6eecc&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;id&#34;:&#34;f348a951-0da1-425c-ad80-9348db9eb0c5&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;id&#34;:&#34;4d1358c6-eb27-41e9-aee8-1407be6b169c&#34;,&#34;type&#34;:&#34;HelpTool&#34;}]},&#34;id&#34;:&#34;ced949cc-12f9-40f4-a292-8c2a8d2804bc&#34;,&#34;type&#34;:&#34;Toolbar&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;231076e5-9f5d-407c-9891-3c2c2e882314&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;65b73ea5-b00c-4ac8-ab43-ee660d2a1578&#34;,&#34;type&#34;:&#34;HelpTool&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,4,8]},&#34;id&#34;:&#34;6d64872a-9952-4ea1-ac74-db7053c21e87&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x&#34;,&#34;y&#34;,&#34;height&#34;],&#34;data&#34;:{&#34;height&#34;:{&#34;__ndarray__&#34;:&#34;wHoUrkdhLkCA61G4HoUVQACuR+F6FBtAAM3MzMzMEkA=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;x&#34;:[true,false,false,false,false,true,true,true],&#34;y&#34;:{&#34;__ndarray__&#34;:&#34;HoXrUbg5hkAK16NwPZqFQKRwPQrX7oVA9ihcj8IzhkA=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]}}},&#34;id&#34;:&#34;7722eb40-3f1e-4d65-ac45-3aa63562627c&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;a0733734-7547-4306-84d7-1ca1d2ccc7e9&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;1c10d542-d650-4e9c-ac7e-eec50356dc64&#34;,&#34;type&#34;:&#34;Segment&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;e12cbf6a-2793-48c7-835e-73b9576a9ccb&#34;,&#34;type&#34;:&#34;Segment&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;3a79197a-4cae-42e6-8b71-f6165e81e4f5&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;991928d7-be8a-4b68-91a3-8c80b78db798&#34;,&#34;type&#34;:&#34;BasicTicker&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;20eeb3f5-5576-4974-b39b-c4219a49044c&#34;,&#34;type&#34;:&#34;BasicTicker&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;231076e5-9f5d-407c-9891-3c2c2e882314&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;019dbbbc-abb4-4e0e-ad90-b4acf51f52e6&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;6c9ef4d9-81d8-43e9-8822-e38e936de79b&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{&#34;overlay&#34;:{&#34;id&#34;:&#34;c8c09528-e2e8-4d78-bbe6-496483c726fd&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;f8f2ae67-06ac-462d-9ea1-2608a7cc09b8&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;f2bf7646-e142-4a28-b2d6-117e0e2b8aea&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;attributes&#34;:{&#34;line_color&#34;:{&#34;value&#34;:&#34;Black&#34;},&#34;x0&#34;:{&#34;field&#34;:&#34;x0&#34;},&#34;x1&#34;:{&#34;field&#34;:&#34;x1&#34;},&#34;y0&#34;:{&#34;field&#34;:&#34;y0&#34;},&#34;y1&#34;:{&#34;field&#34;:&#34;y1&#34;}},&#34;id&#34;:&#34;8393c8ac-9775-4f17-968b-1ce6ad4efe8e&#34;,&#34;type&#34;:&#34;Segment&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;9dd4599c-7230-41ef-a2bd-1de601aa0824&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;b412d21b-9d3f-48b5-8668-24965f72a70c&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;5ca3358e-17ed-47c1-87b4-c1784fefea19&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;20eeb3f5-5576-4974-b39b-c4219a49044c&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;926ce207-b005-40db-adcb-2ebefd3d6dd7&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,1,2,3,4,5,6,7,8,9,10,11]},&#34;id&#34;:&#34;28d7094a-412c-4d27-8264-d0854f578157&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,8,15,22]},&#34;id&#34;:&#34;7b94213c-431e-4e80-bbf8-60982c2c2e5c&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x&#34;,&#34;y&#34;,&#34;height&#34;],&#34;data&#34;:{&#34;height&#34;:{&#34;__ndarray__&#34;:&#34;ADAzMzMzwz8A16NwPQoZQIBmZmZmZhBAgBSuR+F6J0A=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;x&#34;:{&#34;__ndarray__&#34;:&#34;AACA/EkzdUIAAEBinDN1QgAAAMjuM3VCAABA+eU0dUI=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;y&#34;:{&#34;__ndarray__&#34;:&#34;ZmZmZmZ3hkBmZmZmZlyGQOxRuB6FR4ZACtejcD3ohUA=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]}}},&#34;id&#34;:&#34;5d00ad0c-72de-4740-a9e6-76198d3d13ba&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;70c6b9e1-f7a2-4277-98a0-4e28198233fa&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x&#34;,&#34;y&#34;,&#34;height&#34;],&#34;data&#34;:{&#34;height&#34;:{&#34;__ndarray__&#34;:&#34;wHoUrkdhLkCA61G4HoUVQACuR+F6FBtAAM3MzMzMEkA=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;x&#34;:{&#34;__ndarray__&#34;:&#34;AADAlvcydUIAAABfODV1QgAAwMSKNXVCAACAKt01dUI=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;y&#34;:{&#34;__ndarray__&#34;:&#34;HoXrUbg5hkAK16NwPZqFQKRwPQrX7oVA9ihcj8IzhkA=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]}}},&#34;id&#34;:&#34;0c2ac678-4010-4b20-8027-d3a7ab7963ee&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,4,8]},&#34;id&#34;:&#34;1446850a-0803-4a2d-93bb-fe6c0e44b819&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;max_interval&#34;:500.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;a87c62d8-1e7c-43c9-88e9-6c28c696c397&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;bottom_units&#34;:&#34;screen&#34;,&#34;fill_alpha&#34;:{&#34;value&#34;:0.5},&#34;fill_color&#34;:{&#34;value&#34;:&#34;lightgrey&#34;},&#34;left_units&#34;:&#34;screen&#34;,&#34;level&#34;:&#34;overlay&#34;,&#34;line_alpha&#34;:{&#34;value&#34;:1.0},&#34;line_color&#34;:{&#34;value&#34;:&#34;black&#34;},&#34;line_dash&#34;:[4,4],&#34;line_width&#34;:{&#34;value&#34;:2},&#34;plot&#34;:null,&#34;render_mode&#34;:&#34;css&#34;,&#34;right_units&#34;:&#34;screen&#34;,&#34;top_units&#34;:&#34;screen&#34;},&#34;id&#34;:&#34;8dbeba7f-e8f1-4891-876f-15536eb721da&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;attributes&#34;:{&#34;dimension&#34;:1,&#34;grid_line_alpha&#34;:{&#34;value&#34;:0.3},&#34;plot&#34;:{&#34;id&#34;:&#34;5ca3358e-17ed-47c1-87b4-c1784fefea19&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;20eeb3f5-5576-4974-b39b-c4219a49044c&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;829debae-1315-4289-aca5-91cb473e0e44&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;89edc8c6-acb7-4f82-9d7b-68decd13f621&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;082a1e98-237f-4e8f-8469-c242b89ceca2&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,4,7,10,13,16,19,22,25,28]},&#34;id&#34;:&#34;aa3c7afa-c2cd-424e-9956-d7953d384c0e&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;b6b3d72d-0a69-4c58-a1a8-279fa4bcb0c6&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;231076e5-9f5d-407c-9891-3c2c2e882314&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;991928d7-be8a-4b68-91a3-8c80b78db798&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;e839698b-f282-478b-aeed-701f9766dc9c&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;attributes&#34;:{&#34;max_interval&#34;:500.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;6354a4f0-ac87-4717-a7dd-6f74effbe08e&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;7f0166ab-8675-4c7e-8d0e-8f8561eabdca&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;11906f8a-b5b2-48fc-84f5-d7d8b8fa8aaa&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,8,15,22]},&#34;id&#34;:&#34;95dddb07-39f8-47e5-9d18-0ad245d7a64e&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;47c38c67-f90c-4620-9623-b852d50c80de&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;69f00ba3-406e-4f7a-b19b-262343020d0e&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;attributes&#34;:{&#34;fill_alpha&#34;:{&#34;value&#34;:0.1},&#34;fill_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;30c1c164-3650-4743-b4eb-0c1fc1fff27c&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x&#34;,&#34;y&#34;,&#34;height&#34;],&#34;data&#34;:{&#34;height&#34;:{&#34;__ndarray__&#34;:&#34;wHoUrkdhLkCA61G4HoUVQACuR+F6FBtAAM3MzMzMEkA=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;x&#34;:{&#34;__ndarray__&#34;:&#34;AADAlvcydUIAAABfODV1QgAAwMSKNXVCAACAKt01dUI=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;y&#34;:{&#34;__ndarray__&#34;:&#34;HoXrUbg5hkAK16NwPZqFQKRwPQrX7oVA9ihcj8IzhkA=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]}}},&#34;id&#34;:&#34;b34c837a-555f-49b1-a81c-7e04f1a82b99&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;9b34a733-d220-496c-980e-a81244c3f8e8&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;47c38c67-f90c-4620-9623-b852d50c80de&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;f5287347-3b2c-445e-92c6-b25fa77a7c59&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;0fd796a5-5fd9-4e15-b863-aa4a298c3210&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,6]},&#34;id&#34;:&#34;d0b8549f-330a-448f-8817-3649ae07ef8d&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;231076e5-9f5d-407c-9891-3c2c2e882314&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;82eaddc1-e3d9-4d25-97fc-83ef98b92dec&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;f5287347-3b2c-445e-92c6-b25fa77a7c59&#34;,&#34;type&#34;:&#34;BasicTicker&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;bfda0c4b-8824-4042-b811-a0c345c37162&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;f8f2ae67-06ac-462d-9ea1-2608a7cc09b8&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;98f8128e-245f-4198-a9f3-f311781ad487&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;b99ea22d-3023-49ae-b0e5-515603f3f969&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;7f0166ab-8675-4c7e-8d0e-8f8561eabdca&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;89edc8c6-acb7-4f82-9d7b-68decd13f621&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;fac7e7d1-32a4-4caa-b39e-a283f07622be&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;d11ff890-7300-4704-bed8-8e030c5d92cd&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;f25f4e85-48eb-4960-838f-41ae2558aaea&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;a3014a9a-7ee2-4673-bd2c-4c9ad4991a23&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;30c1c164-3650-4743-b4eb-0c1fc1fff27c&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;116d36ba-6183-4180-91c2-2e7282718c14&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]},&#34;id&#34;:&#34;bafa9431-16f9-48bf-a278-77ccdb68bf0a&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;2b02d270-1fc5-4e2d-94c1-5a31dad07412&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;0aaeffcd-8bb8-4243-9d5f-06ff9ff121e3&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;b412d21b-9d3f-48b5-8668-24965f72a70c&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;9c3cd136-441f-4b77-be65-fb27477fcbb8&#34;,&#34;type&#34;:&#34;YearsTicker&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;2b02d270-1fc5-4e2d-94c1-5a31dad07412&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;759922b2-99de-4ea5-86d3-478dbcd5d874&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;attributes&#34;:{&#34;grid_line_alpha&#34;:{&#34;value&#34;:0.3},&#34;plot&#34;:{&#34;id&#34;:&#34;89edc8c6-acb7-4f82-9d7b-68decd13f621&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;fac7e7d1-32a4-4caa-b39e-a283f07622be&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;9c39eebb-b7ff-4e48-8969-5856201aee5e&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,2,4,6,8,10]},&#34;id&#34;:&#34;eb4a1a29-3be2-4d08-a8b2-07ddc52124fd&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,1,2,3,4,5,6,7,8,9,10,11]},&#34;id&#34;:&#34;3623babc-7925-4352-9312-433dd92fd258&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;d131ca40-3112-4b16-b486-d62d08ff0c54&#34;,&#34;type&#34;:&#34;BasicTicker&#34;},{&#34;attributes&#34;:{&#34;base&#34;:60,&#34;mantissas&#34;:[1,2,5,10,15,20,30],&#34;max_interval&#34;:1800000.0,&#34;min_interval&#34;:1000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;bfb0fa7b-122e-4787-9165-f456481e210b&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;dc94bb6b-c767-418d-8e55-eabaafa266f8&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;86bce5c1-8ca3-451e-b9f6-8d51a76979c3&#34;,&#34;type&#34;:&#34;Segment&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;93491425-107f-4373-8d34-8c5b4cbe78ca&#34;,&#34;type&#34;:&#34;Segment&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;7ec875fe-20d7-465e-9838-f0e3b7fbd985&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;dimension&#34;:1,&#34;grid_line_alpha&#34;:{&#34;value&#34;:0.3},&#34;plot&#34;:{&#34;id&#34;:&#34;89edc8c6-acb7-4f82-9d7b-68decd13f621&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;d131ca40-3112-4b16-b486-d62d08ff0c54&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;b1801519-5cae-451e-9efd-655e595aa675&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;231076e5-9f5d-407c-9891-3c2c2e882314&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;fb957baa-6944-43b7-92dd-3d03f1bd35eb&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;attributes&#34;:{&#34;fill_color&#34;:{&#34;field&#34;:&#34;#CCFFF&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;ca8e0284-2b11-4e78-b62b-ca35237d0ec8&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;829726b1-abb5-406a-8d38-fbf4008c6035&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;8393c8ac-9775-4f17-968b-1ce6ad4efe8e&#34;,&#34;type&#34;:&#34;Segment&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;912ba7dd-260c-4c4d-ade3-b48a6dd49604&#34;,&#34;type&#34;:&#34;Segment&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;614e2807-a4d1-4cc5-89cc-2ff3ab20a050&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;2b02d270-1fc5-4e2d-94c1-5a31dad07412&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;a0d48142-e952-4ee0-8e48-85f209c97c1f&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;aca886fe-c975-4433-b8a6-5bf1039d6f44&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;cc9fe137-9607-41b2-9d74-c0bbe6ef3d0c&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;ca8e0284-2b11-4e78-b62b-ca35237d0ec8&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;626ff9d5-db23-44a4-ae7c-c36d2dcac95e&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;77ab83c2-3f46-4e35-ad82-500c2796216e&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;2b02d270-1fc5-4e2d-94c1-5a31dad07412&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;2c4a9be0-353f-48b0-a50b-23a8b54a44db&#34;,&#34;type&#34;:&#34;HelpTool&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]},&#34;id&#34;:&#34;99f488be-3efd-40e1-899c-22216f319fd6&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;active_drag&#34;:&#34;auto&#34;,&#34;active_scroll&#34;:&#34;auto&#34;,&#34;active_tap&#34;:&#34;auto&#34;,&#34;tools&#34;:[{&#34;id&#34;:&#34;affb09e7-a363-4c65-b110-1f9535749e66&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;id&#34;:&#34;082a1e98-237f-4e8f-8469-c242b89ceca2&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;id&#34;:&#34;ba967a39-cb13-4e9c-98aa-b3133f12127e&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;id&#34;:&#34;52adfb00-b116-45b3-921a-ef050cb1c0a0&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;id&#34;:&#34;6e00dcfa-2bcb-4757-96d4-918a24b759bf&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;id&#34;:&#34;6ed46e64-4c17-41d8-a9a0-65ff39e4288d&#34;,&#34;type&#34;:&#34;HelpTool&#34;}]},&#34;id&#34;:&#34;ebb4e915-75d9-441b-86a2-937dfb908628&#34;,&#34;type&#34;:&#34;Toolbar&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;2b02d270-1fc5-4e2d-94c1-5a31dad07412&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;ede284fb-0dc7-4e5c-a044-9727a1d0dca9&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;attributes&#34;:{&#34;base&#34;:24,&#34;mantissas&#34;:[1,2,4,6,8,12],&#34;max_interval&#34;:43200000.0,&#34;min_interval&#34;:3600000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;a6822a05-61ad-438b-81d6-d65ac9aedd0a&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;x0&#34;:{&#34;field&#34;:&#34;x0&#34;},&#34;x1&#34;:{&#34;field&#34;:&#34;x1&#34;},&#34;y0&#34;:{&#34;field&#34;:&#34;y0&#34;},&#34;y1&#34;:{&#34;field&#34;:&#34;y1&#34;}},&#34;id&#34;:&#34;93491425-107f-4373-8d34-8c5b4cbe78ca&#34;,&#34;type&#34;:&#34;Segment&#34;},{&#34;attributes&#34;:{&#34;bottom_units&#34;:&#34;screen&#34;,&#34;fill_alpha&#34;:{&#34;value&#34;:0.5},&#34;fill_color&#34;:{&#34;value&#34;:&#34;lightgrey&#34;},&#34;left_units&#34;:&#34;screen&#34;,&#34;level&#34;:&#34;overlay&#34;,&#34;line_alpha&#34;:{&#34;value&#34;:1.0},&#34;line_color&#34;:{&#34;value&#34;:&#34;black&#34;},&#34;line_dash&#34;:[4,4],&#34;line_width&#34;:{&#34;value&#34;:2},&#34;plot&#34;:null,&#34;render_mode&#34;:&#34;css&#34;,&#34;right_units&#34;:&#34;screen&#34;,&#34;top_units&#34;:&#34;screen&#34;},&#34;id&#34;:&#34;b7620985-9208-4249-b8ad-8bdd9ad495cf&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;0621d702-636d-470a-800f-beafe47979cb&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;385a3d61-0e2a-4ac1-9a9a-1a6a6ecf97de&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;89edc8c6-acb7-4f82-9d7b-68decd13f621&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;affb09e7-a363-4c65-b110-1f9535749e66&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;b34c837a-555f-49b1-a81c-7e04f1a82b99&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;53fbe6b5-05f2-4e01-b69d-b02fbd6b42f8&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;07b9a2c0-3a14-4227-a5b1-98a6fcf6efde&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;65879c2f-fddd-4538-9923-e475be285fd0&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;c0f7808d-2eac-4912-90a8-89e005301f94&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;47c38c67-f90c-4620-9623-b852d50c80de&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;a352976c-e5c0-4fca-87aa-41bf43f99cd4&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;21b3281d-defe-4bb9-b395-fd52aa3059ee&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;2415c02d-3ba6-4506-be5e-cbc0d85e81a9&#34;,&#34;type&#34;:&#34;BasicTicker&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x&#34;,&#34;y&#34;,&#34;height&#34;],&#34;data&#34;:{&#34;height&#34;:{&#34;__ndarray__&#34;:&#34;wHoUrkdhLkAAMDMzMzPDPwDXo3A9ChlAgGZmZmZmEECAFK5H4XonQIDrUbgehRVAAK5H4XoUG0AAzczMzMwSQA==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]},&#34;x&#34;:{&#34;__ndarray__&#34;:&#34;AADAlvcydUIAAABfODV1QgAAwMSKNXVCAACAKt01dUI=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;y&#34;:{&#34;__ndarray__&#34;:&#34;HoXrUbg5hkBmZmZmZneGQGZmZmZmXIZA7FG4HoVHhkAK16NwPeiFQArXo3A9moVApHA9CtfuhUD2KFyPwjOGQA==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]}}},&#34;id&#34;:&#34;f25f4e85-48eb-4960-838f-41ae2558aaea&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x&#34;,&#34;y&#34;,&#34;height&#34;],&#34;data&#34;:{&#34;height&#34;:{&#34;__ndarray__&#34;:&#34;ADAzMzMzwz8A16NwPQoZQIBmZmZmZhBAgBSuR+F6J0A=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;x&#34;:{&#34;__ndarray__&#34;:&#34;AACA/EkzdUIAAEBinDN1QgAAAMjuM3VCAABA+eU0dUI=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;y&#34;:{&#34;__ndarray__&#34;:&#34;ZmZmZmZ3hkBmZmZmZlyGQOxRuB6FR4ZACtejcD3ohUA=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]}}},&#34;id&#34;:&#34;caa879c9-a791-42cd-9bf0-130fca583f17&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;dimension&#34;:1,&#34;plot&#34;:{&#34;id&#34;:&#34;231076e5-9f5d-407c-9891-3c2c2e882314&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;991928d7-be8a-4b68-91a3-8c80b78db798&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;bb1abee2-9389-4584-9538-71a2affcd475&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{&#34;bottom_units&#34;:&#34;screen&#34;,&#34;fill_alpha&#34;:{&#34;value&#34;:0.5},&#34;fill_color&#34;:{&#34;value&#34;:&#34;lightgrey&#34;},&#34;left_units&#34;:&#34;screen&#34;,&#34;level&#34;:&#34;overlay&#34;,&#34;line_alpha&#34;:{&#34;value&#34;:1.0},&#34;line_color&#34;:{&#34;value&#34;:&#34;black&#34;},&#34;line_dash&#34;:[4,4],&#34;line_width&#34;:{&#34;value&#34;:2},&#34;plot&#34;:null,&#34;render_mode&#34;:&#34;css&#34;,&#34;right_units&#34;:&#34;screen&#34;,&#34;top_units&#34;:&#34;screen&#34;},&#34;id&#34;:&#34;c8c09528-e2e8-4d78-bbe6-496483c726fd&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,8,15,22]},&#34;id&#34;:&#34;2a1e39da-03cc-4728-b55c-0e6302371900&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,4,8]},&#34;id&#34;:&#34;40a56fe5-b5c1-4b63-9e93-f6f73001dd4a&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;3fa4b0aa-dcf1-4a0c-8935-55f5539b4694&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},{&#34;attributes&#34;:{&#34;fill_color&#34;:{&#34;value&#34;:&#34;green&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;337f8e19-40b1-4e90-8e58-97f05d9f6b94&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;fill_color&#34;:{&#34;value&#34;:&#34;#CCFFFF&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;9f677ef1-d64d-4003-8f0b-517be465f36c&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;9498db81-fa44-46f3-801d-cc7fa7ef6fe3&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;base&#34;:24,&#34;mantissas&#34;:[1,2,4,6,8,12],&#34;max_interval&#34;:43200000.0,&#34;min_interval&#34;:3600000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;d93a1369-2ed2-4add-b334-edee1487acdd&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,15]},&#34;id&#34;:&#34;66be8e7c-6488-4cb4-b205-1c1ba4746726&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;base&#34;:60,&#34;mantissas&#34;:[1,2,5,10,15,20,30],&#34;max_interval&#34;:1800000.0,&#34;min_interval&#34;:1000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;0a554368-bf51-4ed7-abb7-76b819814e01&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;fill_color&#34;:{&#34;value&#34;:&#34;#FF3333&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;741c540e-0bd8-41a3-a2bc-72e7369d6f4a&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;fill_color&#34;:{&#34;value&#34;:&#34;red&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;3f977299-936e-4d01-ab7d-71f7ce3eee97&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,4,7,10,13,16,19,22,25,28]},&#34;id&#34;:&#34;04d1cd7c-a202-4ee8-b79f-a5a0e1023ae4&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x&#34;,&#34;y&#34;,&#34;height&#34;],&#34;data&#34;:{&#34;height&#34;:{&#34;__ndarray__&#34;:&#34;ADAzMzMzwz8A16NwPQoZQIBmZmZmZhBAgBSuR+F6J0A=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;x&#34;:{&#34;__ndarray__&#34;:&#34;AACA/EkzdUIAAEBinDN1QgAAAMjuM3VCAABA+eU0dUI=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;y&#34;:{&#34;__ndarray__&#34;:&#34;ZmZmZmZ3hkBmZmZmZlyGQOxRuB6FR4ZACtejcD3ohUA=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]}}},&#34;id&#34;:&#34;e9b7f885-67bd-417a-b0cb-5e88b31fa684&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;base&#34;:24,&#34;mantissas&#34;:[1,2,4,6,8,12],&#34;max_interval&#34;:43200000.0,&#34;min_interval&#34;:3600000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;7887ed74-3d22-4365-b3e6-7f18e77e4c79&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;79063f6e-d102-4f24-a742-f3fa4ab72541&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;fill_alpha&#34;:{&#34;value&#34;:0.1},&#34;fill_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;014be402-aa3c-4c24-bebe-86fe7667573a&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;320fcb2e-43f7-425f-88aa-d89d7820abe4&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;5d00ad0c-72de-4740-a9e6-76198d3d13ba&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;741c540e-0bd8-41a3-a2bc-72e7369d6f4a&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;014be402-aa3c-4c24-bebe-86fe7667573a&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;d4442868-d9db-4f48-9eb6-5690117c2d72&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;3fa4b0aa-dcf1-4a0c-8935-55f5539b4694&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;f8f2ae67-06ac-462d-9ea1-2608a7cc09b8&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;6218c3c1-df5c-47c2-a93d-efc13d19cee3&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;15123baf-5615-45a8-8c1c-70bf3ac0b067&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;99de450d-ee4e-49a2-81f5-5b64d1a7c878&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;3f977299-936e-4d01-ab7d-71f7ce3eee97&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;d18fa411-a891-4cea-8766-5f4a5a6f4494&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;db94959f-3337-44b1-8515-deef017bd045&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;bfda0c4b-8824-4042-b811-a0c345c37162&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;2b02d270-1fc5-4e2d-94c1-5a31dad07412&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;0ce77a2a-e686-4293-9058-754212338548&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;e1eb6b83-a3a4-4e50-a55f-091dc7471c28&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;attributes&#34;:{&#34;num_minor_ticks&#34;:5},&#34;id&#34;:&#34;019dbbbc-abb4-4e0e-ad90-b4acf51f52e6&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,6]},&#34;id&#34;:&#34;ed6e31c9-cbae-4bf4-ae88-33717549074f&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;37c523da-4fa0-4612-a87f-97a70e761b50&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;231076e5-9f5d-407c-9891-3c2c2e882314&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;019dbbbc-abb4-4e0e-ad90-b4acf51f52e6&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;dbb64fbd-2474-490a-93b6-5c29f51a50a4&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x0&#34;,&#34;y0&#34;,&#34;x1&#34;,&#34;y1&#34;],&#34;data&#34;:{&#34;x0&#34;:{&#34;__ndarray__&#34;:&#34;AADAlvcydUIAAID8STN1QgAAQGKcM3VCAAAAyO4zdUIAAED55TR1QgAAAF84NXVCAADAxIo1dUIAAIAq3TV1Qg==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]},&#34;x1&#34;:{&#34;__ndarray__&#34;:&#34;AADAlvcydUIAAID8STN1QgAAQGKcM3VCAAAAyO4zdUIAAED55TR1QgAAAF84NXVCAADAxIo1dUIAAIAq3TV1Qg==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]},&#34;y0&#34;:{&#34;__ndarray__&#34;:&#34;FK5H4Xp2hkAAAAAAAICGQJqZmZmZe4ZAUrgehetjhkAfhetRuCCGQLgehetR/oVAPQrXo3ANhkDsUbgehWOGQA==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]},&#34;y1&#34;:{&#34;__ndarray__&#34;:&#34;XI/C9SjehUAAAAAAAECGQFyPwvUoEIZAXI/C9SgQhkAzMzMzM3eFQB+F61G4aoVAAAAAAACwhUB7FK5H4fqFQA==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]}}},&#34;id&#34;:&#34;829726b1-abb5-406a-8d38-fbf4008c6035&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;active_drag&#34;:&#34;auto&#34;,&#34;active_scroll&#34;:&#34;auto&#34;,&#34;active_tap&#34;:&#34;auto&#34;,&#34;tools&#34;:[{&#34;id&#34;:&#34;e5dc87b0-4143-4b0c-a26a-3e23cafb96e8&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;id&#34;:&#34;98f8128e-245f-4198-a9f3-f311781ad487&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;id&#34;:&#34;f2bf7646-e142-4a28-b2d6-117e0e2b8aea&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;id&#34;:&#34;3160f376-905e-4a2b-a348-f5e70dab8185&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;id&#34;:&#34;738bd628-6c34-49a2-b840-75e73a501f92&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;id&#34;:&#34;0c5f9c6d-c481-4e30-bc8d-953ede4005ec&#34;,&#34;type&#34;:&#34;HelpTool&#34;}]},&#34;id&#34;:&#34;173bfa7b-fb53-467f-95db-71b9e024c888&#34;,&#34;type&#34;:&#34;Toolbar&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x&#34;,&#34;y&#34;,&#34;height&#34;],&#34;data&#34;:{&#34;height&#34;:{&#34;__ndarray__&#34;:&#34;wHoUrkdhLkCA61G4HoUVQACuR+F6FBtAAM3MzMzMEkA=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;x&#34;:{&#34;__ndarray__&#34;:&#34;AADAlvcydUIAAABfODV1QgAAwMSKNXVCAACAKt01dUI=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;y&#34;:{&#34;__ndarray__&#34;:&#34;HoXrUbg5hkAK16NwPZqFQKRwPQrX7oVA9ihcj8IzhkA=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]}}},&#34;id&#34;:&#34;439292d3-fc67-4c58-b839-82ebea2d544f&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x0&#34;,&#34;y0&#34;,&#34;x1&#34;,&#34;y1&#34;],&#34;data&#34;:{&#34;x0&#34;:{&#34;__ndarray__&#34;:&#34;AADAlvcydUIAAID8STN1QgAAQGKcM3VCAAAAyO4zdUIAAED55TR1QgAAAF84NXVCAADAxIo1dUIAAIAq3TV1Qg==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]},&#34;x1&#34;:{&#34;__ndarray__&#34;:&#34;AADAlvcydUIAAID8STN1QgAAQGKcM3VCAAAAyO4zdUIAAED55TR1QgAAAF84NXVCAADAxIo1dUIAAIAq3TV1Qg==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]},&#34;y0&#34;:{&#34;__ndarray__&#34;:&#34;FK5H4Xp2hkAAAAAAAICGQJqZmZmZe4ZAUrgehetjhkAfhetRuCCGQLgehetR/oVAPQrXo3ANhkDsUbgehWOGQA==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]},&#34;y1&#34;:{&#34;__ndarray__&#34;:&#34;XI/C9SjehUAAAAAAAECGQFyPwvUoEIZAXI/C9SgQhkAzMzMzM3eFQB+F61G4aoVAAAAAAACwhUB7FK5H4fqFQA==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]}}},&#34;id&#34;:&#34;c891b3b3-95f9-4a9b-84eb-b40a6c4bfebb&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;fill_alpha&#34;:{&#34;value&#34;:0.1},&#34;fill_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;6443f3c3-e5f0-4392-8520-b66dd65fb059&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;401cc199-0303-4587-985e-27cae83bc862&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;470e2757-d23b-4f8c-aa1b-87db2f62fde5&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;be46db2f-7ab9-40da-b85f-71be40a7e41c&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;e38b0c83-9385-4bc4-adad-ae724629211d&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;b6b3d72d-0a69-4c58-a1a8-279fa4bcb0c6&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;9b34a733-d220-496c-980e-a81244c3f8e8&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,4,7,10,13,16,19,22,25,28]},&#34;id&#34;:&#34;bc4363ee-829c-4f51-8c15-02b80f2f0ffc&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,2,4,6,8,10]},&#34;id&#34;:&#34;9fc1bdb9-6982-4fbd-b72c-a0e190ba9fd3&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;below&#34;:[{&#34;id&#34;:&#34;0fb6a25e-393a-4907-a088-d1c44f33058d&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;}],&#34;left&#34;:[{&#34;id&#34;:&#34;e1eb6b83-a3a4-4e50-a55f-091dc7471c28&#34;,&#34;type&#34;:&#34;LinearAxis&#34;}],&#34;plot_height&#34;:300,&#34;plot_width&#34;:1000,&#34;renderers&#34;:[{&#34;id&#34;:&#34;0fb6a25e-393a-4907-a088-d1c44f33058d&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;id&#34;:&#34;5e7ffb8a-aafa-4d1d-8ab9-319e18618e69&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;e1eb6b83-a3a4-4e50-a55f-091dc7471c28&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;id&#34;:&#34;06a827da-f4e6-4f4e-a78d-543811a1e2be&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;b7620985-9208-4249-b8ad-8bdd9ad495cf&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;id&#34;:&#34;116d36ba-6183-4180-91c2-2e7282718c14&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;id&#34;:&#34;db94959f-3337-44b1-8515-deef017bd045&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;}],&#34;title&#34;:{&#34;id&#34;:&#34;4e902cd7-1ffa-4b34-86b4-29fb1589c777&#34;,&#34;type&#34;:&#34;Title&#34;},&#34;tool_events&#34;:{&#34;id&#34;:&#34;98039b00-84f1-467a-ad56-a4e4bd18302c&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},&#34;toolbar&#34;:{&#34;id&#34;:&#34;6f0cc620-6bf2-4c07-9996-7ffd9cab9701&#34;,&#34;type&#34;:&#34;Toolbar&#34;},&#34;x_range&#34;:{&#34;id&#34;:&#34;321410f6-0db4-4261-98f5-947197635490&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},&#34;y_range&#34;:{&#34;id&#34;:&#34;499f0dd2-9481-422a-af47-c920b77f4ad6&#34;,&#34;type&#34;:&#34;DataRange1d&#34;}},&#34;id&#34;:&#34;2b02d270-1fc5-4e2d-94c1-5a31dad07412&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;12bb9c5c-ad0e-4c9d-b13c-b0390845451b&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;89edc8c6-acb7-4f82-9d7b-68decd13f621&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;d131ca40-3112-4b16-b486-d62d08ff0c54&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;d46f31fd-b49e-4887-99ec-07416a1551e5&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;37c523da-4fa0-4612-a87f-97a70e761b50&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;f8f2ae67-06ac-462d-9ea1-2608a7cc09b8&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;e5dc87b0-4143-4b0c-a26a-3e23cafb96e8&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;attributes&#34;:{&#34;num_minor_ticks&#34;:5},&#34;id&#34;:&#34;fac7e7d1-32a4-4caa-b39e-a283f07622be&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,1,2,3,4,5,6,7,8,9,10,11]},&#34;id&#34;:&#34;2d5781be-abc0-4363-a1c4-023202f41d5d&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,8,15,22]},&#34;id&#34;:&#34;1b62527d-072b-4245-850a-7f666552803d&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;f8f2ae67-06ac-462d-9ea1-2608a7cc09b8&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;0c5f9c6d-c481-4e30-bc8d-953ede4005ec&#34;,&#34;type&#34;:&#34;HelpTool&#34;},{&#34;attributes&#34;:{&#34;fill_alpha&#34;:{&#34;value&#34;:0.1},&#34;fill_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;626ff9d5-db23-44a4-ae7c-c36d2dcac95e&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;e2e2b63a-70da-4b12-b406-412989d4f428&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;9f677ef1-d64d-4003-8f0b-517be465f36c&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;1adc4a7b-6d25-4359-b4dd-9981c54eecb2&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;26728b81-dde6-4b55-a54f-b0d3df859a8d&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,1,2,3,4,5,6,7,8,9,10,11]},&#34;id&#34;:&#34;c7662dc5-e6a8-462b-9fff-9204c426b89e&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]},&#34;id&#34;:&#34;74b8ef1d-8349-4e33-aca1-59a384a18323&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;max_interval&#34;:500.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;38fc71a1-69df-4354-9d61-9a7d4a65d929&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;321410f6-0db4-4261-98f5-947197635490&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;f8f2ae67-06ac-462d-9ea1-2608a7cc09b8&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;738bd628-6c34-49a2-b840-75e73a501f92&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,1,2,3,4,5,6,7,8,9,10,11]},&#34;id&#34;:&#34;64ae830c-5a27-4b6b-be17-43f160370517&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:null,&#34;text&#34;:&#34;Candlestick Chart&#34;},&#34;id&#34;:&#34;4e902cd7-1ffa-4b34-86b4-29fb1589c777&#34;,&#34;type&#34;:&#34;Title&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;c55f9e6c-2013-45c5-8bfa-5d81c54521c2&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;active_drag&#34;:&#34;auto&#34;,&#34;active_scroll&#34;:&#34;auto&#34;,&#34;active_tap&#34;:&#34;auto&#34;,&#34;tools&#34;:[{&#34;id&#34;:&#34;a0d48142-e952-4ee0-8e48-85f209c97c1f&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;id&#34;:&#34;759922b2-99de-4ea5-86d3-478dbcd5d874&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;id&#34;:&#34;b65b5675-8283-40da-81ea-ddbc37b9c4bd&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;id&#34;:&#34;0aaeffcd-8bb8-4243-9d5f-06ff9ff121e3&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;id&#34;:&#34;ede284fb-0dc7-4e5c-a044-9727a1d0dca9&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;id&#34;:&#34;2c4a9be0-353f-48b0-a50b-23a8b54a44db&#34;,&#34;type&#34;:&#34;HelpTool&#34;}]},&#34;id&#34;:&#34;6f0cc620-6bf2-4c07-9996-7ffd9cab9701&#34;,&#34;type&#34;:&#34;Toolbar&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;a01ba455-17b1-4baf-ae4e-2e933da17498&#34;,&#34;type&#34;:&#34;BasicTicker&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;9685a5ae-1846-42ba-8dd4-3890b8af031a&#34;,&#34;type&#34;:&#34;YearsTicker&#34;},{&#34;attributes&#34;:{&#34;dimension&#34;:1,&#34;grid_line_alpha&#34;:{&#34;value&#34;:0},&#34;plot&#34;:{&#34;id&#34;:&#34;f8f2ae67-06ac-462d-9ea1-2608a7cc09b8&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;a01ba455-17b1-4baf-ae4e-2e933da17498&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;2213a01a-f26a-4be8-8ee0-5f78130a486c&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,4,8]},&#34;id&#34;:&#34;393ba44d-8519-4860-88cc-4a7a291176b8&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,2,4,6,8,10]},&#34;id&#34;:&#34;17a1884f-9ba9-43a5-848b-2189c47d3e80&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;x0&#34;:{&#34;field&#34;:&#34;x0&#34;},&#34;x1&#34;:{&#34;field&#34;:&#34;x1&#34;},&#34;y0&#34;:{&#34;field&#34;:&#34;y0&#34;},&#34;y1&#34;:{&#34;field&#34;:&#34;y1&#34;}},&#34;id&#34;:&#34;912ba7dd-260c-4c4d-ade3-b48a6dd49604&#34;,&#34;type&#34;:&#34;Segment&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;98039b00-84f1-467a-ad56-a4e4bd18302c&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;a6ff5fb7-bbe0-487f-9e31-0622838e7f47&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;499f0dd2-9481-422a-af47-c920b77f4ad6&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;fill_alpha&#34;:{&#34;value&#34;:0.1},&#34;fill_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;1adc4a7b-6d25-4359-b4dd-9981c54eecb2&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;fill_color&#34;:{&#34;value&#34;:&#34;green&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;a3014a9a-7ee2-4673-bd2c-4c9ad4991a23&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;base&#34;:24,&#34;mantissas&#34;:[1,2,4,6,8,12],&#34;max_interval&#34;:43200000.0,&#34;min_interval&#34;:3600000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;6954eb00-3347-476b-8647-3c3bc128bc1c&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;298592a8-fe8a-4bf8-9d54-5fd9bb5bd8f4&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,8,15,22]},&#34;id&#34;:&#34;f279a065-466e-46a5-832e-322a3b786d66&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;num_minor_ticks&#34;:5},&#34;id&#34;:&#34;3ef3ac3c-c5ff-463e-8ec4-7786a7b8594f&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,6]},&#34;id&#34;:&#34;a117f516-cf19-4cc0-861c-bea0189fc178&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,6]},&#34;id&#34;:&#34;2ea069ca-1ddb-42ae-8398-373ccf97d8c7&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;2b02d270-1fc5-4e2d-94c1-5a31dad07412&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;3ef3ac3c-c5ff-463e-8ec4-7786a7b8594f&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;5e7ffb8a-aafa-4d1d-8ab9-319e18618e69&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;12bb9c5c-ad0e-4c9d-b13c-b0390845451b&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},{&#34;attributes&#34;:{&#34;below&#34;:[{&#34;id&#34;:&#34;d3373c34-9d98-4284-b06e-d52dd0b8959a&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;}],&#34;left&#34;:[{&#34;id&#34;:&#34;3b462db5-2e1a-4044-be76-ef16bc489e45&#34;,&#34;type&#34;:&#34;LinearAxis&#34;}],&#34;plot_height&#34;:300,&#34;plot_width&#34;:1000,&#34;renderers&#34;:[{&#34;id&#34;:&#34;d3373c34-9d98-4284-b06e-d52dd0b8959a&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;id&#34;:&#34;b6ad2e17-7c16-457c-b135-dea6be335385&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;3b462db5-2e1a-4044-be76-ef16bc489e45&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;id&#34;:&#34;366da68a-36c2-4803-b96b-63ca06ce1eef&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;4dadd8e4-0cde-412e-bf61-54bbc719ebcf&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;id&#34;:&#34;c5b9ed06-5655-4cf5-a95a-fa217c6a1f63&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;}],&#34;title&#34;:{&#34;id&#34;:&#34;212f0e21-b741-4da6-8b15-1646d0ffe6e5&#34;,&#34;type&#34;:&#34;Title&#34;},&#34;tool_events&#34;:{&#34;id&#34;:&#34;22cad0cd-35ea-4481-a688-df7a33f18747&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},&#34;toolbar&#34;:{&#34;id&#34;:&#34;9d93b25a-dd07-49af-a6f1-7733eb6a34a9&#34;,&#34;type&#34;:&#34;Toolbar&#34;},&#34;x_range&#34;:{&#34;id&#34;:&#34;c480812f-039a-4840-accb-46e4d18e9c3a&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},&#34;y_range&#34;:{&#34;id&#34;:&#34;9aae83db-da60-4b38-8284-7a3377bedd24&#34;,&#34;type&#34;:&#34;DataRange1d&#34;}},&#34;id&#34;:&#34;e8fcdd9c-692b-47ad-9559-4c76addfc4db&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;aa3030cb-0c71-43bc-a930-dfa6b9d8a925&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;3d7da8fb-1a0a-47a3-b251-9879ef7abc1c&#34;,&#34;type&#34;:&#34;Segment&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;7ac7f93c-63c2-45fc-9504-ed98f8e9844a&#34;,&#34;type&#34;:&#34;Segment&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;25dd20cf-4fdb-4659-8377-c0925df2da4e&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;line_color&#34;:{&#34;value&#34;:&#34;Black&#34;},&#34;x0&#34;:{&#34;field&#34;:&#34;x0&#34;},&#34;x1&#34;:{&#34;field&#34;:&#34;x1&#34;},&#34;y0&#34;:{&#34;field&#34;:&#34;y0&#34;},&#34;y1&#34;:{&#34;field&#34;:&#34;y1&#34;}},&#34;id&#34;:&#34;5ebc16db-77e1-48d8-808b-5d9e430edcf2&#34;,&#34;type&#34;:&#34;Segment&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;fc3dda0a-51ac-4147-9baa-e900f48c0654&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;c891b3b3-95f9-4a9b-84eb-b40a6c4bfebb&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;5ebc16db-77e1-48d8-808b-5d9e430edcf2&#34;,&#34;type&#34;:&#34;Segment&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;60a5671d-1bc4-4707-9cd7-8bd31d5c0199&#34;,&#34;type&#34;:&#34;Segment&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;7eea4d84-fa70-4b99-88ad-54aeb4033ae4&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,4,8]},&#34;id&#34;:&#34;0518439f-ca11-4f14-910a-12684b577d2d&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,4,7,10,13,16,19,22,25,28]},&#34;id&#34;:&#34;fb8ce56c-0c9d-466b-9cd6-00bf3dd08f29&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;f6267643-9809-4144-9798-4181200afc94&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;19a0d8cc-d7ec-4e53-aa4d-f1ba9cb36054&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;a060de91-1de5-48bb-b9a6-956c718ac567&#34;,&#34;type&#34;:&#34;BasicTicker&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:null,&#34;text&#34;:&#34;Candlestick Chart&#34;},&#34;id&#34;:&#34;212f0e21-b741-4da6-8b15-1646d0ffe6e5&#34;,&#34;type&#34;:&#34;Title&#34;},{&#34;attributes&#34;:{&#34;fill_color&#34;:{&#34;value&#34;:&#34;red&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;c4c2ee76-6c2d-4679-8544-60919bee3c5c&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;x0&#34;:{&#34;field&#34;:&#34;x0&#34;},&#34;x1&#34;:{&#34;field&#34;:&#34;x1&#34;},&#34;y0&#34;:{&#34;field&#34;:&#34;y0&#34;},&#34;y1&#34;:{&#34;field&#34;:&#34;y1&#34;}},&#34;id&#34;:&#34;60a5671d-1bc4-4707-9cd7-8bd31d5c0199&#34;,&#34;type&#34;:&#34;Segment&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;ca515aad-67cb-452e-bc78-bdfed6ed32f7&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;457aa0fe-d249-459f-9c2d-e30ae5f75234&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;456cab92-f0ad-4218-9981-089cc82d6a93&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;5acfb5e4-5854-44c0-a845-557fcb5399a8&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;7cb11bd8-4709-421b-aac1-7d784d2676c6&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;c4c2ee76-6c2d-4679-8544-60919bee3c5c&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;c9c8af2d-f613-4435-bcc0-0a7327b05180&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;ef1c9f1d-8d49-4358-b2f5-036e0b14765c&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;e8fcdd9c-692b-47ad-9559-4c76addfc4db&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;989312ef-6810-48a6-9c9a-3ac22e8cc7ec&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;b6ad2e17-7c16-457c-b135-dea6be335385&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x&#34;,&#34;y&#34;,&#34;height&#34;],&#34;data&#34;:{&#34;height&#34;:{&#34;__ndarray__&#34;:&#34;wJmZmZkZJEAAZmZmZmYKQIA9CtejcBhAABSuR+F6/D8ArkfhehQCQACQwvUoXA9AAOtRuB6FB0AAQArXo3DNP8AehetRuCpAwKNwPQrXKEDAcD0K1yMkQAAArkfheoQ/AMzMzMzM/D+gR+F6FO4zQMBRuB6FaytAAFK4HoXrEUAAUrgehesXQMBH4XoULiBAAArXo3A9+j/AR+F6FC4jQEC4HoXr0SNAQArXo3A9K0AAw/UoXI8RQMBH4XoUriJAAOJ6FK5HAUDAR+F6FK4jQABxPQrXoxFAAGZmZmZm+j+AFK5H4XohQACkcD0K1yZAAHA9Ctej+D9A4XoUrsctQABcj8L1KBdAwB6F61E4IEDAzMzMzMwiQIDrUbgehRdAQOF6FK5HJUAAKVyPwvUWQMB6FK5HYS5AgOtRuB6FFUAArkfhehQbQADNzMzMzBJA&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[42]},&#34;x&#34;:{&#34;__ndarray__&#34;:&#34;AADA5FcMdUIAAIBKqgx1QgAAQLD8DHVCAAAAFk8NdUIAAMB7oQ11QgAAwBLrDnVCAACAeD0PdUIAAEDejw91QgAAQHXZEHVCAADAQH4RdUIAAEAMIxJ1QgAAAAm/E3VCAACA1GMUdUIAAIBrrRV1QgAAwJykFnVCAADAM+4XdUIAAECW3Bl1QgAAwGGBGnVCAACAXh0cdUIAAMAmXh51QgAAgIywHnVCAACAukMhdUIAAAAdMiN1QgAAgOjWI3VCAABATikkdUIAAABLxSV1QgAAwLAXJnVCAACAFmomdUIAAAB5WCh1QgAAwN6qKHVCAAAAEKIpdUIAAEDY4it1QgAAAD41LHVCAACACdosdUIAAABsyC51QgAAgDdtL3VCAABANAkxdUIAAACaWzF1QgAAwJb3MnVCAAAAXzg1dUIAAMDEijV1QgAAgCrdNXVC&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[42]},&#34;y&#34;:{&#34;__ndarray__&#34;:&#34;SOF6FK5ghkCuR+F6FISGQD4K16NwqIZAexSuR+HShkDXo3A9CuWGQHsUrkfhsoZAPgrXo3DvhkBSuB6F69iGQArXo3A9koZAuB6F61HuhkDsUbgehXyHQFyPwvUoYYdAexSuR+Fqh0CamZmZmaiHQHA9Ctejv4dA16NwPQrBh0AK16NwPUaHQJDC9ShckIdAmpmZmZlXh0AehetRuK2HQFyPwvUoHYhAFK5H4XoGh0AAAAAAAJ+GQGZmZmZmMIZAKVyPwvWqhUAK16NwPayFQK5H4XoUA4ZAZmZmZmajhkAfhetRuLSGQFK4HoXrCYdApHA9Ctd5h0CQwvUoXBqFQB+F61G4GYVAPgrXo3A4hUCamZmZmf2FQPYoXI/Cz4VAUrgeheuxhUDXo3A9CveFQB6F61G4OYZACtejcD2ahUCkcD0K1+6FQPYoXI/CM4ZA&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[42]}}},&#34;id&#34;:&#34;87da4cc1-a246-4a69-af05-bc113e5a6143&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,2,4,6,8,10]},&#34;id&#34;:&#34;8a3522fc-4ce5-466e-9b28-a7fa98ae9bcb&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;fill_alpha&#34;:{&#34;value&#34;:0.1},&#34;fill_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;9d1a5faa-fd69-42a9-96f9-ffd9ad13a686&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;d507b1b9-845c-4d78-9dcf-5ed40b71e1cb&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;3fe6dc11-7cd9-453c-86bd-3513a3d5e20c&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;a060de91-1de5-48bb-b9a6-956c718ac567&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;2a2dc196-f4b4-46bc-8d49-b5ea751b2cda&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;attributes&#34;:{&#34;fill_color&#34;:{&#34;value&#34;:&#34;green&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;5d10db96-19d3-4f24-ae54-64c060475402&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;d507b1b9-845c-4d78-9dcf-5ed40b71e1cb&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},{&#34;attributes&#34;:{&#34;base&#34;:60,&#34;mantissas&#34;:[1,2,5,10,15,20,30],&#34;max_interval&#34;:1800000.0,&#34;min_interval&#34;:1000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;bf60b444-3f29-46e5-aa00-564b59be585d&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;e7c76391-cd02-4d1b-bd49-530494688934&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,2,4,6,8,10]},&#34;id&#34;:&#34;9e5432e4-0ca0-4a60-a49e-cb3e7c35bfe8&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;e8fcdd9c-692b-47ad-9559-4c76addfc4db&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;d0515268-4236-4615-80ae-ac7da54c658b&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;attributes&#34;:{&#34;grid_line_alpha&#34;:{&#34;value&#34;:0.3},&#34;plot&#34;:{&#34;id&#34;:&#34;3fe6dc11-7cd9-453c-86bd-3513a3d5e20c&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;0eeba7d2-ae90-4102-8c47-62d4b450f8bc&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;222c68e9-5e3e-4556-b0fd-b2e61e488370&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;f6267643-9809-4144-9798-4181200afc94&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;80841ccf-fb2c-4b0b-b0a4-d3481f003aae&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;865063e1-6a10-46f4-8e6a-063c74128fb5&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;5ca3358e-17ed-47c1-87b4-c1784fefea19&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;dddbb5db-3294-4842-87d9-1540b1cc7761&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;1eed480b-5d59-4854-875c-cbf39da5ceed&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;f6267643-9809-4144-9798-4181200afc94&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;a5348196-36a7-4dbe-8d8a-a4a4f83fca7d&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;attributes&#34;:{&#34;max_interval&#34;:500.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;8aafe135-880e-4e7b-a87b-f24911224f38&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;max_interval&#34;:500.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;d7fc9cbf-833f-49e1-9028-e17d2ba5e3d3&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;active_drag&#34;:&#34;auto&#34;,&#34;active_scroll&#34;:&#34;auto&#34;,&#34;active_tap&#34;:&#34;auto&#34;,&#34;tools&#34;:[{&#34;id&#34;:&#34;deced914-3264-4f6b-9330-84971e21546f&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;id&#34;:&#34;f1ec9c07-7fcb-45b2-8000-bf6922a0a6bb&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;id&#34;:&#34;97e87479-d890-47e1-94bb-94032a8c21aa&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;id&#34;:&#34;7eb1239c-e4f4-4640-9670-9105c0d039f4&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;id&#34;:&#34;0dfda000-259f-4b09-9436-63c7acede24a&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;id&#34;:&#34;954fac3f-aef0-41bc-b3ec-58881ca5e429&#34;,&#34;type&#34;:&#34;HelpTool&#34;}]},&#34;id&#34;:&#34;cf93e66c-3237-440f-b71b-7a644b204c11&#34;,&#34;type&#34;:&#34;Toolbar&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,8,15,22]},&#34;id&#34;:&#34;eb1dde5d-7d92-40ce-8916-fcc4a1bfe43b&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;num_minor_ticks&#34;:5},&#34;id&#34;:&#34;989312ef-6810-48a6-9c9a-3ac22e8cc7ec&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;e9b7f885-67bd-417a-b0cb-5e88b31fa684&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;78a79841-fa71-44de-ab1f-19f392863188&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;868c399c-256d-4838-bb90-69dd9ad3049f&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;afd3fb43-ec6b-437b-bed6-fdecfc636f27&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;below&#34;:[{&#34;id&#34;:&#34;3a8f281e-7610-484b-ab48-dbdc606c8794&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;}],&#34;left&#34;:[{&#34;id&#34;:&#34;2a2dc196-f4b4-46bc-8d49-b5ea751b2cda&#34;,&#34;type&#34;:&#34;LinearAxis&#34;}],&#34;plot_height&#34;:300,&#34;plot_width&#34;:1000,&#34;renderers&#34;:[{&#34;id&#34;:&#34;3a8f281e-7610-484b-ab48-dbdc606c8794&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;id&#34;:&#34;222c68e9-5e3e-4556-b0fd-b2e61e488370&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;2a2dc196-f4b4-46bc-8d49-b5ea751b2cda&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;id&#34;:&#34;b4b4d2d6-bc62-464f-b194-106a654e2cf9&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;de4cbaa0-2918-4fc5-9d15-0f7da867806a&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;id&#34;:&#34;7eea4d84-fa70-4b99-88ad-54aeb4033ae4&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;id&#34;:&#34;22752aba-8df5-4774-ae4b-8e2163534bee&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;id&#34;:&#34;e834b9fb-16be-4fc4-960b-05bc023e66db&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;}],&#34;title&#34;:{&#34;id&#34;:&#34;60b2efb7-4b9a-4631-ba96-60ef4e459216&#34;,&#34;type&#34;:&#34;Title&#34;},&#34;tool_events&#34;:{&#34;id&#34;:&#34;e6769c6b-a578-473a-acb1-a12bc63d1bca&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},&#34;toolbar&#34;:{&#34;id&#34;:&#34;bbeff330-c746-45ce-aa97-c5b88ee0219e&#34;,&#34;type&#34;:&#34;Toolbar&#34;},&#34;x_range&#34;:{&#34;id&#34;:&#34;e7c76391-cd02-4d1b-bd49-530494688934&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},&#34;y_range&#34;:{&#34;id&#34;:&#34;b35298c1-b8d6-466d-96b4-9f2f52d52d9b&#34;,&#34;type&#34;:&#34;DataRange1d&#34;}},&#34;id&#34;:&#34;3fe6dc11-7cd9-453c-86bd-3513a3d5e20c&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},{&#34;attributes&#34;:{&#34;base&#34;:24,&#34;mantissas&#34;:[1,2,4,6,8,12],&#34;max_interval&#34;:43200000.0,&#34;min_interval&#34;:3600000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;52f95d55-db44-4ea2-b0e7-1e8e3076084e&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;b35298c1-b8d6-466d-96b4-9f2f52d52d9b&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;121c2896-e95e-4c57-b14f-6f6cba659f9f&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;e8fcdd9c-692b-47ad-9559-4c76addfc4db&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;3f07a792-8051-43c3-9266-f0a66344bef2&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;3b462db5-2e1a-4044-be76-ef16bc489e45&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;3fe6dc11-7cd9-453c-86bd-3513a3d5e20c&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;5871fd2e-47a9-45ad-838c-ea654d2ca35e&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;attributes&#34;:{&#34;fill_color&#34;:{&#34;value&#34;:&#34;#FF3333&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;c7413c2c-ae50-4ddd-b790-bb2fbca84d05&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;f29c6b42-37ea-47cc-ac05-129a90996990&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;e6769c6b-a578-473a-acb1-a12bc63d1bca&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},{&#34;attributes&#34;:{&#34;active_drag&#34;:&#34;auto&#34;,&#34;active_scroll&#34;:&#34;auto&#34;,&#34;active_tap&#34;:&#34;auto&#34;,&#34;tools&#34;:[{&#34;id&#34;:&#34;c94988cd-3cbe-4028-a5cc-22fc0dc34cc5&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;id&#34;:&#34;70442eff-e2b0-4e6a-a5cc-afad8ef22768&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;id&#34;:&#34;60bddb6f-db36-439c-990b-7a6ba9e978d8&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;id&#34;:&#34;d0515268-4236-4615-80ae-ac7da54c658b&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;id&#34;:&#34;cc2029a3-e2f3-49ff-9c09-de0385ed3089&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;id&#34;:&#34;0d060abe-2543-488c-9432-89f6343093f6&#34;,&#34;type&#34;:&#34;HelpTool&#34;}]},&#34;id&#34;:&#34;9d93b25a-dd07-49af-a6f1-7733eb6a34a9&#34;,&#34;type&#34;:&#34;Toolbar&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;903d3537-b5c9-4354-937e-2a455f6d2b8a&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;30ebee17-3a63-4d24-ae75-63e6436877fd&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;cd5b5cd4-b67b-460b-802b-b6ea081f9c78&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;ad64ae82-8697-45a6-84cc-590d5edbbf0d&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;overlay&#34;:{&#34;id&#34;:&#34;4dadd8e4-0cde-412e-bf61-54bbc719ebcf&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;e8fcdd9c-692b-47ad-9559-4c76addfc4db&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;60bddb6f-db36-439c-990b-7a6ba9e978d8&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x0&#34;,&#34;y0&#34;,&#34;x1&#34;,&#34;y1&#34;],&#34;data&#34;:{&#34;x0&#34;:{&#34;__ndarray__&#34;:&#34;AADAlvcydUIAAID8STN1QgAAQGKcM3VCAAAAyO4zdUIAAED55TR1QgAAAF84NXVCAADAxIo1dUIAAIAq3TV1Qg==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]},&#34;x1&#34;:{&#34;__ndarray__&#34;:&#34;AADAlvcydUIAAID8STN1QgAAQGKcM3VCAAAAyO4zdUIAAED55TR1QgAAAF84NXVCAADAxIo1dUIAAIAq3TV1Qg==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]},&#34;y0&#34;:{&#34;__ndarray__&#34;:&#34;FK5H4Xp2hkAAAAAAAICGQJqZmZmZe4ZAUrgehetjhkAfhetRuCCGQLgehetR/oVAPQrXo3ANhkDsUbgehWOGQA==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]},&#34;y1&#34;:{&#34;__ndarray__&#34;:&#34;XI/C9SjehUAAAAAAAECGQFyPwvUoEIZAXI/C9SgQhkAzMzMzM3eFQB+F61G4aoVAAAAAAACwhUB7FK5H4fqFQA==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]}}},&#34;id&#34;:&#34;dc94bb6b-c767-418d-8e55-eabaafa266f8&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;f6267643-9809-4144-9798-4181200afc94&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;54145486-876f-4df6-abdb-b05562d93b3a&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;attributes&#34;:{&#34;fill_color&#34;:{&#34;value&#34;:&#34;red&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;b78b4ee4-8ef2-4ebe-9025-dc1fb78580f8&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;454e57fd-dae1-42e4-9398-54e8eae8a8c0&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;3fe6dc11-7cd9-453c-86bd-3513a3d5e20c&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;0eeba7d2-ae90-4102-8c47-62d4b450f8bc&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;3a8f281e-7610-484b-ab48-dbdc606c8794&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;attributes&#34;:{&#34;base&#34;:24,&#34;mantissas&#34;:[1,2,4,6,8,12],&#34;max_interval&#34;:43200000.0,&#34;min_interval&#34;:3600000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;beacd357-dd19-4399-9bf2-7794abfa046e&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;3f07a792-8051-43c3-9266-f0a66344bef2&#34;,&#34;type&#34;:&#34;BasicTicker&#34;},{&#34;attributes&#34;:{&#34;num_minor_ticks&#34;:5},&#34;id&#34;:&#34;0eeba7d2-ae90-4102-8c47-62d4b450f8bc&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;},{&#34;attributes&#34;:{&#34;dimension&#34;:1,&#34;plot&#34;:{&#34;id&#34;:&#34;e8fcdd9c-692b-47ad-9559-4c76addfc4db&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;3f07a792-8051-43c3-9266-f0a66344bef2&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;366da68a-36c2-4803-b96b-63ca06ce1eef&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{&#34;line_color&#34;:{&#34;value&#34;:&#34;Black&#34;},&#34;x0&#34;:{&#34;field&#34;:&#34;x0&#34;},&#34;x1&#34;:{&#34;field&#34;:&#34;x1&#34;},&#34;y0&#34;:{&#34;field&#34;:&#34;y0&#34;},&#34;y1&#34;:{&#34;field&#34;:&#34;y1&#34;}},&#34;id&#34;:&#34;3d7da8fb-1a0a-47a3-b251-9879ef7abc1c&#34;,&#34;type&#34;:&#34;Segment&#34;},{&#34;attributes&#34;:{&#34;fill_color&#34;:{&#34;value&#34;:&#34;#FF3333&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;78a79841-fa71-44de-ab1f-19f392863188&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;fill_alpha&#34;:{&#34;value&#34;:0.1},&#34;fill_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;456cab92-f0ad-4218-9981-089cc82d6a93&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:null,&#34;text&#34;:&#34;Candlestick Chart&#34;},&#34;id&#34;:&#34;60b2efb7-4b9a-4631-ba96-60ef4e459216&#34;,&#34;type&#34;:&#34;Title&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,4,8]},&#34;id&#34;:&#34;9bc82f1e-9bf5-42c4-9b73-463c8895bed2&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,1,2,3,4,5,6,7,8,9,10,11]},&#34;id&#34;:&#34;912d4dda-17fc-4dac-bdb3-a3ae04f73898&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,4,8]},&#34;id&#34;:&#34;9da9f0ad-ba58-43b1-94d8-c3f575c7e4a0&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;base&#34;:24,&#34;mantissas&#34;:[1,2,4,6,8,12],&#34;max_interval&#34;:43200000.0,&#34;min_interval&#34;:3600000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;f3e1fc53-b8d2-40d1-af60-9e27c947d47a&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;f9db7f68-92a7-448c-875e-d0232f8beee4&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;c7413c2c-ae50-4ddd-b790-bb2fbca84d05&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;b29dde71-5615-4ae0-9dad-d70ace72f2fa&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;11520415-e1f3-4e41-84d7-f20201699181&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;max_interval&#34;:500.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;b7f6ea12-5420-44e8-98b9-4d18f8a84a68&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;active_drag&#34;:&#34;auto&#34;,&#34;active_scroll&#34;:&#34;auto&#34;,&#34;active_tap&#34;:&#34;auto&#34;,&#34;tools&#34;:[{&#34;id&#34;:&#34;5871fd2e-47a9-45ad-838c-ea654d2ca35e&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;id&#34;:&#34;585e95b9-dac3-4602-aeab-f003eb4090a8&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;id&#34;:&#34;aebd6f20-020e-4beb-a789-9cd92c2606ed&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;id&#34;:&#34;c3d11aba-2ce1-4649-99c4-8388cd55b085&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;id&#34;:&#34;4dcdc7b4-23d5-4cc9-898f-aec459350e86&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;id&#34;:&#34;6b947678-8821-4ced-a76b-521ce082efb8&#34;,&#34;type&#34;:&#34;HelpTool&#34;}]},&#34;id&#34;:&#34;bbeff330-c746-45ce-aa97-c5b88ee0219e&#34;,&#34;type&#34;:&#34;Toolbar&#34;},{&#34;attributes&#34;:{&#34;dimension&#34;:1,&#34;plot&#34;:{&#34;id&#34;:&#34;f6267643-9809-4144-9798-4181200afc94&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;6e9f29d3-b613-4509-97a0-8f5c553085ff&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;b774e00a-18a3-49de-86e7-c42de6951544&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x&#34;,&#34;y&#34;,&#34;height&#34;],&#34;data&#34;:{&#34;height&#34;:{&#34;__ndarray__&#34;:&#34;ADAzMzMzwz8A16NwPQoZQIBmZmZmZhBAgBSuR+F6J0A=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;x&#34;:{&#34;__ndarray__&#34;:&#34;AACA/EkzdUIAAEBinDN1QgAAAMjuM3VCAABA+eU0dUI=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;y&#34;:{&#34;__ndarray__&#34;:&#34;ZmZmZmZ3hkBmZmZmZlyGQOxRuB6FR4ZACtejcD3ohUA=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]}}},&#34;id&#34;:&#34;c02832c8-c503-4750-83ef-9dcdd7270de9&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;f6267643-9809-4144-9798-4181200afc94&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;ec8f4e29-fc1b-4cb1-a2e7-9abb8f3a8f55&#34;,&#34;type&#34;:&#34;HelpTool&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:null,&#34;text&#34;:&#34;Candlestick Chart&#34;},&#34;id&#34;:&#34;03a0a2e2-852e-4748-bc66-0d6af202c725&#34;,&#34;type&#34;:&#34;Title&#34;},{&#34;attributes&#34;:{&#34;base&#34;:60,&#34;mantissas&#34;:[1,2,5,10,15,20,30],&#34;max_interval&#34;:1800000.0,&#34;min_interval&#34;:1000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;efe7f9b5-2453-4bda-a356-e19d76435945&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x&#34;,&#34;y&#34;,&#34;height&#34;],&#34;data&#34;:{&#34;height&#34;:{&#34;__ndarray__&#34;:&#34;wJmZmZkZJEAAZmZmZmYKQIA9CtejcBhAABSuR+F6/D8ArkfhehQCQACQwvUoXA9AAOtRuB6FB0AAQArXo3DNP8AehetRuCpAwKNwPQrXKEDAcD0K1yMkQAAArkfheoQ/AMzMzMzM/D+gR+F6FO4zQMBRuB6FaytAAFK4HoXrEUAAUrgehesXQMBH4XoULiBAAArXo3A9+j/AR+F6FC4jQEC4HoXr0SNAQArXo3A9K0AAw/UoXI8RQMBH4XoUriJAAOJ6FK5HAUDAR+F6FK4jQABxPQrXoxFAAGZmZmZm+j+AFK5H4XohQACkcD0K1yZAAHA9Ctej+D9A4XoUrsctQABcj8L1KBdAwB6F61E4IEDAzMzMzMwiQIDrUbgehRdAQOF6FK5HJUAAKVyPwvUWQMB6FK5HYS5AgOtRuB6FFUAArkfhehQbQADNzMzMzBJA&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[42]},&#34;x&#34;:{&#34;__ndarray__&#34;:&#34;AADA5FcMdUIAAIBKqgx1QgAAQLD8DHVCAAAAFk8NdUIAAMB7oQ11QgAAwBLrDnVCAACAeD0PdUIAAEDejw91QgAAQHXZEHVCAADAQH4RdUIAAEAMIxJ1QgAAAAm/E3VCAACA1GMUdUIAAIBrrRV1QgAAwJykFnVCAADAM+4XdUIAAECW3Bl1QgAAwGGBGnVCAACAXh0cdUIAAMAmXh51QgAAgIywHnVCAACAukMhdUIAAAAdMiN1QgAAgOjWI3VCAABATikkdUIAAABLxSV1QgAAwLAXJnVCAACAFmomdUIAAAB5WCh1QgAAwN6qKHVCAAAAEKIpdUIAAEDY4it1QgAAAD41LHVCAACACdosdUIAAABsyC51QgAAgDdtL3VCAABANAkxdUIAAACaWzF1QgAAwJb3MnVCAAAAXzg1dUIAAMDEijV1QgAAgCrdNXVC&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[42]},&#34;y&#34;:{&#34;__ndarray__&#34;:&#34;SOF6FK5ghkCuR+F6FISGQD4K16NwqIZAexSuR+HShkDXo3A9CuWGQHsUrkfhsoZAPgrXo3DvhkBSuB6F69iGQArXo3A9koZAuB6F61HuhkDsUbgehXyHQFyPwvUoYYdAexSuR+Fqh0CamZmZmaiHQHA9Ctejv4dA16NwPQrBh0AK16NwPUaHQJDC9ShckIdAmpmZmZlXh0AehetRuK2HQFyPwvUoHYhAFK5H4XoGh0AAAAAAAJ+GQGZmZmZmMIZAKVyPwvWqhUAK16NwPayFQK5H4XoUA4ZAZmZmZmajhkAfhetRuLSGQFK4HoXrCYdApHA9Ctd5h0CQwvUoXBqFQB+F61G4GYVAPgrXo3A4hUCamZmZmf2FQPYoXI/Cz4VAUrgeheuxhUDXo3A9CveFQB6F61G4OYZACtejcD2ahUCkcD0K1+6FQPYoXI/CM4ZA&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[42]}}},&#34;id&#34;:&#34;bab0e2e2-d7f6-4a3b-a702-f0e02d224bc2&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;3dd57fbc-17f1-4cef-9ca0-87f87dbc6039&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;3fe6dc11-7cd9-453c-86bd-3513a3d5e20c&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;585e95b9-dac3-4602-aeab-f003eb4090a8&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,4,7,10,13,16,19,22,25,28]},&#34;id&#34;:&#34;c988eafb-b088-4c95-9241-8315adc7a38a&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,8,15,22]},&#34;id&#34;:&#34;bf25caff-67c4-4ffa-b386-13be86e4978d&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;6e9f29d3-b613-4509-97a0-8f5c553085ff&#34;,&#34;type&#34;:&#34;BasicTicker&#34;},{&#34;attributes&#34;:{&#34;bottom_units&#34;:&#34;screen&#34;,&#34;fill_alpha&#34;:{&#34;value&#34;:0.5},&#34;fill_color&#34;:{&#34;value&#34;:&#34;lightgrey&#34;},&#34;left_units&#34;:&#34;screen&#34;,&#34;level&#34;:&#34;overlay&#34;,&#34;line_alpha&#34;:{&#34;value&#34;:1.0},&#34;line_color&#34;:{&#34;value&#34;:&#34;black&#34;},&#34;line_dash&#34;:[4,4],&#34;line_width&#34;:{&#34;value&#34;:2},&#34;plot&#34;:null,&#34;render_mode&#34;:&#34;css&#34;,&#34;right_units&#34;:&#34;screen&#34;,&#34;top_units&#34;:&#34;screen&#34;},&#34;id&#34;:&#34;090d48af-9eb5-4095-8d67-38962163e22e&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;attributes&#34;:{&#34;grid_line_alpha&#34;:{&#34;value&#34;:0},&#34;plot&#34;:{&#34;id&#34;:&#34;f8f2ae67-06ac-462d-9ea1-2608a7cc09b8&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;6218c3c1-df5c-47c2-a93d-efc13d19cee3&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;a2e803ce-4955-4fff-9053-d19a6e295acd&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;454e57fd-dae1-42e4-9398-54e8eae8a8c0&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,4,7,10,13,16,19,22,25,28]},&#34;id&#34;:&#34;296e2910-2467-404f-8516-cfc48adc071b&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;606d5592-7ba7-4b28-a7a9-919798647f74&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},{&#34;attributes&#34;:{&#34;fill_color&#34;:{&#34;value&#34;:&#34;#CCFFFF&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;a0fff8a4-6055-4856-a0a3-765eb600b3ed&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;overlay&#34;:{&#34;id&#34;:&#34;090d48af-9eb5-4095-8d67-38962163e22e&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;f6267643-9809-4144-9798-4181200afc94&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;4613a52d-1215-4700-a09e-ac8638c8e164&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;attributes&#34;:{&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;x0&#34;:{&#34;field&#34;:&#34;x0&#34;},&#34;x1&#34;:{&#34;field&#34;:&#34;x1&#34;},&#34;y0&#34;:{&#34;field&#34;:&#34;y0&#34;},&#34;y1&#34;:{&#34;field&#34;:&#34;y1&#34;}},&#34;id&#34;:&#34;7ac7f93c-63c2-45fc-9504-ed98f8e9844a&#34;,&#34;type&#34;:&#34;Segment&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]},&#34;id&#34;:&#34;68caf3ab-399a-4387-9ae7-ef9332c85fcf&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;fill_alpha&#34;:{&#34;value&#34;:0.1},&#34;fill_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;b29dde71-5615-4ae0-9dad-d70ace72f2fa&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]},&#34;id&#34;:&#34;5bdb980c-4b53-45ae-9ceb-110be49e7f78&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;4158dbb4-835e-4c06-863d-257f06245683&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},{&#34;attributes&#34;:{&#34;fill_color&#34;:{&#34;value&#34;:&#34;#FF3333&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;30ebee17-3a63-4d24-ae75-63e6436877fd&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;696a73e6-8bec-44d3-af9b-a17d50c077dc&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;e8fcdd9c-692b-47ad-9559-4c76addfc4db&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;989312ef-6810-48a6-9c9a-3ac22e8cc7ec&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;d3373c34-9d98-4284-b06e-d52dd0b8959a&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;attributes&#34;:{&#34;base&#34;:24,&#34;mantissas&#34;:[1,2,4,6,8,12],&#34;max_interval&#34;:43200000.0,&#34;min_interval&#34;:3600000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;23243b57-e475-4638-9f7b-34c78c4ba19f&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;dimension&#34;:1,&#34;grid_line_alpha&#34;:{&#34;value&#34;:0.3},&#34;plot&#34;:{&#34;id&#34;:&#34;3fe6dc11-7cd9-453c-86bd-3513a3d5e20c&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;a060de91-1de5-48bb-b9a6-956c718ac567&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;b4b4d2d6-bc62-464f-b194-106a654e2cf9&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;e8fcdd9c-692b-47ad-9559-4c76addfc4db&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;70442eff-e2b0-4e6a-a5cc-afad8ef22768&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;attributes&#34;:{&#34;below&#34;:[{&#34;id&#34;:&#34;21b3281d-defe-4bb9-b395-fd52aa3059ee&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;}],&#34;left&#34;:[{&#34;id&#34;:&#34;0fd796a5-5fd9-4e15-b863-aa4a298c3210&#34;,&#34;type&#34;:&#34;LinearAxis&#34;}],&#34;plot_height&#34;:300,&#34;plot_width&#34;:1000,&#34;renderers&#34;:[{&#34;id&#34;:&#34;21b3281d-defe-4bb9-b395-fd52aa3059ee&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;id&#34;:&#34;d917e0a3-f8c8-4415-8c28-92e655ac761e&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;0fd796a5-5fd9-4e15-b863-aa4a298c3210&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;id&#34;:&#34;9208fd6d-744a-4a54-9774-b377be9c8f8c&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;3964a1cc-a2c4-4985-8803-2e2c56c5ec45&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;id&#34;:&#34;7ec875fe-20d7-465e-9838-f0e3b7fbd985&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;id&#34;:&#34;77ab83c2-3f46-4e35-ad82-500c2796216e&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;id&#34;:&#34;afd3fb43-ec6b-437b-bed6-fdecfc636f27&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;}],&#34;title&#34;:{&#34;id&#34;:&#34;a1918617-3f1d-400b-8560-fd582447f9cc&#34;,&#34;type&#34;:&#34;Title&#34;},&#34;tool_events&#34;:{&#34;id&#34;:&#34;606d5592-7ba7-4b28-a7a9-919798647f74&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},&#34;toolbar&#34;:{&#34;id&#34;:&#34;ced949cc-12f9-40f4-a292-8c2a8d2804bc&#34;,&#34;type&#34;:&#34;Toolbar&#34;},&#34;x_range&#34;:{&#34;id&#34;:&#34;79063f6e-d102-4f24-a742-f3fa4ab72541&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},&#34;y_range&#34;:{&#34;id&#34;:&#34;385a3d61-0e2a-4ac1-9a9a-1a6a6ecf97de&#34;,&#34;type&#34;:&#34;DataRange1d&#34;}},&#34;id&#34;:&#34;47c38c67-f90c-4620-9623-b852d50c80de&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x&#34;,&#34;y&#34;,&#34;height&#34;],&#34;data&#34;:{&#34;height&#34;:{&#34;__ndarray__&#34;:&#34;wHoUrkdhLkAAMDMzMzPDPwDXo3A9ChlAgGZmZmZmEECAFK5H4XonQIDrUbgehRVAAK5H4XoUG0AAzczMzMwSQA==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]},&#34;x&#34;:{&#34;__ndarray__&#34;:&#34;AADAlvcydUIAAABfODV1QgAAwMSKNXVCAACAKt01dUI=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;y&#34;:{&#34;__ndarray__&#34;:&#34;HoXrUbg5hkBmZmZmZneGQGZmZmZmXIZA7FG4HoVHhkAK16NwPeiFQArXo3A9moVApHA9CtfuhUD2KFyPwjOGQA==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]}}},&#34;id&#34;:&#34;f7138a83-ae38-41f2-9cba-4a074b887e54&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;num_minor_ticks&#34;:5},&#34;id&#34;:&#34;6218c3c1-df5c-47c2-a93d-efc13d19cee3&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;},{&#34;attributes&#34;:{&#34;fill_color&#34;:{&#34;value&#34;:&#34;green&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;7a3935ef-a056-440f-ae89-6575bec4b945&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;fill_alpha&#34;:{&#34;value&#34;:0.1},&#34;fill_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;9cd1d9a1-3bee-4464-aafe-853b004211a6&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,4,7,10,13,16,19,22,25,28]},&#34;id&#34;:&#34;1b6d2b21-b031-4604-ac16-f30a22df850d&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;a3652153-60f8-4c5c-a624-3b922b470eab&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;7a3935ef-a056-440f-ae89-6575bec4b945&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;ed2f1dca-a73a-4530-9415-76ae522378c8&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;22752aba-8df5-4774-ae4b-8e2163534bee&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;e8fcdd9c-692b-47ad-9559-4c76addfc4db&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;c94988cd-3cbe-4028-a5cc-22fc0dc34cc5&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;attributes&#34;:{&#34;fill_alpha&#34;:{&#34;value&#34;:0.1},&#34;fill_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;ed2f1dca-a73a-4530-9415-76ae522378c8&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;fill_alpha&#34;:{&#34;value&#34;:0.1},&#34;fill_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;7b6d4b43-ecf4-4138-a32f-0016cdc55377&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;bottom_units&#34;:&#34;screen&#34;,&#34;fill_alpha&#34;:{&#34;value&#34;:0.5},&#34;fill_color&#34;:{&#34;value&#34;:&#34;lightgrey&#34;},&#34;left_units&#34;:&#34;screen&#34;,&#34;level&#34;:&#34;overlay&#34;,&#34;line_alpha&#34;:{&#34;value&#34;:1.0},&#34;line_color&#34;:{&#34;value&#34;:&#34;black&#34;},&#34;line_dash&#34;:[4,4],&#34;line_width&#34;:{&#34;value&#34;:2},&#34;plot&#34;:null,&#34;render_mode&#34;:&#34;css&#34;,&#34;right_units&#34;:&#34;screen&#34;,&#34;top_units&#34;:&#34;screen&#34;},&#34;id&#34;:&#34;4dadd8e4-0cde-412e-bf61-54bbc719ebcf&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;attributes&#34;:{&#34;num_minor_ticks&#34;:5},&#34;id&#34;:&#34;dddbb5db-3294-4842-87d9-1540b1cc7761&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;e8fcdd9c-692b-47ad-9559-4c76addfc4db&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;cc2029a3-e2f3-49ff-9c09-de0385ed3089&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]},&#34;id&#34;:&#34;f223c2cc-66db-4e68-8298-63e602d47d13&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,15]},&#34;id&#34;:&#34;00d10652-1743-419a-841d-5719d0230a45&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;fill_alpha&#34;:{&#34;value&#34;:0.1},&#34;fill_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;cd5b5cd4-b67b-460b-802b-b6ea081f9c78&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,1,2,3,4,5,6,7,8,9,10,11]},&#34;id&#34;:&#34;ab145f8a-bdcb-428b-8e52-3ce8dc3fbcb9&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,1,2,3,4,5,6,7,8,9,10,11]},&#34;id&#34;:&#34;36edf8eb-ceac-44cd-8734-690bf6f50527&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,15]},&#34;id&#34;:&#34;02f79b08-da35-49f5-88a3-de3ea34f832b&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,8,15,22]},&#34;id&#34;:&#34;82153dcf-3b57-492a-9aa4-e0d007ee3607&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,2,4,6,8,10]},&#34;id&#34;:&#34;4ecdf979-e235-47a4-af35-c222e7f90213&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;9aae83db-da60-4b38-8284-7a3377bedd24&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,15]},&#34;id&#34;:&#34;3ac1b2be-71a7-458f-a737-0d218cef5f58&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;e8fcdd9c-692b-47ad-9559-4c76addfc4db&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;0d060abe-2543-488c-9432-89f6343093f6&#34;,&#34;type&#34;:&#34;HelpTool&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,2,4,6,8,10]},&#34;id&#34;:&#34;06508c9f-fcb4-46ac-8519-cf81d2dedd02&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;2ee63758-1f21-496c-b1c7-15f9e5828b72&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;base&#34;:60,&#34;mantissas&#34;:[1,2,5,10,15,20,30],&#34;max_interval&#34;:1800000.0,&#34;min_interval&#34;:1000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;6ff511b1-6060-4112-8857-7c6a8f79554b&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;2ff69777-16f9-4c1f-9c97-342b16ff66fb&#34;,&#34;type&#34;:&#34;YearsTicker&#34;},{&#34;attributes&#34;:{&#34;below&#34;:[{&#34;id&#34;:&#34;d11ff890-7300-4704-bed8-8e030c5d92cd&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;}],&#34;left&#34;:[{&#34;id&#34;:&#34;d46f31fd-b49e-4887-99ec-07416a1551e5&#34;,&#34;type&#34;:&#34;LinearAxis&#34;}],&#34;plot_height&#34;:300,&#34;plot_width&#34;:1000,&#34;renderers&#34;:[{&#34;id&#34;:&#34;d11ff890-7300-4704-bed8-8e030c5d92cd&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;id&#34;:&#34;9c39eebb-b7ff-4e48-8969-5856201aee5e&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;d46f31fd-b49e-4887-99ec-07416a1551e5&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;id&#34;:&#34;b1801519-5cae-451e-9efd-655e595aa675&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;4ff34067-365c-4a44-af40-210b8a56614a&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;id&#34;:&#34;614e2807-a4d1-4cc5-89cc-2ff3ab20a050&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;id&#34;:&#34;c294c4e2-32f0-4c3c-8378-29bec8334dc2&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;id&#34;:&#34;2caed9d0-2544-47a3-b1de-38eb4e83d8c1&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;}],&#34;sizing_mode&#34;:&#34;scale_width&#34;,&#34;title&#34;:{&#34;id&#34;:&#34;03a0a2e2-852e-4748-bc66-0d6af202c725&#34;,&#34;type&#34;:&#34;Title&#34;},&#34;tool_events&#34;:{&#34;id&#34;:&#34;a6ff5fb7-bbe0-487f-9e31-0622838e7f47&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},&#34;toolbar&#34;:{&#34;id&#34;:&#34;ebb4e915-75d9-441b-86a2-937dfb908628&#34;,&#34;type&#34;:&#34;Toolbar&#34;},&#34;x_range&#34;:{&#34;id&#34;:&#34;b99ea22d-3023-49ae-b0e5-515603f3f969&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},&#34;y_range&#34;:{&#34;id&#34;:&#34;298592a8-fe8a-4bf8-9d54-5fd9bb5bd8f4&#34;,&#34;type&#34;:&#34;DataRange1d&#34;}},&#34;id&#34;:&#34;89edc8c6-acb7-4f82-9d7b-68decd13f621&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;3f4579ef-fdc6-4c12-9167-6252493bd2d6&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,15]},&#34;id&#34;:&#34;f2cdbe93-4533-4067-b06d-121d0ee34614&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;grid_line_alpha&#34;:{&#34;value&#34;:0.3},&#34;plot&#34;:{&#34;id&#34;:&#34;5ca3358e-17ed-47c1-87b4-c1784fefea19&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;dddbb5db-3294-4842-87d9-1540b1cc7761&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;297cd484-5ee9-41cc-9827-e319e18fe1d9&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;bab0e2e2-d7f6-4a3b-a702-f0e02d224bc2&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;1e2a7083-efa0-4d33-8297-42cc7983a299&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;e2cdd368-3ab2-454c-9f82-8f9c880cc55a&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;81925d30-85fd-4c7a-9154-b0eae8363724&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;f7138a83-ae38-41f2-9cba-4a074b887e54&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;f72ab44b-9634-4771-b099-83944f02cde9&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;9cd1d9a1-3bee-4464-aafe-853b004211a6&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;c5b9ed06-5655-4cf5-a95a-fa217c6a1f63&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;fill_alpha&#34;:{&#34;value&#34;:0.1},&#34;fill_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;c9c8af2d-f613-4435-bcc0-0a7327b05180&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,1,2,3,4,5,6,7,8,9,10,11]},&#34;id&#34;:&#34;311450ad-c3a4-4418-b8fb-64f16ec87191&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;696a73e6-8bec-44d3-af9b-a17d50c077dc&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,2,4,6,8,10]},&#34;id&#34;:&#34;626c7d60-6028-4a31-86ff-cc27be30a1a4&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x&#34;,&#34;y&#34;,&#34;height&#34;],&#34;data&#34;:{&#34;height&#34;:{&#34;__ndarray__&#34;:&#34;gArXo3A9FUDAo3A9ClcoQABSuB6F6w9AAIjrUbge1T8A7FG4HoX3PwD2KFyPwg1AgKNwPQrXGEAArkfhehQaQIA9Ctej8CpAAK5H4XoUEkAACtejcD0eQACF61G4HgtAALgehetRAkBAMzMzMzMjQIAUrkfh+ilAAM3MzMzMHEAAZmZmZmb6PwDiehSuRwlAAGZmZmZm8j+AZmZmZmYWQEAK16NwPSVAAML1KFyP8j8AKVyPwvUOQACPwvUoXA9AgBSuR+H6MEAAxPUoXI/iPyDXo3A9Sj5AAFyPwvUo+D+AuB6F69EnQABUuB6F6+k/QI/C9ShcK0CgmZmZmdkzQMD1KFyPokVAgJmZmZmZLUDAzMzMzEw0QABSuB6F6wVAgD0K16NwH0AASOF6FK7/P8DMzMzMTClAAEjhehSu7z+AZmZmZmYWQACuR+F6FAxAAGdmZmZmBEAAMDMzMzPDPwDXo3A9ChlAgGZmZmZmEECAFK5H4XonQA==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[47]},&#34;x&#34;:{&#34;__ndarray__&#34;:&#34;AAAArZgOdUIAAABE4g91QgAAANsrEXVCAACAptARdUIAAIA9GhN1QgAAQKNsE3VCAADABVsVdUIAAEDR/xV1QgAAADdSFnVCAAAAzpsXdUIAAICZQBh1QgAAQP+SGHVCAAAAZeUYdUIAAAD8Lhp1QgAAgMfTGnVCAABALSYbdUIAAEDEbxx1QgAAACrCHHVCAADAjxQddUIAAEDyAh91QgAAAFhVH3VCAAAA754gdUIAAMBU8SB1QgAAQCCWIXVCAAAAhughdUIAAEC33yJ1QgAAwIKEI3VCAABA5XIldUIAAMBHYSd1QgAAgK2zJ3VCAABAEwYodUIAAMB19Cl1QgAAgNtGKnVCAABAQZkqdUIAAACn6yp1QgAAwKOHLHVCAABAbywtdUIAAEAGdi51QgAAwNEaL3VCAADAaGQwdUIAAIDOtjB1QgAAwP+tMXVCAAAAMaUydUIAAID8STN1QgAAQGKcM3VCAAAAyO4zdUIAAED55TR1Qg==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[47]},&#34;y&#34;:{&#34;__ndarray__&#34;:&#34;kML1KFy8hkBI4XoUrpiGQI/C9ShcuoZAmpmZmZkUh0AfhetRuKWHQIXrUbgecYdAcD0K16NNh0CF61G4Hu2HQDMzMzMzuodArkfhehTsh0CF61G4HpuHQArXo3A9eYdAhetRuB4gh0CamZmZmWGHQGZmZmZmn4dA4XoUrkc3h0CamZmZmXaHQIXrUbgef4dAzMzMzMxnh0BmZmZmZi6IQOxRuB6F4YdAkML1KFwzh0CG61G4HkSHQMzMzMzMwoZASOF6FK6XhkDC9Shcj2KGQHA9CtejXYZAj8L1KFz0hUAAAAAAAG2GQML1KFyPS4ZAcD0K16MWhkCamZmZmTSIQEjhehSuZIdA4XoUrkdbhkD2KFyPwq2FQFK4HoXra4VAcD0K16NyhUBSuB6F65+FQGZmZmZm/YVAcT0K16MXhkA0MzMzM9WFQJqZmZmZFoZAkML1KFzYhUBmZmZmZneGQGZmZmZmXIZA7FG4HoVHhkAK16NwPeiFQA==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[47]}}},&#34;id&#34;:&#34;903d3537-b5c9-4354-937e-2a455f6d2b8a&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x&#34;,&#34;y&#34;,&#34;height&#34;],&#34;data&#34;:{&#34;height&#34;:{&#34;__ndarray__&#34;:&#34;ADAzMzMzwz8A16NwPQoZQIBmZmZmZhBAgBSuR+F6J0A=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;x&#34;:[false,true,true,true,true,false,false,false],&#34;y&#34;:{&#34;__ndarray__&#34;:&#34;ZmZmZmZ3hkBmZmZmZlyGQOxRuB6FR4ZACtejcD3ohUA=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]}}},&#34;id&#34;:&#34;401cc199-0303-4587-985e-27cae83bc862&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,4,8]},&#34;id&#34;:&#34;7f55adcd-b330-49e6-86e9-53cdfd24ead7&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;22cad0cd-35ea-4481-a688-df7a33f18747&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,6]},&#34;id&#34;:&#34;96aa5731-fc1f-4e35-b237-c39388e488b1&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;4d7efc84-9993-4ffd-af1d-364f2974c6ce&#34;,&#34;type&#34;:&#34;YearsTicker&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;882e8483-7474-4c90-8398-7b68f3272d19&#34;,&#34;type&#34;:&#34;YearsTicker&#34;},{&#34;attributes&#34;:{&#34;max_interval&#34;:500.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;7ba895db-a71c-4de3-80bb-05dc3b53e60c&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:null,&#34;text&#34;:&#34;Candlestick Chart&#34;},&#34;id&#34;:&#34;a1918617-3f1d-400b-8560-fd582447f9cc&#34;,&#34;type&#34;:&#34;Title&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;121c2896-e95e-4c57-b14f-6f6cba659f9f&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},{&#34;attributes&#34;:{&#34;fill_alpha&#34;:{&#34;value&#34;:0.1},&#34;fill_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;868c399c-256d-4838-bb90-69dd9ad3049f&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;87da4cc1-a246-4a69-af05-bc113e5a6143&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;a0fff8a4-6055-4856-a0a3-765eb600b3ed&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;7b6d4b43-ecf4-4138-a32f-0016cdc55377&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;756da2f0-77e5-471a-a74d-b8d47a7a662b&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;36fde260-6710-4814-9787-8bbe572e0b4f&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;b78b4ee4-8ef2-4ebe-9025-dc1fb78580f8&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;9d1a5faa-fd69-42a9-96f9-ffd9ad13a686&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;63c50434-f09b-4a4e-9d90-157933151f1e&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]},&#34;id&#34;:&#34;5e26346d-0a76-492c-a8b7-9f18c45ecd78&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;c480812f-039a-4840-accb-46e4d18e9c3a&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,6]},&#34;id&#34;:&#34;c8ed9299-5620-48c3-8e58-5d36de06041f&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]},&#34;id&#34;:&#34;1630294a-b9bd-4e50-b4ae-05c40978e90d&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;base&#34;:60,&#34;mantissas&#34;:[1,2,5,10,15,20,30],&#34;max_interval&#34;:1800000.0,&#34;min_interval&#34;:1000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;bde59fb4-04ad-43f5-9b27-9b39e05031b4&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;base&#34;:24,&#34;mantissas&#34;:[1,2,4,6,8,12],&#34;max_interval&#34;:43200000.0,&#34;min_interval&#34;:3600000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;61458d1a-a1f3-4391-9099-02263f16c8c9&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;bottom_units&#34;:&#34;screen&#34;,&#34;fill_alpha&#34;:{&#34;value&#34;:0.5},&#34;fill_color&#34;:{&#34;value&#34;:&#34;lightgrey&#34;},&#34;left_units&#34;:&#34;screen&#34;,&#34;level&#34;:&#34;overlay&#34;,&#34;line_alpha&#34;:{&#34;value&#34;:1.0},&#34;line_color&#34;:{&#34;value&#34;:&#34;black&#34;},&#34;line_dash&#34;:[4,4],&#34;line_width&#34;:{&#34;value&#34;:2},&#34;plot&#34;:null,&#34;render_mode&#34;:&#34;css&#34;,&#34;right_units&#34;:&#34;screen&#34;,&#34;top_units&#34;:&#34;screen&#34;},&#34;id&#34;:&#34;de4cbaa0-2918-4fc5-9d15-0f7da867806a&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;3fe6dc11-7cd9-453c-86bd-3513a3d5e20c&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;6b947678-8821-4ced-a76b-521ce082efb8&#34;,&#34;type&#34;:&#34;HelpTool&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,4,7,10,13,16,19,22,25,28]},&#34;id&#34;:&#34;52324b1e-9a8d-47f6-ae32-6e3ba2198c4f&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,6]},&#34;id&#34;:&#34;1cd57729-ad60-4f01-adf2-e2285619212c&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;fill_color&#34;:{&#34;value&#34;:&#34;green&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_color&#34;:{&#34;field&#34;:&#34;blakc&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;457aa0fe-d249-459f-9c2d-e30ae5f75234&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x&#34;,&#34;y&#34;,&#34;height&#34;],&#34;data&#34;:{&#34;height&#34;:{&#34;__ndarray__&#34;:&#34;wHoUrkdhLkCA61G4HoUVQACuR+F6FBtAAM3MzMzMEkA=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;x&#34;:{&#34;__ndarray__&#34;:&#34;AADAlvcydUIAAABfODV1QgAAwMSKNXVCAACAKt01dUI=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;y&#34;:{&#34;__ndarray__&#34;:&#34;HoXrUbg5hkAK16NwPZqFQKRwPQrX7oVA9ihcj8IzhkA=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]}}},&#34;id&#34;:&#34;a3652153-60f8-4c5c-a624-3b922b470eab&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;line_color&#34;:{&#34;value&#34;:&#34;Black&#34;},&#34;x0&#34;:{&#34;field&#34;:&#34;x0&#34;},&#34;x1&#34;:{&#34;field&#34;:&#34;x1&#34;},&#34;y0&#34;:{&#34;field&#34;:&#34;y0&#34;},&#34;y1&#34;:{&#34;field&#34;:&#34;y1&#34;}},&#34;id&#34;:&#34;86bce5c1-8ca3-451e-b9f6-8d51a76979c3&#34;,&#34;type&#34;:&#34;Segment&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,1,2,3,4,5,6,7,8,9,10,11]},&#34;id&#34;:&#34;5fd1cb13-6508-4f5e-b581-f6aa31c9867c&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;base&#34;:60,&#34;mantissas&#34;:[1,2,5,10,15,20,30],&#34;max_interval&#34;:1800000.0,&#34;min_interval&#34;:1000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;8d2860bd-2fa1-47ba-acff-4898eca01c66&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;5fcbdace-b110-4b76-9873-d430bd482d93&#34;,&#34;type&#34;:&#34;YearsTicker&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,4,7,10,13,16,19,22,25,28]},&#34;id&#34;:&#34;85e1f236-cda4-4ca7-8fad-f88189748632&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;924bfd8a-fb05-4eb5-a2f5-6bf01a94ec68&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;5d10db96-19d3-4f24-ae54-64c060475402&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;8a889acf-3b20-4048-8266-a1bdb82f10cb&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;8e9be562-63a3-40cf-af6f-4c3fefaf0165&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;overlay&#34;:{&#34;id&#34;:&#34;de4cbaa0-2918-4fc5-9d15-0f7da867806a&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;3fe6dc11-7cd9-453c-86bd-3513a3d5e20c&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;aebd6f20-020e-4beb-a789-9cd92c2606ed&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;attributes&#34;:{&#34;fill_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;f72ab44b-9634-4771-b099-83944f02cde9&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;3fe6dc11-7cd9-453c-86bd-3513a3d5e20c&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;4dcdc7b4-23d5-4cc9-898f-aec459350e86&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;attributes&#34;:{&#34;max_interval&#34;:500.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;f4acf03e-e335-4d91-9775-4799588548f9&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,6]},&#34;id&#34;:&#34;5267bb10-1249-4466-a3b6-62f19fabc0b3&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,8,15,22]},&#34;id&#34;:&#34;4ba52ec4-989a-4261-b7b3-443be9872136&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;3fe6dc11-7cd9-453c-86bd-3513a3d5e20c&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;c3d11aba-2ce1-4649-99c4-8388cd55b085&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;76603842-2490-44a1-b8f9-17922b9cdb23&#34;,&#34;type&#34;:&#34;YearsTicker&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,6]},&#34;id&#34;:&#34;87ca5387-21a3-4913-aefd-d1f64adb5055&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;fill_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;bc3e29dd-3fcc-4c3d-a0ac-6ca3887eb4fb&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;num_minor_ticks&#34;:5},&#34;id&#34;:&#34;622de936-ebf2-4d8c-90d3-669dbac10afd&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,2,4,6,8,10]},&#34;id&#34;:&#34;a2b0726a-656e-4dc5-9627-6cb643450aa8&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;base&#34;:24,&#34;mantissas&#34;:[1,2,4,6,8,12],&#34;max_interval&#34;:43200000.0,&#34;min_interval&#34;:3600000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;c3b148b2-d270-4091-a08d-3049c89f5c67&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;num_minor_ticks&#34;:5},&#34;id&#34;:&#34;0d0b03c0-be31-422a-a896-bc8b94c395d8&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;},{&#34;attributes&#34;:{&#34;fill_color&#34;:{&#34;value&#34;:&#34;#CCFFFF&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;1e2a7083-efa0-4d33-8297-42cc7983a299&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;49049281-650c-4590-959c-d40138d3353d&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;44408ee5-188e-4ab3-815e-13369ce78d5a&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;adc1ff79-81ba-4151-af12-a3a7fe11b733&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;b5698c4b-9614-41fa-bea2-6a942a905317&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;21fb6c4f-7738-4cf9-ae78-1076bdfd5261&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;7fb54742-74f8-49be-8aaf-cd8e4842a64d&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,8,15,22]},&#34;id&#34;:&#34;1d3d30f0-1ff5-4318-99d6-baa3f67fb5f7&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;0dcbaa3c-7ff1-48a0-9f90-c8b71f15e925&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;4b542195-0086-4abc-b667-88d1f44893f4&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;9e1d43a9-6888-48de-bdb6-7b10902346ff&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;5442c572-1dc6-44b6-a8e2-5dd4a3ac2229&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;attributes&#34;:{&#34;fill_alpha&#34;:{&#34;value&#34;:0.1},&#34;fill_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;c41da678-65b7-4c5c-9bca-c55ffefa545f&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;max_interval&#34;:500.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;5dd66a13-2886-4700-9631-ca947b59ead0&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,2,4,6,8,10]},&#34;id&#34;:&#34;10b0994e-144b-4808-b7c3-9434c1b8e6f7&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,15]},&#34;id&#34;:&#34;a8570c8d-09e7-450c-8a26-70e739376d7e&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,6]},&#34;id&#34;:&#34;b0cc625b-1555-4cdb-9b25-ee9b32546c49&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;base&#34;:60,&#34;mantissas&#34;:[1,2,5,10,15,20,30],&#34;max_interval&#34;:1800000.0,&#34;min_interval&#34;:1000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;f69adfc9-81fd-4ee1-a855-3be0ca032fc4&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,4,8]},&#34;id&#34;:&#34;44ce7ee3-6d35-4f21-bb40-5db9f6f3228e&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x&#34;,&#34;y&#34;,&#34;height&#34;],&#34;data&#34;:{&#34;height&#34;:{&#34;__ndarray__&#34;:&#34;ADAzMzMzwz8A16NwPQoZQIBmZmZmZhBAgBSuR+F6J0A=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;x&#34;:{&#34;__ndarray__&#34;:&#34;AACA/EkzdUIAAEBinDN1QgAAAMjuM3VCAABA+eU0dUI=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;y&#34;:{&#34;__ndarray__&#34;:&#34;ZmZmZmZ3hkBmZmZmZlyGQOxRuB6FR4ZACtejcD3ohUA=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]}}},&#34;id&#34;:&#34;cf3c944e-b465-4341-b1b0-9c0ecfff1c1e&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,2,4,6,8,10]},&#34;id&#34;:&#34;dc813b39-f6da-423b-b2dc-d39ab1e28ad9&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;max_interval&#34;:500.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;7b1d90a0-4232-48ab-a157-8f78498fb6c5&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x&#34;,&#34;y&#34;,&#34;height&#34;],&#34;data&#34;:{&#34;height&#34;:{&#34;__ndarray__&#34;:&#34;wHoUrkdhLkCA61G4HoUVQACuR+F6FBtAAM3MzMzMEkA=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;x&#34;:{&#34;__ndarray__&#34;:&#34;AADAlvcydUIAAABfODV1QgAAwMSKNXVCAACAKt01dUI=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]},&#34;y&#34;:{&#34;__ndarray__&#34;:&#34;HoXrUbg5hkAK16NwPZqFQKRwPQrX7oVA9ihcj8IzhkA=&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[4]}}},&#34;id&#34;:&#34;cc9fe137-9607-41b2-9d74-c0bbe6ef3d0c&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;49049281-650c-4590-959c-d40138d3353d&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;bd5fade7-4aa1-4562-af1c-53548b5c834b&#34;,&#34;type&#34;:&#34;HelpTool&#34;},{&#34;attributes&#34;:{&#34;fill_color&#34;:{&#34;value&#34;:&#34;red&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;39f5729f-e20a-461a-b0e6-c1bd51f495d0&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;overlay&#34;:{&#34;id&#34;:&#34;0c686545-799d-49a6-9281-d0f949cdc5ce&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;49049281-650c-4590-959c-d40138d3353d&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;eece24a5-2891-4891-a3b6-9c58d83fd3af&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]},&#34;id&#34;:&#34;043571df-ffc1-4bad-a394-73ce690a0e03&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;base&#34;:24,&#34;mantissas&#34;:[1,2,4,6,8,12],&#34;max_interval&#34;:43200000.0,&#34;min_interval&#34;:3600000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;98964b96-d933-46ca-ba76-7addadeae333&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;49049281-650c-4590-959c-d40138d3353d&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;16da96ee-6bd7-4a1b-b882-fd585b856098&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x0&#34;,&#34;y0&#34;,&#34;x1&#34;,&#34;y1&#34;],&#34;data&#34;:{&#34;x0&#34;:{&#34;__ndarray__&#34;:&#34;AADAlvcydUIAAID8STN1QgAAQGKcM3VCAAAAyO4zdUIAAED55TR1QgAAAF84NXVCAADAxIo1dUIAAIAq3TV1Qg==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]},&#34;x1&#34;:{&#34;__ndarray__&#34;:&#34;AADAlvcydUIAAID8STN1QgAAQGKcM3VCAAAAyO4zdUIAAED55TR1QgAAAF84NXVCAADAxIo1dUIAAIAq3TV1Qg==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]},&#34;y0&#34;:{&#34;__ndarray__&#34;:&#34;FK5H4Xp2hkAAAAAAAICGQJqZmZmZe4ZAUrgehetjhkAfhetRuCCGQLgehetR/oVAPQrXo3ANhkDsUbgehWOGQA==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]},&#34;y1&#34;:{&#34;__ndarray__&#34;:&#34;XI/C9SjehUAAAAAAAECGQFyPwvUoEIZAXI/C9SgQhkAzMzMzM3eFQB+F61G4aoVAAAAAAACwhUB7FK5H4fqFQA==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]}}},&#34;id&#34;:&#34;aa3030cb-0c71-43bc-a930-dfa6b9d8a925&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;grid_line_alpha&#34;:{&#34;value&#34;:0.3},&#34;plot&#34;:{&#34;id&#34;:&#34;b5698c4b-9614-41fa-bea2-6a942a905317&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;622de936-ebf2-4d8c-90d3-669dbac10afd&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;d8c69a3d-acf0-44e1-bd1b-bd5ffb7e136e&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;cf3c944e-b465-4341-b1b0-9c0ecfff1c1e&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;39f5729f-e20a-461a-b0e6-c1bd51f495d0&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;fb4a3a2c-a76e-4af8-bdb8-e47bd2c4f339&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;a3ce7bee-66d7-4287-a9fc-b53734b0b14b&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x0&#34;,&#34;y0&#34;,&#34;x1&#34;,&#34;y1&#34;],&#34;data&#34;:{&#34;x0&#34;:{&#34;__ndarray__&#34;:&#34;AADAlvcydUIAAID8STN1QgAAQGKcM3VCAAAAyO4zdUIAAED55TR1QgAAAF84NXVCAADAxIo1dUIAAIAq3TV1Qg==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]},&#34;x1&#34;:{&#34;__ndarray__&#34;:&#34;AADAlvcydUIAAID8STN1QgAAQGKcM3VCAAAAyO4zdUIAAED55TR1QgAAAF84NXVCAADAxIo1dUIAAIAq3TV1Qg==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]},&#34;y0&#34;:{&#34;__ndarray__&#34;:&#34;FK5H4Xp2hkAAAAAAAICGQJqZmZmZe4ZAUrgehetjhkAfhetRuCCGQLgehetR/oVAPQrXo3ANhkDsUbgehWOGQA==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]},&#34;y1&#34;:{&#34;__ndarray__&#34;:&#34;XI/C9SjehUAAAAAAAECGQFyPwvUoEIZAXI/C9SgQhkAzMzMzM3eFQB+F61G4aoVAAAAAAACwhUB7FK5H4fqFQA==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]}}},&#34;id&#34;:&#34;a0733734-7547-4306-84d7-1ca1d2ccc7e9&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,15]},&#34;id&#34;:&#34;ae13020f-c442-4b98-8a3d-14bb5fa77fee&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;49049281-650c-4590-959c-d40138d3353d&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;3e839278-60b9-48c8-9134-26dfdbd96245&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;attributes&#34;:{&#34;fill_alpha&#34;:{&#34;value&#34;:0.1},&#34;fill_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;e2cdd368-3ab2-454c-9f82-8f9c880cc55a&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;fill_alpha&#34;:{&#34;value&#34;:0.1},&#34;fill_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;fb4a3a2c-a76e-4af8-bdb8-e47bd2c4f339&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;865063e1-6a10-46f4-8e6a-063c74128fb5&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},{&#34;attributes&#34;:{&#34;bottom_units&#34;:&#34;screen&#34;,&#34;fill_alpha&#34;:{&#34;value&#34;:0.5},&#34;fill_color&#34;:{&#34;value&#34;:&#34;lightgrey&#34;},&#34;left_units&#34;:&#34;screen&#34;,&#34;level&#34;:&#34;overlay&#34;,&#34;line_alpha&#34;:{&#34;value&#34;:1.0},&#34;line_color&#34;:{&#34;value&#34;:&#34;black&#34;},&#34;line_dash&#34;:[4,4],&#34;line_width&#34;:{&#34;value&#34;:2},&#34;plot&#34;:null,&#34;render_mode&#34;:&#34;css&#34;,&#34;right_units&#34;:&#34;screen&#34;,&#34;top_units&#34;:&#34;screen&#34;},&#34;id&#34;:&#34;0c686545-799d-49a6-9281-d0f949cdc5ce&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,4,8]},&#34;id&#34;:&#34;28d8c0ee-2713-46bf-b27d-51638fa74a6d&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;line_color&#34;:{&#34;value&#34;:&#34;Black&#34;},&#34;x0&#34;:{&#34;field&#34;:&#34;x0&#34;},&#34;x1&#34;:{&#34;field&#34;:&#34;x1&#34;},&#34;y0&#34;:{&#34;field&#34;:&#34;y0&#34;},&#34;y1&#34;:{&#34;field&#34;:&#34;y1&#34;}},&#34;id&#34;:&#34;1c10d542-d650-4e9c-ac7e-eec50356dc64&#34;,&#34;type&#34;:&#34;Segment&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;33c7fb31-c5c2-49a6-b96f-507db094320d&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},{&#34;attributes&#34;:{&#34;active_drag&#34;:&#34;auto&#34;,&#34;active_scroll&#34;:&#34;auto&#34;,&#34;active_tap&#34;:&#34;auto&#34;,&#34;tools&#34;:[{&#34;id&#34;:&#34;f2b08d1b-ad56-499b-afc3-63e1eecb19e0&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;id&#34;:&#34;5e94ebb3-552d-48a3-ab34-a80cafd0f59f&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;id&#34;:&#34;7e1ee265-aec9-48bd-9f83-a44e9f2d693a&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;id&#34;:&#34;f4817193-7b8a-4f43-bc7c-ba0d545fcd32&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;id&#34;:&#34;73cd6752-dfe8-456c-9977-f9d81d9fcb35&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;id&#34;:&#34;16381e2c-2349-42f9-b2c3-5f9b2178ac5f&#34;,&#34;type&#34;:&#34;HelpTool&#34;}]},&#34;id&#34;:&#34;f69c2c96-81c4-4b65-9f94-9963451e1a77&#34;,&#34;type&#34;:&#34;Toolbar&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;6add6bf7-7827-45a5-b952-71f03442b5ce&#34;,&#34;type&#34;:&#34;YearsTicker&#34;},{&#34;attributes&#34;:{&#34;below&#34;:[{&#34;id&#34;:&#34;acaa505f-fb74-4132-8b9c-8c708400f16b&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;}],&#34;left&#34;:[{&#34;id&#34;:&#34;7fb54742-74f8-49be-8aaf-cd8e4842a64d&#34;,&#34;type&#34;:&#34;LinearAxis&#34;}],&#34;plot_height&#34;:300,&#34;plot_width&#34;:1000,&#34;renderers&#34;:[{&#34;id&#34;:&#34;acaa505f-fb74-4132-8b9c-8c708400f16b&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;id&#34;:&#34;d8c69a3d-acf0-44e1-bd1b-bd5ffb7e136e&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;7fb54742-74f8-49be-8aaf-cd8e4842a64d&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;id&#34;:&#34;3315b4eb-3069-43f1-a6f8-a2f2aadfa963&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;1f0ad273-3824-4415-bfd6-3c77d006d045&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;id&#34;:&#34;9b1a77d4-448d-4dc7-9835-eb8e11a1158a&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;id&#34;:&#34;81925d30-85fd-4c7a-9154-b0eae8363724&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;id&#34;:&#34;11520415-e1f3-4e41-84d7-f20201699181&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;}],&#34;sizing_mode&#34;:&#34;scale_width&#34;,&#34;title&#34;:{&#34;id&#34;:&#34;df81375f-ae4c-4b25-84d4-3771fb05f0f1&#34;,&#34;type&#34;:&#34;Title&#34;},&#34;tool_events&#34;:{&#34;id&#34;:&#34;8459f864-ad2c-43a1-8c02-a01d81d1761b&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},&#34;toolbar&#34;:{&#34;id&#34;:&#34;f69c2c96-81c4-4b65-9f94-9963451e1a77&#34;,&#34;type&#34;:&#34;Toolbar&#34;},&#34;x_range&#34;:{&#34;id&#34;:&#34;13fb9f9f-1fac-4837-afc7-f6af1ddb05f2&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},&#34;y_range&#34;:{&#34;id&#34;:&#34;b4ec9eb9-b7ea-4d88-be79-abb29295378a&#34;,&#34;type&#34;:&#34;DataRange1d&#34;}},&#34;id&#34;:&#34;b5698c4b-9614-41fa-bea2-6a942a905317&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:null,&#34;text&#34;:&#34;Candlestick Chart&#34;},&#34;id&#34;:&#34;e85739eb-194d-42ae-9910-582e2d589cef&#34;,&#34;type&#34;:&#34;Title&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,4,7,10,13,16,19,22,25,28]},&#34;id&#34;:&#34;b8c23390-e13b-4631-8f7b-45c2cb263607&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,1,2,3,4,5,6,7,8,9,10,11]},&#34;id&#34;:&#34;671997d0-0c99-449a-a1c9-62f2347780ef&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,1,2,3,4,5,6,7,8,9,10,11]},&#34;id&#34;:&#34;fecfd117-00ae-42d9-927d-3e6a6926788e&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;active_drag&#34;:&#34;auto&#34;,&#34;active_scroll&#34;:&#34;auto&#34;,&#34;active_tap&#34;:&#34;auto&#34;,&#34;tools&#34;:[{&#34;id&#34;:&#34;3199c8fa-afdc-414c-bf85-6749163eb6ae&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;id&#34;:&#34;3feec62c-4268-4fdc-94aa-98a280e2b722&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;id&#34;:&#34;ccad33d3-747f-4b7a-8f76-b8b9f9399ea7&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;id&#34;:&#34;8d7ab327-f9eb-4e2d-9eea-01faf2ef1fbe&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;id&#34;:&#34;a78591d9-136a-4cc8-a219-84a7c5718666&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;id&#34;:&#34;749df6d6-e98a-46f2-a1a8-b14b11a1f9f0&#34;,&#34;type&#34;:&#34;HelpTool&#34;}]},&#34;id&#34;:&#34;dcf9aae4-9d3b-4b75-9415-890b45d8a595&#34;,&#34;type&#34;:&#34;Toolbar&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;617f7259-2c2c-4ec3-ae9b-37a1e6a0be37&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;c25508be-7624-4ceb-aa8f-e71ed38929ba&#34;,&#34;type&#34;:&#34;Segment&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;18aa6c9c-e638-4db9-a399-b35bafd710fb&#34;,&#34;type&#34;:&#34;Segment&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;9b1a77d4-448d-4dc7-9835-eb8e11a1158a&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,2,4,6,8,10]},&#34;id&#34;:&#34;5ff73ee2-b356-40f9-9dab-86baa5374a2a&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;e4131b5b-1d3b-4253-8df8-9715ce1278c7&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;47d27e3c-92db-4ab0-a081-52f264f7d326&#34;,&#34;type&#34;:&#34;YearsTicker&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;1472f8c8-5a2a-4b4d-8e35-4ce8ac2abe2e&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;4b542195-0086-4abc-b667-88d1f44893f4&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;0d0b03c0-be31-422a-a896-bc8b94c395d8&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;4668191b-234d-4386-9c85-6adbe618e96a&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;21fb6c4f-7738-4cf9-ae78-1076bdfd5261&#34;,&#34;type&#34;:&#34;BasicTicker&#34;},{&#34;attributes&#34;:{&#34;grid_line_alpha&#34;:{&#34;value&#34;:0.3},&#34;plot&#34;:{&#34;id&#34;:&#34;4b542195-0086-4abc-b667-88d1f44893f4&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;0d0b03c0-be31-422a-a896-bc8b94c395d8&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;a7bf5af0-02bc-423f-8747-961f9df9125a&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;8459f864-ad2c-43a1-8c02-a01d81d1761b&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;9e1d43a9-6888-48de-bdb6-7b10902346ff&#34;,&#34;type&#34;:&#34;BasicTicker&#34;},{&#34;attributes&#34;:{&#34;base&#34;:60,&#34;mantissas&#34;:[1,2,5,10,15,20,30],&#34;max_interval&#34;:1800000.0,&#34;min_interval&#34;:1000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;b5f975b2-3080-4bc8-a9b7-47e3951de989&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;below&#34;:[{&#34;id&#34;:&#34;8b9be98d-1d72-42cf-8b08-49cf35942c11&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;}],&#34;left&#34;:[{&#34;id&#34;:&#34;aa10cb81-08ba-404d-a0a8-4ca6033bf02e&#34;,&#34;type&#34;:&#34;LinearAxis&#34;}],&#34;plot_height&#34;:300,&#34;plot_width&#34;:1000,&#34;renderers&#34;:[{&#34;id&#34;:&#34;8b9be98d-1d72-42cf-8b08-49cf35942c11&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;id&#34;:&#34;e084cdd0-5b72-46c9-ad91-d0dc83d23992&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;aa10cb81-08ba-404d-a0a8-4ca6033bf02e&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;id&#34;:&#34;ecdbd50f-c864-4c19-b046-a5ddf1b5bfe0&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;742294fd-5066-4f5c-8b30-7e468b38def4&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;id&#34;:&#34;d7af93c0-3480-40da-bbfb-b7506f7ad434&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;}],&#34;title&#34;:{&#34;id&#34;:&#34;766d35ac-ff0c-4f7d-8588-d03256b0a7ab&#34;,&#34;type&#34;:&#34;Title&#34;},&#34;tool_events&#34;:{&#34;id&#34;:&#34;4fdaa469-0cde-4e2c-a049-4383c2082196&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},&#34;toolbar&#34;:{&#34;id&#34;:&#34;11aa08fd-7d9b-4fb4-b0a5-650784aef873&#34;,&#34;type&#34;:&#34;Toolbar&#34;},&#34;x_range&#34;:{&#34;id&#34;:&#34;54cf0d1e-5292-48bc-8208-75ea2a487372&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},&#34;y_range&#34;:{&#34;id&#34;:&#34;b8382a81-76d7-45bd-90a1-fe8e40f60150&#34;,&#34;type&#34;:&#34;DataRange1d&#34;}},&#34;id&#34;:&#34;efa65c58-942f-4fdb-af11-4cd0362e00b0&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:null,&#34;text&#34;:&#34;Candlestick Chart&#34;},&#34;id&#34;:&#34;766d35ac-ff0c-4f7d-8588-d03256b0a7ab&#34;,&#34;type&#34;:&#34;Title&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;1f9d7ba7-b977-42ed-8fff-0bbba6118d0e&#34;,&#34;type&#34;:&#34;YearsTicker&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;4fdaa469-0cde-4e2c-a049-4383c2082196&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},{&#34;attributes&#34;:{&#34;fill_color&#34;:{&#34;value&#34;:&#34;green&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;d8d59084-6084-4b7b-9f79-ed0748182005&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;54cf0d1e-5292-48bc-8208-75ea2a487372&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,4,7,10,13,16,19,22,25,28]},&#34;id&#34;:&#34;65019f62-ec19-412e-99ea-d74b0175413a&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;13fb9f9f-1fac-4837-afc7-f6af1ddb05f2&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;b8382a81-76d7-45bd-90a1-fe8e40f60150&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;fill_alpha&#34;:{&#34;value&#34;:0.1},&#34;fill_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;be7a59a8-6ffc-43e8-8cf2-38bb87e422b4&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;9b157f5d-f517-4d60-822f-24771fd6764e&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;efa65c58-942f-4fdb-af11-4cd0362e00b0&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;0c46e744-58e8-4900-99cc-f69632dd46da&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;8b9be98d-1d72-42cf-8b08-49cf35942c11&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;attributes&#34;:{&#34;active_drag&#34;:&#34;auto&#34;,&#34;active_scroll&#34;:&#34;auto&#34;,&#34;active_tap&#34;:&#34;auto&#34;,&#34;tools&#34;:[{&#34;id&#34;:&#34;d6b9ce77-771c-48f8-ac1a-b5e6937d2672&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;id&#34;:&#34;74aea40d-daae-4d0b-9d49-5728dac6e9b7&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;id&#34;:&#34;7c9ef11c-e453-4db2-9514-2e19c70b6404&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;id&#34;:&#34;64ea05fe-7d81-449c-8ae7-eaf477b2b1db&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;id&#34;:&#34;98c4f95f-efc2-47d3-ba43-60fccca3bae1&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;id&#34;:&#34;2e3e48bd-6fd3-41b4-859a-045e1a08a273&#34;,&#34;type&#34;:&#34;HelpTool&#34;}]},&#34;id&#34;:&#34;11aa08fd-7d9b-4fb4-b0a5-650784aef873&#34;,&#34;type&#34;:&#34;Toolbar&#34;},{&#34;attributes&#34;:{&#34;max_interval&#34;:500.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;ae7207c0-4699-4d55-87bf-69736c8b1a02&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;num_minor_ticks&#34;:5},&#34;id&#34;:&#34;0c46e744-58e8-4900-99cc-f69632dd46da&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,8,15,22]},&#34;id&#34;:&#34;2745ee6d-9398-42c1-bc1e-8259b2e8f8ce&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;efa65c58-942f-4fdb-af11-4cd0362e00b0&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;0c46e744-58e8-4900-99cc-f69632dd46da&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;e084cdd0-5b72-46c9-ad91-d0dc83d23992&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{&#34;base&#34;:24,&#34;mantissas&#34;:[1,2,4,6,8,12],&#34;max_interval&#34;:43200000.0,&#34;min_interval&#34;:3600000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;49ae352e-7822-4167-8f14-fd7820bee6cd&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{&#34;dimension&#34;:1,&#34;grid_line_alpha&#34;:{&#34;value&#34;:0.3},&#34;plot&#34;:{&#34;id&#34;:&#34;b5698c4b-9614-41fa-bea2-6a942a905317&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;21fb6c4f-7738-4cf9-ae78-1076bdfd5261&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;3315b4eb-3069-43f1-a6f8-a2f2aadfa963&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;c3f2ca0f-0b8a-4db0-afb2-bf52555e4851&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;efa65c58-942f-4fdb-af11-4cd0362e00b0&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;7aa4e461-21c3-4694-b754-78c7459353d3&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;aa10cb81-08ba-404d-a0a8-4ca6033bf02e&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;attributes&#34;:{&#34;base&#34;:60,&#34;mantissas&#34;:[1,2,5,10,15,20,30],&#34;max_interval&#34;:1800000.0,&#34;min_interval&#34;:1000.0,&#34;num_minor_ticks&#34;:0},&#34;id&#34;:&#34;b67513ac-743b-49cf-81f8-c6fe6c852d5d&#34;,&#34;type&#34;:&#34;AdaptiveTicker&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;7aa4e461-21c3-4694-b754-78c7459353d3&#34;,&#34;type&#34;:&#34;BasicTicker&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;db4199a2-bd3a-4cc6-8512-ff05030a7cf1&#34;,&#34;type&#34;:&#34;YearsTicker&#34;},{&#34;attributes&#34;:{&#34;dimension&#34;:1,&#34;grid_line_alpha&#34;:{&#34;value&#34;:0.3},&#34;plot&#34;:{&#34;id&#34;:&#34;4b542195-0086-4abc-b667-88d1f44893f4&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;9e1d43a9-6888-48de-bdb6-7b10902346ff&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;29186c9f-82cc-4a59-9ead-ebb7d1006812&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{&#34;dimension&#34;:1,&#34;plot&#34;:{&#34;id&#34;:&#34;efa65c58-942f-4fdb-af11-4cd0362e00b0&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;7aa4e461-21c3-4694-b754-78c7459353d3&#34;,&#34;type&#34;:&#34;BasicTicker&#34;}},&#34;id&#34;:&#34;ecdbd50f-c864-4c19-b046-a5ddf1b5bfe0&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;attributes&#34;:{&#34;data_source&#34;:{&#34;id&#34;:&#34;0c2ac678-4010-4b20-8027-d3a7ab7963ee&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},&#34;glyph&#34;:{&#34;id&#34;:&#34;d8d59084-6084-4b7b-9f79-ed0748182005&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;hover_glyph&#34;:null,&#34;muted_glyph&#34;:null,&#34;nonselection_glyph&#34;:{&#34;id&#34;:&#34;be7a59a8-6ffc-43e8-8cf2-38bb87e422b4&#34;,&#34;type&#34;:&#34;Rect&#34;},&#34;selection_glyph&#34;:null},&#34;id&#34;:&#34;f0882d6a-5916-4d6c-b531-9930ed9fa9ce&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;attributes&#34;:{&#34;bottom_units&#34;:&#34;screen&#34;,&#34;fill_alpha&#34;:{&#34;value&#34;:0.5},&#34;fill_color&#34;:{&#34;value&#34;:&#34;lightgrey&#34;},&#34;left_units&#34;:&#34;screen&#34;,&#34;level&#34;:&#34;overlay&#34;,&#34;line_alpha&#34;:{&#34;value&#34;:1.0},&#34;line_color&#34;:{&#34;value&#34;:&#34;black&#34;},&#34;line_dash&#34;:[4,4],&#34;line_width&#34;:{&#34;value&#34;:2},&#34;plot&#34;:null,&#34;render_mode&#34;:&#34;css&#34;,&#34;right_units&#34;:&#34;screen&#34;,&#34;top_units&#34;:&#34;screen&#34;},&#34;id&#34;:&#34;742294fd-5066-4f5c-8b30-7e468b38def4&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;attributes&#34;:{&#34;below&#34;:[{&#34;id&#34;:&#34;4668191b-234d-4386-9c85-6adbe618e96a&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;}],&#34;left&#34;:[{&#34;id&#34;:&#34;5442c572-1dc6-44b6-a8e2-5dd4a3ac2229&#34;,&#34;type&#34;:&#34;LinearAxis&#34;}],&#34;plot_height&#34;:300,&#34;plot_width&#34;:1000,&#34;renderers&#34;:[{&#34;id&#34;:&#34;4668191b-234d-4386-9c85-6adbe618e96a&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;id&#34;:&#34;a7bf5af0-02bc-423f-8747-961f9df9125a&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;5442c572-1dc6-44b6-a8e2-5dd4a3ac2229&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;id&#34;:&#34;29186c9f-82cc-4a59-9ead-ebb7d1006812&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;0888ffdf-ab38-46cc-84ab-9de0e0b9426c&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;id&#34;:&#34;f0882d6a-5916-4d6c-b531-9930ed9fa9ce&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;id&#34;:&#34;a3ce7bee-66d7-4287-a9fc-b53734b0b14b&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;id&#34;:&#34;25dd20cf-4fdb-4659-8377-c0925df2da4e&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;}],&#34;title&#34;:{&#34;id&#34;:&#34;c8ce9c19-8f03-4802-a125-0a6189f77564&#34;,&#34;type&#34;:&#34;Title&#34;},&#34;tool_events&#34;:{&#34;id&#34;:&#34;e4131b5b-1d3b-4253-8df8-9715ce1278c7&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},&#34;toolbar&#34;:{&#34;id&#34;:&#34;dcf9aae4-9d3b-4b75-9415-890b45d8a595&#34;,&#34;type&#34;:&#34;Toolbar&#34;},&#34;x_range&#34;:{&#34;id&#34;:&#34;a74ceb08-48af-4397-9a02-7eedcd981863&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},&#34;y_range&#34;:{&#34;id&#34;:&#34;aca886fe-c975-4433-b8a6-5bf1039d6f44&#34;,&#34;type&#34;:&#34;DataRange1d&#34;}},&#34;id&#34;:&#34;4b542195-0086-4abc-b667-88d1f44893f4&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},{&#34;attributes&#34;:{&#34;days&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]},&#34;id&#34;:&#34;12270c52-ae78-43f6-8969-2a675a79bca0&#34;,&#34;type&#34;:&#34;DaysTicker&#34;},{&#34;attributes&#34;:{&#34;fill_alpha&#34;:{&#34;value&#34;:0.1},&#34;fill_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;height&#34;:{&#34;field&#34;:&#34;height&#34;,&#34;units&#34;:&#34;data&#34;},&#34;line_alpha&#34;:{&#34;value&#34;:0.1},&#34;line_color&#34;:{&#34;value&#34;:&#34;#1f77b4&#34;},&#34;width&#34;:{&#34;units&#34;:&#34;data&#34;,&#34;value&#34;:43200000},&#34;x&#34;:{&#34;field&#34;:&#34;x&#34;},&#34;y&#34;:{&#34;field&#34;:&#34;y&#34;}},&#34;id&#34;:&#34;5019a427-4049-4c42-968d-4834f87b1283&#34;,&#34;type&#34;:&#34;Rect&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;0dcbaa3c-7ff1-48a0-9f90-c8b71f15e925&#34;,&#34;type&#34;:&#34;BasicTickFormatter&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null},&#34;id&#34;:&#34;b4ec9eb9-b7ea-4d88-be79-abb29295378a&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;4b542195-0086-4abc-b667-88d1f44893f4&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;a78591d9-136a-4cc8-a219-84a7c5718666&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x&#34;,&#34;y&#34;,&#34;height&#34;],&#34;data&#34;:{&#34;height&#34;:{&#34;__ndarray__&#34;:&#34;ANejcD0KB0AAHoXrUbjOP4A9CtejcO0/gBSuR+F65D+AcD0K16PgPwAAAAAAANA/ALgehetRyD8AHoXrUbjOPw==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]},&#34;x&#34;:{&#34;__ndarray__&#34;:&#34;AADAlvcydUIAAID8STN1QgAAQGKcM3VCAAAAyO4zdUIAAABfODV1Qg==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[5]},&#34;y&#34;:{&#34;__ndarray__&#34;:&#34;9ihcj8LFWEC4HoXrUShZQML1KFyPQllAXI/C9SisWUC4HoXrUYhZQFK4HoXrOVlA9ihcj8JNWUDC9Shcj1JZQA==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[8]}}},&#34;id&#34;:&#34;ae23af2c-9614-4bda-b4db-b98c50d2bbc3&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;efa65c58-942f-4fdb-af11-4cd0362e00b0&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;d6b9ce77-771c-48f8-ac1a-b5e6937d2672&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,4,8]},&#34;id&#34;:&#34;640482f7-d5c9-428b-a6e5-864bdfc35de6&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;months&#34;:[0,6]},&#34;id&#34;:&#34;904f3d83-045c-4455-8540-b2148745f20b&#34;,&#34;type&#34;:&#34;MonthsTicker&#34;},{&#34;attributes&#34;:{&#34;bottom_units&#34;:&#34;screen&#34;,&#34;fill_alpha&#34;:{&#34;value&#34;:0.5},&#34;fill_color&#34;:{&#34;value&#34;:&#34;lightgrey&#34;},&#34;left_units&#34;:&#34;screen&#34;,&#34;level&#34;:&#34;overlay&#34;,&#34;line_alpha&#34;:{&#34;value&#34;:1.0},&#34;line_color&#34;:{&#34;value&#34;:&#34;black&#34;},&#34;line_dash&#34;:[4,4],&#34;line_width&#34;:{&#34;value&#34;:2},&#34;plot&#34;:null,&#34;render_mode&#34;:&#34;css&#34;,&#34;right_units&#34;:&#34;screen&#34;,&#34;top_units&#34;:&#34;screen&#34;},&#34;id&#34;:&#34;0888ffdf-ab38-46cc-84ab-9de0e0b9426c&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;efa65c58-942f-4fdb-af11-4cd0362e00b0&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;74aea40d-daae-4d0b-9d49-5728dac6e9b7&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;attributes&#34;:{&#34;overlay&#34;:{&#34;id&#34;:&#34;0888ffdf-ab38-46cc-84ab-9de0e0b9426c&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;4b542195-0086-4abc-b667-88d1f44893f4&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;ccad33d3-747f-4b7a-8f76-b8b9f9399ea7&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;attributes&#34;:{&#34;overlay&#34;:{&#34;id&#34;:&#34;742294fd-5066-4f5c-8b30-7e468b38def4&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;efa65c58-942f-4fdb-af11-4cd0362e00b0&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;7c9ef11c-e453-4db2-9514-2e19c70b6404&#34;,&#34;type&#34;:&#34;BoxZoomTool&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;4b542195-0086-4abc-b667-88d1f44893f4&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;8d7ab327-f9eb-4e2d-9eea-01faf2ef1fbe&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;efa65c58-942f-4fdb-af11-4cd0362e00b0&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;64ea05fe-7d81-449c-8ae7-eaf477b2b1db&#34;,&#34;type&#34;:&#34;SaveTool&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;4b542195-0086-4abc-b667-88d1f44893f4&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;3199c8fa-afdc-414c-bf85-6749163eb6ae&#34;,&#34;type&#34;:&#34;PanTool&#34;},{&#34;attributes&#34;:{&#34;callback&#34;:null,&#34;column_names&#34;:[&#34;x0&#34;,&#34;y0&#34;,&#34;x1&#34;,&#34;y1&#34;],&#34;data&#34;:{&#34;x0&#34;:{&#34;__ndarray__&#34;:&#34;AADA5FcMdUIAAIBKqgx1QgAAQLD8DHVCAAAAFk8NdUIAAMB7oQ11QgAAAK2YDnVCAADAEusOdUIAAIB4PQ91QgAAQN6PD3VCAAAAROIPdUIAAEB12RB1QgAAANsrEXVCAADAQH4RdUIAAICm0BF1QgAAQAwjEnVCAACAPRoTdUIAAECjbBN1QgAAAAm/E3VCAACA1GMUdUIAAMAFWxV1QgAAgGutFXVCAABA0f8VdUIAAAA3UhZ1QgAAwJykFnVCAAAAzpsXdUIAAMAz7hd1QgAAgJlAGHVCAABA/5IYdUIAAABl5Rh1QgAAQJbcGXVCAAAA/C4adUIAAMBhgRp1QgAAgMfTGnVCAABALSYbdUIAAIBeHRx1QgAAQMRvHHVCAAAAKsIcdUIAAMCPFB11QgAAwCZeHnVCAACAjLAedUIAAEDyAh91QgAAAFhVH3VCAAAA754gdUIAAMBU8SB1QgAAgLpDIXVCAABAIJYhdUIAAACG6CF1QgAAQLffInVCAAAAHTIjdUIAAMCChCN1QgAAgOjWI3VCAABATikkdUIAAEDlciV1QgAAAEvFJXVCAADAsBcmdUIAAIAWaiZ1QgAAwEdhJ3VCAACArbMndUIAAEATBih1QgAAAHlYKHVCAADA3qoodUIAAAAQoil1QgAAwHX0KXVCAACA20YqdUIAAEBBmSp1QgAAAKfrKnVCAABA2OIrdUIAAAA+NSx1QgAAwKOHLHVCAACACdosdUIAAEBvLC11QgAAQAZ2LnVCAAAAbMgudUIAAMDRGi91QgAAgDdtL3VCAADAaGQwdUIAAIDOtjB1QgAAQDQJMXVCAAAAmlsxdUIAAMD/rTF1QgAAADGlMnVCAADAlvcydUIAAID8STN1QgAAQGKcM3VCAAAAyO4zdUIAAED55TR1QgAAAF84NXVCAADAxIo1dUIAAIAq3TV1Qg==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[89]},&#34;x1&#34;:{&#34;__ndarray__&#34;:&#34;AADA5FcMdUIAAIBKqgx1QgAAQLD8DHVCAAAAFk8NdUIAAMB7oQ11QgAAAK2YDnVCAADAEusOdUIAAIB4PQ91QgAAQN6PD3VCAAAAROIPdUIAAEB12RB1QgAAANsrEXVCAADAQH4RdUIAAICm0BF1QgAAQAwjEnVCAACAPRoTdUIAAECjbBN1QgAAAAm/E3VCAACA1GMUdUIAAMAFWxV1QgAAgGutFXVCAABA0f8VdUIAAAA3UhZ1QgAAwJykFnVCAAAAzpsXdUIAAMAz7hd1QgAAgJlAGHVCAABA/5IYdUIAAABl5Rh1QgAAQJbcGXVCAAAA/C4adUIAAMBhgRp1QgAAgMfTGnVCAABALSYbdUIAAIBeHRx1QgAAQMRvHHVCAAAAKsIcdUIAAMCPFB11QgAAwCZeHnVCAACAjLAedUIAAEDyAh91QgAAAFhVH3VCAAAA754gdUIAAMBU8SB1QgAAgLpDIXVCAABAIJYhdUIAAACG6CF1QgAAQLffInVCAAAAHTIjdUIAAMCChCN1QgAAgOjWI3VCAABATikkdUIAAEDlciV1QgAAAEvFJXVCAADAsBcmdUIAAIAWaiZ1QgAAwEdhJ3VCAACArbMndUIAAEATBih1QgAAAHlYKHVCAADA3qoodUIAAAAQoil1QgAAwHX0KXVCAACA20YqdUIAAEBBmSp1QgAAAKfrKnVCAABA2OIrdUIAAAA+NSx1QgAAwKOHLHVCAACACdosdUIAAEBvLC11QgAAQAZ2LnVCAAAAbMgudUIAAMDRGi91QgAAgDdtL3VCAADAaGQwdUIAAIDOtjB1QgAAQDQJMXVCAAAAmlsxdUIAAMD/rTF1QgAAADGlMnVCAADAlvcydUIAAID8STN1QgAAQGKcM3VCAAAAyO4zdUIAAED55TR1QgAAAF84NXVCAADAxIo1dUIAAIAq3TV1Qg==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[89]},&#34;y0&#34;:{&#34;__ndarray__&#34;:&#34;KVyPwvWMhkAzMzMzM6WGQM3MzMzM6IZApHA9Ctcbh0DhehSuR/uGQEjhehSu9YZAH4XrUbjUhkAAAAAAACiHQGZmZmZmDodAMzMzMzPZhkBSuB6F68uGQB+F61G43oZA4XoUrkcrh0AAAAAAADCHQI/C9Shcr4dASOF6FK7Vh0AK16NwPZqHQAAAAAAAgIdA4XoUrkeLh0A9CtejcJeHQJqZmZmZB4hASOF6FK4/iEAAAAAAAAiIQFK4HoXrA4hApHA9CtcFiEBmZmZmZuaHQKRwPQrX4YdAzczMzMyeh0BI4XoUrk2HQKRwPQrXZYdAcT0K16Owh0AfhetRuMSHQD0K16Nw1YdA16NwPQqRh0AAAAAAAHCHQM3MzMzMlodASOF6FK6Rh0DNzMzMzHqHQFK4HoXr14dApHA9CtdfiEDNzMzMzEyIQAAAAAAADIhAFK5H4XpAh0AAAAAAAICHQD0K16NwWYdAAAAAAAAUh0CkcD0K1+mGQHsUrkfhdoZAAAAAAADGhkBSuB6F6/WGQI/C9Shcj4ZAUrgehesVhkCkcD0K1y+GQM3MzMzMFoZA7FG4HoV5hkDXo3A9CsGGQD0K16NwzYZACtejcD1yhkBSuB6F63GGQOxRuB6F7YZAUrgehetHh0B7FK5H4a6HQClcj8L1rohAAAAAAAA0iEAAAAAAALiGQFK4HoXr/4VACtejcD1ghUAzMzMzM9+FQBSuR+F66oVAzczMzMyKhUAAAAAAAK6FQAAAAAAA0IVAAAAAAAAuhkDNzMzMzEKGQHE9Ctej+IVAUrgehetJhkAzMzMzMyOGQAAAAAAA4IVApHA9CtcPhkA9CtejcEuGQIXrUbgeN4ZAFK5H4Xp2hkAAAAAAAICGQJqZmZmZe4ZAUrgehetjhkAfhetRuCCGQLgehetR/oVAPQrXo3ANhkDsUbgehWOGQA==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[89]},&#34;y1&#34;:{&#34;__ndarray__&#34;:&#34;zczMzMwOhkD2KFyPwlWGQDMzMzMzj4ZA9ihcj8LLhkCuR+F6FLiGQD0K16Nwe4ZAAAAAAAB0hkCkcD0K19GGQIXrUbgexYZApHA9CtdlhkBxPQrXozqGQArXo3A9mIZAAAAAAAC4hkA9CtejcAuHQAAAAAAAOIdAw/UoXI9+h0DXo3A9Cg2HQBSuR+F6UIdAUrgehetbh0Bcj8L1KCqHQJqZmZmZVYdASOF6FK63h0DXo3A9Ck2HQAAAAAAAcIdAH4XrUbiYh0CamZmZmZGHQAAAAAAACIdAcT0K16M+h0AAAAAAAAaHQI/C9ShcoYZArkfhehQ4h0DsUbgehRuHQAAAAAAAaIdAMzMzMzMRh0AAAAAAACCHQArXo3A9TIdAAAAAAABAh0ApXI/C9VSHQFyPwvUobIdAPQrXo3Dzh0AzMzMzM/eHQB+F61G4sodArkfhehTahkCF61G4HhWHQI/C9Shcx4ZAFK5H4Xp4hkAAAAAAAEiGQLgehetR/IVAw/UoXI9qhkB7FK5H4dSFQM3MzMzMiIVAKVyPwvVqhUDhehSuR6uFQK5H4XoUCoVASOF6FK6zhUApXI/C9YCGQK5H4XoUMIZApHA9CtcThkCF61G4HrOFQM3MzMzMQoZAZmZmZma2hkBcj8L1KDqHQDMzMzMz5YdAAAAAAACEhkB7FK5H4e6FQDMzMzMzQYVAFK5H4Xq4hEBcj8L1KOaEQNejcD0KUYVAKVyPwvXmhEDNzMzMzDSFQGZmZmZmaIVA16NwPQqbhUAK16NwPcCFQGZmZmZmsIVArkfhehT0hUBxPQrXo6yFQArXo3A9RoVAcT0K16OUhUB7FK5H4eaFQD0K16NwzYVAXI/C9SjehUAAAAAAAECGQFyPwvUoEIZAXI/C9SgQhkAzMzMzM3eFQB+F61G4aoVAAAAAAACwhUB7FK5H4fqFQA==&#34;,&#34;dtype&#34;:&#34;float64&#34;,&#34;shape&#34;:[89]}}},&#34;id&#34;:&#34;617f7259-2c2c-4ec3-ae9b-37a1e6a0be37&#34;,&#34;type&#34;:&#34;ColumnDataSource&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;efa65c58-942f-4fdb-af11-4cd0362e00b0&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;98c4f95f-efc2-47d3-ba43-60fccca3bae1&#34;,&#34;type&#34;:&#34;ResetTool&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;4b542195-0086-4abc-b667-88d1f44893f4&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;749df6d6-e98a-46f2-a1a8-b14b11a1f9f0&#34;,&#34;type&#34;:&#34;HelpTool&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;efa65c58-942f-4fdb-af11-4cd0362e00b0&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;2e3e48bd-6fd3-41b4-859a-045e1a08a273&#34;,&#34;type&#34;:&#34;HelpTool&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:{&#34;id&#34;:&#34;4b542195-0086-4abc-b667-88d1f44893f4&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;}},&#34;id&#34;:&#34;3feec62c-4268-4fdc-94aa-98a280e2b722&#34;,&#34;type&#34;:&#34;WheelZoomTool&#34;},{&#34;attributes&#34;:{},&#34;id&#34;:&#34;1472f8c8-5a2a-4b4d-8e35-4ce8ac2abe2e&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},{&#34;attributes&#34;:{&#34;formatter&#34;:{&#34;id&#34;:&#34;ee42f17b-647b-41db-8387-a3ab362209aa&#34;,&#34;type&#34;:&#34;DatetimeTickFormatter&#34;},&#34;plot&#34;:{&#34;id&#34;:&#34;b5698c4b-9614-41fa-bea2-6a942a905317&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},&#34;ticker&#34;:{&#34;id&#34;:&#34;622de936-ebf2-4d8c-90d3-669dbac10afd&#34;,&#34;type&#34;:&#34;DatetimeTicker&#34;}},&#34;id&#34;:&#34;acaa505f-fb74-4132-8b9c-8c708400f16b&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;attributes&#34;:{&#34;below&#34;:[{&#34;id&#34;:&#34;1eed480b-5d59-4854-875c-cbf39da5ceed&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;}],&#34;left&#34;:[{&#34;id&#34;:&#34;926ce207-b005-40db-adcb-2ebefd3d6dd7&#34;,&#34;type&#34;:&#34;LinearAxis&#34;}],&#34;plot_height&#34;:300,&#34;plot_width&#34;:1000,&#34;renderers&#34;:[{&#34;id&#34;:&#34;1eed480b-5d59-4854-875c-cbf39da5ceed&#34;,&#34;type&#34;:&#34;DatetimeAxis&#34;},{&#34;id&#34;:&#34;297cd484-5ee9-41cc-9827-e319e18fe1d9&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;926ce207-b005-40db-adcb-2ebefd3d6dd7&#34;,&#34;type&#34;:&#34;LinearAxis&#34;},{&#34;id&#34;:&#34;829debae-1315-4289-aca5-91cb473e0e44&#34;,&#34;type&#34;:&#34;Grid&#34;},{&#34;id&#34;:&#34;84fb954b-5157-445e-b509-9000e83b80b2&#34;,&#34;type&#34;:&#34;BoxAnnotation&#34;},{&#34;id&#34;:&#34;3a79197a-4cae-42e6-8b71-f6165e81e4f5&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;id&#34;:&#34;26728b81-dde6-4b55-a54f-b0d3df859a8d&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;},{&#34;id&#34;:&#34;d4442868-d9db-4f48-9eb6-5690117c2d72&#34;,&#34;type&#34;:&#34;GlyphRenderer&#34;}],&#34;title&#34;:{&#34;id&#34;:&#34;e85739eb-194d-42ae-9910-582e2d589cef&#34;,&#34;type&#34;:&#34;Title&#34;},&#34;tool_events&#34;:{&#34;id&#34;:&#34;33c7fb31-c5c2-49a6-b96f-507db094320d&#34;,&#34;type&#34;:&#34;ToolEvents&#34;},&#34;toolbar&#34;:{&#34;id&#34;:&#34;cf93e66c-3237-440f-b71b-7a644b204c11&#34;,&#34;type&#34;:&#34;Toolbar&#34;},&#34;x_range&#34;:{&#34;id&#34;:&#34;2ee63758-1f21-496c-b1c7-15f9e5828b72&#34;,&#34;type&#34;:&#34;DataRange1d&#34;},&#34;y_range&#34;:{&#34;id&#34;:&#34;3f4579ef-fdc6-4c12-9167-6252493bd2d6&#34;,&#34;type&#34;:&#34;DataRange1d&#34;}},&#34;id&#34;:&#34;5ca3358e-17ed-47c1-87b4-c1784fefea19&#34;,&#34;subtype&#34;:&#34;Figure&#34;,&#34;type&#34;:&#34;Plot&#34;},{&#34;attributes&#34;:{&#34;plot&#34;:null,&#34;text&#34;:&#34;Candlestick Chart&#34;},&#34;id&#34;:&#34;c8ce9c19-8f03-4802-a125-0a6189f77564&#34;,&#34;type&#34;:&#34;Title&#34;}],&#34;root_ids&#34;:[&#34;efa65c58-942f-4fdb-af11-4cd0362e00b0&#34;,&#34;e8fcdd9c-692b-47ad-9559-4c76addfc4db&#34;,&#34;f6267643-9809-4144-9798-4181200afc94&#34;,&#34;49049281-650c-4590-959c-d40138d3353d&#34;,&#34;2b02d270-1fc5-4e2d-94c1-5a31dad07412&#34;,&#34;231076e5-9f5d-407c-9891-3c2c2e882314&#34;,&#34;8ee8ca7b-5da6-419a-8a2c-b72d82465172&#34;,&#34;f8f2ae67-06ac-462d-9ea1-2608a7cc09b8&#34;,&#34;21a43bba-edb8-4651-87e9-a5787a796a76&#34;,&#34;4b542195-0086-4abc-b667-88d1f44893f4&#34;,&#34;3fe6dc11-7cd9-453c-86bd-3513a3d5e20c&#34;,&#34;47c38c67-f90c-4620-9623-b852d50c80de&#34;,&#34;5ca3358e-17ed-47c1-87b4-c1784fefea19&#34;,&#34;89edc8c6-acb7-4f82-9d7b-68decd13f621&#34;,&#34;ffdc709a-4afe-440b-9242-b4f4d763b3c0&#34;,&#34;b5698c4b-9614-41fa-bea2-6a942a905317&#34;]},&#34;title&#34;:&#34;Bokeh Application&#34;,&#34;version&#34;:&#34;0.12.5&#34;}};
              var render_items = [{&#34;docid&#34;:&#34;461f3f5e-9e25-413d-bb77-526d00d3116e&#34;,&#34;elementid&#34;:&#34;f336028c-8560-42cf-8737-d1d2f30fc69c&#34;,&#34;modelid&#34;:&#34;b5698c4b-9614-41fa-bea2-6a942a905317&#34;}];

              Bokeh.embed.embed_items(docs_json, render_items);
            });
          };
          if (document.readyState != &#34;loading&#34;) fn();
          else document.addEventListener(&#34;DOMContentLoaded&#34;, fn);
        })();

        &lt;/script&gt;
        &lt;/body&gt;
&lt;/html&gt;


</description>
    </item>
    
    <item>
      <title>Expert Group on Business Registers, 27-29 September 2017, OECD, Paris</title>
      <link>/post/2017-09-27-contribution-ecb-group-of-experts-of-business-registers/</link>
      <pubDate>Fri, 29 Sep 2017 10:37:05 +0100</pubDate>
      
      <guid>/post/2017-09-27-contribution-ecb-group-of-experts-of-business-registers/</guid>
      <description>&lt;p&gt;The upcoming &amp;lsquo;Meeting of the Expert Group on Business Registers&amp;rsquo; will take place
from 27-29 September at the OECD in Paris. The program of the meeting is
available on the &lt;a href=&#34;https://www.unece.org/index.php?id=44252&#34;&gt;UNECE&amp;rsquo;s homepage&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The contribution that I wrote together with my colleagues Sara Thijs, Peter Neudorfer and Sandrine Corvoisier is included in the part about
&amp;lsquo;Registers and globalisation&amp;rsquo; and is available &lt;a href=&#34;https://www.unece.org/fileadmin/DAM/stats/documents/ece/ces/ge.42/2017/ECB.pdf&#34;&gt;here&lt;/a&gt;.
The accompanying presentation is available &lt;a href=&#34;https://www.unece.org/fileadmin/DAM/stats/documents/ece/ces/ge.42/2017/ECB_ppt.pdf&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Simple Numerical Integration Techniques with Python</title>
      <link>/post/2015-01-21-numeric-integration/</link>
      <pubDate>Thu, 22 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>/post/2015-01-21-numeric-integration/</guid>
      <description>&lt;p&gt;In today&amp;rsquo;s post I want to make available a little paper that was part of the
requirements for our programming class in the first semester of Mathematics.&lt;/p&gt;
&lt;p&gt;The topic I chose was &amp;lsquo;Numerical Integration&amp;rsquo; and any programming had to be
done using Python. I had a lot of fun sitting down and work on the project as it
allowed me to dive a little more into python again as well as to finally learn
LaTeX&amp;rsquo;s incredibly versatile and powerful (although sometimes a bit hard to
understand) graphics capabilities. &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;The article is available &lt;a href=&#34;/files/NumerischeIntegration_MarcelKropp.pdf&#34;&gt;here&lt;/a&gt; (unfortunately only in German).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Binary Choice Models - Some Theory and an Application</title>
      <link>/post/binary-choice-models-some-theory-and-an-application/</link>
      <pubDate>Sat, 14 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/binary-choice-models-some-theory-and-an-application/</guid>
      <description>


&lt;div id=&#34;abstract&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Abstract&lt;/h1&gt;
&lt;p&gt;In this slightly longer post I want to outline some of the differences in the
econometric modeling techniques when the dependent variable is a binary
variable with two distinct outcomes (yes/no, 0/1). We will discuss the
shortcomings of ordinary least squares (OLS) in these settings and how
the concept of a conditional expectation function (CEF) is replaced by
the concept of a conditional probability function (CPF) that gives rise
to the so called &lt;strong&gt;logit&lt;/strong&gt; and &lt;strong&gt;probit&lt;/strong&gt; models used for binary responses.
Within these frameworks, the least squares principle is replaced by
maximum likelihood estimation, which is &lt;em&gt;the&lt;/em&gt; estimation technique
common to all applications where the response variable is of qualitative
nature. The theoretical discussion will be complemented with an
illustrative example.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;introduction-and-theory&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction and Theory&lt;/h1&gt;
&lt;p&gt;Ordinary Least Squares (OLS) is undoubtedly the most frequently used
estimation technique within the Classical Linear (Regression) Model
(CLM) to recover a functional and foremost causal relationship between a
dependent variable of interest &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; and explanatory variables
(regressors) &lt;span class=&#34;math inline&#34;&gt;\(x_j\)&lt;/span&gt; with &lt;span class=&#34;math inline&#34;&gt;\(j = 1, ..., k\)&lt;/span&gt; by means of parameter
estimation. But the framework of the CLM underlies certain important
assumptions for why within this framework the OLS-principle should be
used only in circumstances where there are good reasons to believe that
the underlying assumptions are fulfilled.&lt;/p&gt;
&lt;p&gt;In many applications the response variable &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; we are trying to model is
available on a continuous (or sufficiently continuous) measurement scale
and in many instances also (roughly) normally distributed, at least
after adequate transformations (e.g. log-transformations etc.). But this
changes if we want to model categorial (or qualitative) variables, which
are always discrete and can be binary/multinomial/ordered or
quantitative variables with a restricted range (e.g., counts, durations,
censored, truncated) that can be both, continuous or discrete. Within
the class of categorial variables, the models used differ with respect
to the response variable we are trying to model (hence they are called
binary, multinomial or ordered response models).&lt;br/&gt;
Binary variables arise from the answer to yes/no questions, multinomial
extends the binary variables to the setting where we have more than two
mutually exclusive and exhaustive categories that cannot be ordered and
finally ordered variables are like multinomial variables but with a
meaningful ordering of the categories.&lt;/p&gt;
&lt;p&gt;The OLS-principle assumes relationships between &lt;em&gt;quantitative&lt;/em&gt;
variables, where the regressors can enter the model also as dummy
variables and the response is assumed to be continuous. For
&lt;span class=&#34;math inline&#34;&gt;\(i = 1, ..., n\)&lt;/span&gt;, the PRF (population regression function) for the simple
linear model can be written as&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\begin{eqnarray*}
y_i &amp;amp; = &amp;amp; \beta_1 + \beta_2 x_{2i} + ... + \beta_k x_{ki} + \epsilon_i  \\
&amp;amp; = &amp;amp; \sum_{j=1}^K\beta_jx_{ji} + \epsilon_i  \\
&amp;amp; = &amp;amp; \mathbf{x_i&amp;#39;\beta} + \epsilon_i.
\end{eqnarray*}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;which can be compactly written as
&lt;span class=&#34;math display&#34;&gt;\[\mathbf{y} = \mathbf{X \beta} + \mathbf{\epsilon}.\]&lt;/span&gt; Under the
Gauß-Markov assumptions which are (1) linearity in parameters, (2) full
rank of the design matrix, (3) exogeneity of the explanatory variables
&lt;span class=&#34;math inline&#34;&gt;\(E(\mathbf{\epsilon}\vert \mathbf{X})=0\)&lt;/span&gt; and homoscedastic and
uncorrelated errors, meaning that the variance/covariance matrix simply
is &lt;span class=&#34;math inline&#34;&gt;\(Cov\mathbf{(\epsilon)} = \sigma^2 \mathbf{I}\)&lt;/span&gt;, the ordinary least
squares estimator is the best linear unbiased estimator (BLUE) and we
can rewrite the model in terms of the then correctly specified
&lt;em&gt;conditional&lt;/em&gt; expectation function&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\begin{eqnarray*}
E(\mathbf{y}\vert \mathbf{X})=\mathbf{X\beta},
\end{eqnarray*}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;i.e., the systematic
component of our linear regression model describes the conditional
expectation.&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; If, in addition, we assume the errors to be normally
distributed, inference based on &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(F\)&lt;/span&gt; tests is exact.&lt;a href=&#34;#fn2&#34; class=&#34;footnote-ref&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We could try to apply the least squares principle from above to a binary
response variable &lt;span class=&#34;math inline&#34;&gt;\(y_i\)&lt;/span&gt; where the categories are coded with numerical
values &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;. And to follow the argumentation it is useful to
think of the linear regression model in terms of the conditional
expectation function as specified above. For a binary variable
(Bernoulli variable) where &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; is denoted as the &amp;quot;success probability&amp;quot;
we know that the expectation is
&lt;span class=&#34;math inline&#34;&gt;\(E(y_i) = 0 \cdot P(y_i=0) + 1 \cdot P(y_i=1) = P(y_i=1) =p_i\)&lt;/span&gt;, i.e.,
the expectation equals the success probability. And due to
&lt;span class=&#34;math inline&#34;&gt;\(Var(y_i) = E(y_i - E(y_i))^2 = E(y_i^2) - E(y_i)^2\)&lt;/span&gt; we get
&lt;span class=&#34;math inline&#34;&gt;\(Var(y_i) = p_i - p_i^2 = p_i(1-p_i)\)&lt;/span&gt;. If we were to use this in a
linear regression we would have
&lt;span class=&#34;math inline&#34;&gt;\(P(y = 1|\mathbf{x}) = E(y_i\vert \mathbf{x_i})=\mathbf{x_i&amp;#39;\beta}\)&lt;/span&gt; and
consequently
&lt;span class=&#34;math inline&#34;&gt;\(Var(y_i\vert \mathbf{x_i})=\mathbf{x_i&amp;#39;\beta}(1-\mathbf{x_i&amp;#39;\beta})\)&lt;/span&gt;.
The problem with this specification is that
&lt;span class=&#34;math inline&#34;&gt;\(\mathbf{x_i&amp;#39;\hat{\mathbf{\mathbf{\beta}}}}\)&lt;/span&gt; (our linear predictor) is
not restricted and can lead to nonsense predictions, i.e., predictions
that are outside of the admissible range of &lt;span class=&#34;math inline&#34;&gt;\([0, 1]\)&lt;/span&gt; and is therefore
not well suited for modeling the success probability of our response
variable &lt;span class=&#34;math inline&#34;&gt;\(y_i\)&lt;/span&gt; for a specific individual or entity given a set of
covariates &lt;span class=&#34;math inline&#34;&gt;\(x_{ji}\)&lt;/span&gt;. In addition,
&lt;span class=&#34;math inline&#34;&gt;\(Var(y_i\vert \mathbf{x_i})=\mathbf{x_i&amp;#39;\beta}(1-\mathbf{x_i&amp;#39;\beta})=p_i(1-p_i)\)&lt;/span&gt;
shows that if &lt;span class=&#34;math inline&#34;&gt;\(p_i\)&lt;/span&gt; differs across individuals (depending on our linear
predictor) then also our variance is not constant but is different for
every individual &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;, i.e. we have heteroscedasticity.&lt;/p&gt;
&lt;p&gt;To overcome the difficulties, a different estimation technique is
applied, namely Maximum Likelihood Estimation (MLE). In contrast to OLS,
in MLE the starting point is a parametric distribution of the response
variable (or the error term) where the parameters are specified as a
function of the exogenous variables. By modeling the probability
distribution of a response &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{y}\)&lt;/span&gt; conditional on regressors
&lt;span class=&#34;math inline&#34;&gt;\(\mathbf{X}\)&lt;/span&gt; the emphasis is shifted away from the conditional
expectation function as in the OLS-framework towards the &lt;strong&gt;conditional
probability function&lt;/strong&gt;. This procedure can be applied to a broader class
of distributions within the framework of Generalized Linear Models
(GLMs) which are an extension of the classical linear regression model
to accommodate both non-normal response distributions and
transformations to linearity. This framework allows a unified treatment
of statistical methodology for several important classes of models where
the response variables have an error distribution out of the class of
the exponential family which incorporates the Bernoulli, Binomial,
Poisson, Gamma or inverse Normal distribution etc. The GLM thereby
allows the linear predictor to be related to the response variable via a
link function and allows the magnitude of the variance of each
observation to be a function of its predicted value.&lt;a href=&#34;#fn3&#34; class=&#34;footnote-ref&#34; id=&#34;fnref3&#34;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;glms&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;GLMs&lt;/h4&gt;
&lt;p&gt;For GLMs the conditional distribution of &lt;span class=&#34;math inline&#34;&gt;\(y_i\vert \mathbf{x_i}\)&lt;/span&gt; is
given by a density of the following type&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\begin{eqnarray*}
f(y; \theta, \phi)=exp\left(\frac{y\theta-b(\theta)}{\phi}+c(y, \phi)\right)
\end{eqnarray*}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;where &lt;span class=&#34;math inline&#34;&gt;\(b(.)\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(c(.)\)&lt;/span&gt; are known functions and &lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(\phi\)&lt;/span&gt; are
the so-called canonical and dispersion parameter.&lt;a href=&#34;#fn4&#34; class=&#34;footnote-ref&#34; id=&#34;fnref4&#34;&gt;&lt;sup&gt;4&lt;/sup&gt;&lt;/a&gt; By appropriately
choosing &lt;span class=&#34;math inline&#34;&gt;\(b(.)\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(c(.)\)&lt;/span&gt; it is possible to generate the different
distributions (normal, binomial, Poisson, …). &lt;br/&gt;
To generate a regression model based on this exponential family one
further states the conditional expectation to be
&lt;span class=&#34;math inline&#34;&gt;\(\mu_i=E(y_i\vert \mathbf{x_i})\)&lt;/span&gt; and the linear predictor to be
&lt;span class=&#34;math inline&#34;&gt;\(\eta_i=\mathbf{x_i&amp;#39;\beta}\)&lt;/span&gt; which are connected via a monotone
transformation &lt;span class=&#34;math inline&#34;&gt;\(g(\mu_i)=\eta_i=\mathbf{x_i&amp;#39;\beta}\)&lt;/span&gt; where &lt;span class=&#34;math inline&#34;&gt;\(g(.)\)&lt;/span&gt; is
called &lt;em&gt;link function&lt;/em&gt;.&lt;a href=&#34;#fn5&#34; class=&#34;footnote-ref&#34; id=&#34;fnref5&#34;&gt;&lt;sup&gt;5&lt;/sup&gt;&lt;/a&gt; And because &lt;span class=&#34;math inline&#34;&gt;\(g(.)\)&lt;/span&gt; is assumed to be a
monotonic function it is invertible and we can rearrange to get
&lt;span class=&#34;math inline&#34;&gt;\(\mu_i = g^{-1}(\eta_i) = g^{-1}(\mathbf{x_i&amp;#39;\beta})\)&lt;/span&gt;. Furthermore,
&lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt; is also an invertible function of &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; and it can be shown
that &lt;span class=&#34;math inline&#34;&gt;\(E(y_i\vert \mathbf{x_i})=\mu_i=b&amp;#39;(\theta_i)\)&lt;/span&gt;, which could be
rearranged to &lt;span class=&#34;math inline&#34;&gt;\(\theta_i=(b&amp;#39;)^{-1}(\mu_i)\)&lt;/span&gt;, and
&lt;span class=&#34;math inline&#34;&gt;\(Var(y_i\vert \mathbf{x_i})=\phi b&amp;#39;&amp;#39;(\theta_i)\)&lt;/span&gt;. We see that the
canonical parameter &lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt; is connected to our conditional expectation
&lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; via the function &lt;span class=&#34;math inline&#34;&gt;\(b(.)\)&lt;/span&gt; and that &lt;span class=&#34;math inline&#34;&gt;\(E\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(Var\)&lt;/span&gt; are not completely
separated but the variance is, in the general case, a function of &lt;span class=&#34;math inline&#34;&gt;\(\phi\)&lt;/span&gt;
and &lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt;, therefore the variance is also a function of our
expectation &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; which is often written down as
&lt;span class=&#34;math inline&#34;&gt;\(Var(y_i\vert \mathbf{x_i})=\phi b&amp;#39;&amp;#39;(\theta(\mu))\)&lt;/span&gt; where
&lt;span class=&#34;math inline&#34;&gt;\(V(\mu)=b&amp;#39;&amp;#39;(\theta(\mu))\)&lt;/span&gt; is called the variance function. If we combine
all of the above we see that&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\begin{eqnarray*}
\theta_i = (b&amp;#39;)^{-1}(\mu_i)=(b&amp;#39;)^{-1}(g^{-1}(\mathbf{x_i&amp;#39; \beta}))
\end{eqnarray*}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;where we see that we have multiple transformations between the linear
predictor, the conditional expectation and the canonical parameter. In
the linear regression model we have $ =_i=_i=_i $.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;a-glm-for-binary-responses&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;A GLM for Binary Responses&lt;/h4&gt;
&lt;p&gt;To pass these concepts on to a Bernoulli-distributed random variable &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;
which takes the value 1 with success probability &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; and the value 0
with probability &lt;span class=&#34;math inline&#34;&gt;\((1-p)\)&lt;/span&gt; we can, as a first step, simply write down the
probability mass function which is&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\begin{eqnarray*}
f(y;\mu) = \mu^y (1-\mu)^{1-y}\!\quad \text{for }y\in\{0,1\}.
\end{eqnarray*}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;This mass function&lt;a href=&#34;#fn6&#34; class=&#34;footnote-ref&#34; id=&#34;fnref6&#34;&gt;&lt;sup&gt;6&lt;/sup&gt;&lt;/a&gt; can be rewritten to&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\begin{eqnarray*}
f(y; \mu) &amp;amp; = &amp;amp; \mu^{y} (1-\mu)^{1-y} \\
          &amp;amp; = &amp;amp; exp \left \{y \cdot log \left ( \frac{\mu}{1-\mu} \right) + log(1 - \mu) \right \}
\end{eqnarray*}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;In this representation we see that &lt;span class=&#34;math inline&#34;&gt;\(\phi=1\)&lt;/span&gt; and that &lt;span class=&#34;math inline&#34;&gt;\(c(y, \phi)\)&lt;/span&gt; is
also not part of it. Comparing the remaining terms to the general
representation of GLMs we see that
&lt;span class=&#34;math inline&#34;&gt;\(\theta=log\left(\frac{\mu}{1-\mu}\right)\)&lt;/span&gt;, i.e. our canonical parameter
&lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt; is a function of our conditional expectation &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt;. Here,
&lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt; is said to be the logit transform of &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt;. Solving for &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt;
we see that &lt;span class=&#34;math inline&#34;&gt;\(\mu=\frac{e^\theta}{1+e^\theta}\)&lt;/span&gt; and we further get
&lt;span class=&#34;math inline&#34;&gt;\(b(\theta)=-log\left(1-\frac{e^\theta}{1+e^\theta}\right)=...=log(1+e^\theta)\)&lt;/span&gt;.
From this we can derive
&lt;span class=&#34;math inline&#34;&gt;\(b&amp;#39;(\theta) = \frac{1}{1 + exp(\theta)} \cdot exp(\theta) = \mu\)&lt;/span&gt; and
after some algebra also the variance function
&lt;span class=&#34;math inline&#34;&gt;\(V(\mu) = b&amp;#39;&amp;#39;(\theta(\mu)) = \mu(1 - \mu)\)&lt;/span&gt;. By this we can represent the
variance function as a function of &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; instead of our canonical
parameter &lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt;&lt;a href=&#34;#fn7&#34; class=&#34;footnote-ref&#34; id=&#34;fnref7&#34;&gt;&lt;sup&gt;7&lt;/sup&gt;&lt;/a&gt;. So we see, that in the Bernoulli-model it holds
that &lt;span class=&#34;math inline&#34;&gt;\(E[y_i\vert \mathbf{x_i}]=\mu_i=b&amp;#39;(\theta)\)&lt;/span&gt; and that
&lt;span class=&#34;math inline&#34;&gt;\(Var[y_i\vert \mathbf{x_i}]=\phi \cdot V(\mu_i)=\phi \cdot b&amp;#39;&amp;#39;(\theta(\mu))=\mu_i(1-\mu_i)\)&lt;/span&gt;,
what is exactly what we postulated above. Here we clearly see how the
conditional expectation &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; influences our variance.&lt;a href=&#34;#fn8&#34; class=&#34;footnote-ref&#34; id=&#34;fnref8&#34;&gt;&lt;sup&gt;8&lt;/sup&gt;&lt;/a&gt; &lt;br/&gt;&lt;/p&gt;
&lt;p&gt;In general, each response distribution allows a variety of link functions to connect
the mean with the linear predictor. In the case of binary dependent
variables, the two most widely used links are the &lt;em&gt;logit&lt;/em&gt; and the
&lt;em&gt;probit&lt;/em&gt; link&lt;a href=&#34;#fn9&#34; class=&#34;footnote-ref&#34; id=&#34;fnref9&#34;&gt;&lt;sup&gt;9&lt;/sup&gt;&lt;/a&gt;. For each response distribution the link function
&lt;span class=&#34;math inline&#34;&gt;\(g=(b&amp;#39;)^{-1}\)&lt;/span&gt; for which we get &lt;span class=&#34;math inline&#34;&gt;\(\theta \equiv \eta\)&lt;/span&gt; is called the
&lt;em&gt;canonical link&lt;/em&gt;. In case of binary responses the two most widely used
links are the canonical &lt;em&gt;logit&lt;/em&gt; or &lt;em&gt;probit&lt;/em&gt; link. From above we see that
&lt;span class=&#34;math inline&#34;&gt;\(\theta=(b&amp;#39;)^{-1}(\mu)=log\left(\frac{\mu}{1-\mu}\right)\)&lt;/span&gt; and so the
link function &lt;span class=&#34;math inline&#34;&gt;\(g=(b&amp;#39;)^{-1}\)&lt;/span&gt; for which we get &lt;span class=&#34;math inline&#34;&gt;\(\theta \equiv \eta\)&lt;/span&gt; is
exactly &lt;span class=&#34;math inline&#34;&gt;\(log\left(\frac{\mu}{1-\mu}\right)\)&lt;/span&gt; because then
&lt;span class=&#34;math inline&#34;&gt;\(\theta = (b&amp;#39;)^{-1} (g^{-1} (\mathbf{x&amp;#39; \beta})) = \mathbf{x&amp;#39; \beta} = \eta\)&lt;/span&gt;.
By setting &lt;span class=&#34;math inline&#34;&gt;\(log\left(\frac{\mu}{1-\mu}\right)=\eta\)&lt;/span&gt; we also see that
&lt;span class=&#34;math inline&#34;&gt;\(\frac{\mu}{1-\mu}=exp(\eta)\)&lt;/span&gt; and further that
&lt;span class=&#34;math inline&#34;&gt;\(\mu = \frac{\exp(\eta)}{1+exp(\eta)}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;In the paragraph above we rolled up the field from behind in an attempt
to show how the relevant quantities naturally arise from a Bernoulli
distribution. In practice, this is of course known and therefore one can
immediately summarize the relevant results as follows: a binary
regression model links the conditional probability that we want to model
&lt;span class=&#34;math inline&#34;&gt;\(\mu_i = P(y_i=1\vert \mathbf{x_i})=E(y_i\vert\mathbf{x_i})\)&lt;/span&gt; to the
linear predictor &lt;span class=&#34;math inline&#34;&gt;\(\eta_i\)&lt;/span&gt; via a function &lt;span class=&#34;math inline&#34;&gt;\(g^{-1}(.)\)&lt;/span&gt; which is a strict
monotonic increasing distribution function so that
&lt;span class=&#34;math inline&#34;&gt;\(g^{-1}(\eta) \in [0, 1]\)&lt;/span&gt; always holds and we have&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\begin{eqnarray*}
\mu_i=g^{-1}(\eta_i)=g^{-1}(\mathbf{x_i&amp;#39;\beta})
\end{eqnarray*}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;By means of the
inverse function &lt;span class=&#34;math inline&#34;&gt;\(g=(g^{-1})^{-1}\)&lt;/span&gt; it holds that
&lt;span class=&#34;math inline&#34;&gt;\(g(\mu_i)=\eta_i=\mathbf{x_1&amp;#39;\beta}\)&lt;/span&gt;. In the GLM-terminology &lt;span class=&#34;math inline&#34;&gt;\(g^{-1}(.)\)&lt;/span&gt;
is called &lt;em&gt;response function&lt;/em&gt; and &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; is called canonical &lt;em&gt;link
function&lt;/em&gt;. It is important to note that the response function
&lt;span class=&#34;math inline&#34;&gt;\(g^{-1}(.)\)&lt;/span&gt; should be chosen such that the linear predictor is mapped to
the unit interval, i.e. &lt;span class=&#34;math inline&#34;&gt;\(g^{-1}:\mathbf{x_i&amp;#39;\beta}\rightarrow[0, 1]\)&lt;/span&gt; and
the link function accordingly maps the unit interval to the real line,
i.e. &lt;span class=&#34;math inline&#34;&gt;\(g:[0, 1] \rightarrow \mathbb{R}\)&lt;/span&gt;. The logit-model then arises by
choosing the cumulative distribution function (CDF) of the logistic
distribution&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\begin{eqnarray*}
P(y_i = 1) = \mu=g^{-1}(\eta)=\frac{exp(\eta)}{1+exp(\eta)} = \Lambda(\eta)
\end{eqnarray*}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;that ensures that that &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; is restricted to the interval &lt;span class=&#34;math inline&#34;&gt;\([0,1]\)&lt;/span&gt; and
the corresponding &lt;em&gt;logit-link&lt;/em&gt; function then is&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\begin{eqnarray*}
g(\mu)=log\left(\frac{\mu}{1-\mu}\right)=\eta=\mathbf{x_i&amp;#39;\beta}.
\end{eqnarray*}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;By
this one generates a linear model in the log-odds (the ratio of success
probability to the probability of failure) &lt;span class=&#34;math inline&#34;&gt;\(log(\mu/(1-\mu))\)&lt;/span&gt; and
transforming by taking &lt;span class=&#34;math inline&#34;&gt;\(exp()\)&lt;/span&gt; yields&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\begin{eqnarray*}
\frac{\mu}{1-\mu}=exp(\mathbf{x_i&amp;#39;\beta})
\end{eqnarray*}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;which shows how the
covariates influence the odds &lt;span class=&#34;math inline&#34;&gt;\(\mu/(1-\mu)\)&lt;/span&gt;. &lt;br/&gt;
Similarly also other CDFs &lt;span class=&#34;math inline&#34;&gt;\(F(.)\)&lt;/span&gt; with &lt;span class=&#34;math inline&#34;&gt;\(F: \mathbb{R} \rightarrow [0, 1]\)&lt;/span&gt;
can be used as the inverse link function, the most popular being&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\begin{eqnarray*}
g(\mu)=\Phi^{-1}(\mu)
\end{eqnarray*}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;where &lt;span class=&#34;math inline&#34;&gt;\(\Phi^{-1}\)&lt;/span&gt; is the inverse CDF of the
standard normal distribution and therefore this model entered the
literature as the &lt;em&gt;probit&lt;/em&gt; model. In terms of the normal distribution we
would get&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\begin{eqnarray*}
P(y_i = 1) &amp;amp; = &amp;amp; \mu = g^{-1}(\eta) = \Phi(\mathbf{x_i&amp;#39;\beta}) = \Phi(\eta)\\
                &amp;amp; = &amp;amp; \int_\infty^{\mathbf{x_i&amp;#39;\beta}} \! \phi(z) dz = \int_\infty^{\mathbf{x_i&amp;#39;\beta}} \! \frac{1}{2\pi} exp\left( \frac{-z^2}{2} \right) dz
\end{eqnarray*}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;As can be seen in
the Figure below, the logistic and normal CDF, i.e., the inverse
link functions (response functions) that map the linear predictor to the
unit interval are very similar. They are both symmetric around zero but
the logistic CDF somewhat slower approaches 1 and 0 for
&lt;span class=&#34;math inline&#34;&gt;\(\eta \rightarrow +/- \infty\)&lt;/span&gt; respectively.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/logprob.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Inverse Logit and Probit functions.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This emerges because the logistic distribution has somewhat heavier
tails. And because the logistic CDF has a variance of &lt;span class=&#34;math inline&#34;&gt;\(\pi^2/3\)&lt;/span&gt; (and not
1 like the standard normal distribution) it has to be compared with a
rescaled normal CDF &lt;span class=&#34;math inline&#34;&gt;\(\Phi\)&lt;/span&gt; with a variance of &lt;span class=&#34;math inline&#34;&gt;\(\sigma^2=\phi^2/3\)&lt;/span&gt;. In the
Figure above one can see that the Logit- and the (adjusted)
Probit response function are very similar. Statistical analyses with
Logit- and Probit-models therefore always lead to very similar results
for the predicted probabilities. The rescaling of the parameters is
thereby conserved whereby the coefficients of a Logit-models differ
approximately by a factor of &lt;span class=&#34;math inline&#34;&gt;\(\sigma=\pi\sqrt{3} \approx 1.814\)&lt;/span&gt;, but the
estimated probabilities are very similar.&lt;br/&gt;
By specifying all of the above and further assume independence (which is
often natural to assume for cross-section data), we can specify the full
likelihood where the parameters are connected to the linear predictor
via the link-function &lt;span class=&#34;math inline&#34;&gt;\(g(\mu)=\eta\)&lt;/span&gt; and it is possible to estimate the
model via maximum likelihood. For this it is important to note that the
linear predictor &lt;span class=&#34;math inline&#34;&gt;\(\eta_i=\mathbf{x_i&amp;#39;\beta}\)&lt;/span&gt; depends on &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; and
influences our conditional expectation &lt;span class=&#34;math inline&#34;&gt;\(\mu_i\)&lt;/span&gt; and further our canonical
parameter &lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt;.&lt;a href=&#34;#fn10&#34; class=&#34;footnote-ref&#34; id=&#34;fnref10&#34;&gt;&lt;sup&gt;10&lt;/sup&gt;&lt;/a&gt; In general, there is no analytic solution to
this expression and is therefore typically estimated by &lt;em&gt;iterative
weighted least squares&lt;/em&gt; which is a version of the Fisher scoring adapted
to GLMs.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;latent-variable-approach&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Latent Variable Approach&lt;/h4&gt;
&lt;p&gt;So far we have argued that we want to model probabilities therefore,
statistically, it makes sense to map our linear predictor to the unit
interval. Apart from these considerations there are of course also
economic/behavioural justifications for why we use these specifications
and the corresponding link functions. Before proceeding to these
considerations we want to briefly discuss the &lt;em&gt;latent variable
approach&lt;/em&gt;. &lt;br/&gt;
The idea is that the binary outcomes we observe are generated by an
unobservable underlying (latent) variable &lt;span class=&#34;math inline&#34;&gt;\(y_i\)&lt;/span&gt; that captures the
propensity to have a &amp;quot;success&amp;quot; (i.e., outcome &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;) or not. Only if
this latent variable is larger than some threshold &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt;, we observe a
success. This can be written down via
&lt;span class=&#34;math inline&#34;&gt;\(y_i^* = \mathbf{x_i^\beta} + \epsilon_i\)&lt;/span&gt; where the linear predictor
models the mean of the latent variable. But what we actually observe is
only whether the latent variable exceeded some certain threshold., i.e.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\begin{eqnarray*}
y_i = I(y_i^* \geq t) = 1  \text{ if } y_i^* \geq t \text{ and } 0 \text{ otherwise }
\end{eqnarray*}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Most frequently the threshold value &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt; is chosen to be &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; because
choosing a different threshold would only affect the intercept in the
estimations. The probability to have a success, i.e., that &lt;span class=&#34;math inline&#34;&gt;\(y_i = 1\)&lt;/span&gt; for
a given set of explanatory variables can then be written down as the
corresponding value of the CDF evaluated at &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{x_i&amp;#39;\beta}\)&lt;/span&gt;. This
can be derived via &lt;a href=&#34;#fn11&#34; class=&#34;footnote-ref&#34; id=&#34;fnref11&#34;&gt;&lt;sup&gt;11&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\begin{eqnarray*}
P(y_i = 1 | \mathbf{x_i&amp;#39;}) = \mu_i &amp;amp; = &amp;amp; P(y_i^* \geq 0| x_i) = P(\mathbf{x_i&amp;#39;\beta} + \epsilon_i \geq 0 | \mathbf{x_i})\\
         &amp;amp; = &amp;amp; P(\epsilon_i \geq \mathbf{-x_i&amp;#39;\beta} | \mathbf{x_i}) = P(\epsilon \leq \mathbf{x_i&amp;#39;\beta}| \mathbf{x_i})\\
         &amp;amp; = &amp;amp; F(\mathbf{x_i&amp;#39;\beta)}
\end{eqnarray*}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;This shows that by looking at latent variables where the
latent variable is explained by a mean which is the linear predictor plus
some random error term we get incidental decisions (&lt;span class=&#34;math inline&#34;&gt;\(0, 1\)&lt;/span&gt;) where the
probability depends on the linear predictor and the distribution of the
remaining error term around the latent variable. And then, by assuming
that &lt;span class=&#34;math inline&#34;&gt;\(-\epsilon\)&lt;/span&gt; has a logistic distribution brings us to the logit
model and assuming &lt;span class=&#34;math inline&#34;&gt;\(-\epsilon\)&lt;/span&gt; to be normally distributed brings us to
the probit model.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;mle&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;MLE&lt;/h4&gt;
&lt;p&gt;Under independence, the likelihood is the product of the individual
densities (i.e. the joint density, given the data) as a function of the
parameter vector&lt;a href=&#34;#fn12&#34; class=&#34;footnote-ref&#34; id=&#34;fnref12&#34;&gt;&lt;sup&gt;12&lt;/sup&gt;&lt;/a&gt; which can be written down as &lt;a href=&#34;#fn13&#34; class=&#34;footnote-ref&#34; id=&#34;fnref13&#34;&gt;&lt;sup&gt;13&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\begin{eqnarray*}
L(\theta)=L(\theta; \mathbf{y}) = \prod_{i=1}^n f(\theta; y_i).
\end{eqnarray*}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;And because it is computationally easier to handle (and also numerically
more stable), in practice one generally uses a log-transformation (which
is monotone with respect to maximization) and writes down the
log-likelihood&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\begin{eqnarray*}
l(\theta)=logL(\theta) = \sum_{i=1}^n log f(\theta; y_i).
\end{eqnarray*}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;where,
under independence of our sample, products are turned into
computationally simpler sums. Then the maximum likelihood estimator
(MLE) is the parameter estimator &lt;span class=&#34;math inline&#34;&gt;\(\hat{\mathbf{\theta}}\_{ML}\)&lt;/span&gt; that
maximizes the log-likelihood, i.e.
&lt;span class=&#34;math inline&#34;&gt;\(\hat{\mathbf{\theta}}\_{ML}=\arg\max_\theta L(\theta) = \arg\max_\theta l(\theta).\)&lt;/span&gt;
And because the MLE depends on the specific observations (our sample)
they can be considered as random variables. For inference it is then
usual to look at Wald tests, Lagrange multiplier tests (LM) or
Likelihood ratio (LR) tests. If GLMs are correctly specified, they
inherit all properties of correctly specified ML estimation: efficiency,
asymptotic normality and consistency.&lt;br/&gt;
Here we will not in detail discuss Maximum Likelihood theory but only
write down the relevant Bernoulli likelihood that is used in estimation
for binary response models and assume that the necessary regularity
conditions and correct specifications of the model guarantee that our
MLE is consistent, asymptotically normal and efficient.&lt;br /&gt;
Assuming that the sample is i.i.d the joint distribution for the binary
choice model can be written down as&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\begin{eqnarray*}
Pr(\mathbf{y}|\mathbf{X}) = \prod_{i, y_i = 1} [F(\mathbf{x_i&amp;#39;\beta}] \prod_{i, y_i = 0} [1 - F(\mathbf{x_i&amp;#39;\beta})]
\end{eqnarray*}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;and because the observed &lt;span class=&#34;math inline&#34;&gt;\(y_i\)&lt;/span&gt;’s are the outcome of Bernoulli
experiments the likelihood for a sample of &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; is then&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\begin{eqnarray*}
L(\beta | \mathbf{y, X} = \prod_{i=1}^n [F(\mathbf{x_i\beta}]^{y_i} [1 - F(\mathbf{x_i&amp;#39;\beta}]^{1-y_i}
\end{eqnarray*}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;where &lt;span class=&#34;math inline&#34;&gt;\((.)\)&lt;/span&gt; again stands for either the CDF of the normal or the
logistic distribution. The parameters of this model are then estimated
by numerical methods (e.g. Newton-Raphson Algorithm).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;application-german-health-care-usage-gsoep&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Application: German Health Care Usage (GSOEP)&lt;/h1&gt;
&lt;p&gt;For our empirical application we want to make use of a dataset that is
about German health care usage and originates from the German
Socioeconomic Panel Survey (GSOEP). The sample covers the years 1984-95
and was used in a study by &lt;span class=&#34;citation&#34;&gt;@riphahn:03&lt;/span&gt; that investigated whether the
presence of private insurance had an effect on the utilization (counts)
of physician visits and hospital visits. The dataset is an unbalanced
panel of 7,293 households and among the variables reported are household
income with numerous additional sociodemographic variables including
&lt;code&gt;age&lt;/code&gt;, &lt;code&gt;gender&lt;/code&gt;, &lt;code&gt;education&lt;/code&gt; etc. The number of observations varies from
one to seven (1,525; 1,079; 825; 926; 1,311; 1,000; 887) with a total
number of 27,326 observations.&lt;a href=&#34;#fn14&#34; class=&#34;footnote-ref&#34; id=&#34;fnref14&#34;&gt;&lt;sup&gt;14&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The dataset can be used to assess various research questions with
various econometric models (count data models like Poisson regression,
zero-inflation models or hurdle-models; binary choice models etc.).
Since we want to model binary choices, our variable of interest
(dependent variable) for this application is a binary variable &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; that
indicates whether an individual visited a doctor &lt;em&gt;at all&lt;/em&gt; or not. That
is, from the potential information of counts we have in the dataset our
variable &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; takes on only the value &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; for &lt;span class=&#34;math inline&#34;&gt;\(docvis=0\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; for
&lt;span class=&#34;math inline&#34;&gt;\(docvis=1\)&lt;/span&gt;. From the various socioeconomic variables (covariates) we
decided to use only &lt;code&gt;gender&lt;/code&gt;, &lt;code&gt;age&lt;/code&gt;, &lt;code&gt;age2&lt;/code&gt;, &lt;code&gt;hhinc&lt;/code&gt;, &lt;code&gt;hhkids&lt;/code&gt;, &lt;code&gt;educ&lt;/code&gt;,
&lt;code&gt;married&lt;/code&gt; and &lt;code&gt;working&lt;/code&gt; for the regressions.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/visits.png&#34; /&gt;
&lt;em&gt;Count variable of doctor visits (left), binary variable (right).&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In the Figure above we can see the count variable &lt;code&gt;docvis&lt;/code&gt; in
contrast to the binary variable &lt;code&gt;doc&lt;/code&gt;. The amount of observations that
visited a doctor at least once (i.e. &lt;span class=&#34;math inline&#34;&gt;\(y&amp;gt;0\)&lt;/span&gt;) is larger compared to
observations for which we have &lt;span class=&#34;math inline&#34;&gt;\(y=0\)&lt;/span&gt;. There are a total of 10,135
observations that did &lt;em&gt;not&lt;/em&gt; visit a doctor in contrast to 17,191 that
did. In the next Figure elow we have also plotted the variable &lt;code&gt;healthsat&lt;/code&gt;
across gender for each level (ranging from 0 - 10). However, we have
decided to not use this variable in the regressions.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/healthsat.png&#34; /&gt;
&lt;em&gt;Health satisfaction, coded 0 (low) - 10 (high) by gender.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Apart from the above, we can also have a look at bivariate relationships
between our response and some of the regressors. In particular assessing
the relationship between &lt;code&gt;educ&lt;/code&gt; and &lt;code&gt;age&lt;/code&gt; with our dependent variable in our
Figure below, we see that with increasing education the
tendency to visit a doctor decreases while with increasing age there
seems to be a quadratic effect so that first the tendency to visit a
doctor slightly decreases and then takes up again after the
mid-fourties.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/educage.png&#34; /&gt;
&lt;em&gt;Bivariate relationship between educ and age with doctor visits.&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;models&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Models&lt;/h4&gt;
&lt;p&gt;As mentioned above, the dataset allows a vast array of models to be
estimated. Within the binary choice models we could also make use of the
panel structure of the data at hand. But due to time restrictions in
preparing this project we restricted ourselves to the pooled logit and
probit estimation and can hopefully add the binary models to this
project anytime soon. Both models are estimated with the covariates
&lt;code&gt;gender&lt;/code&gt;, &lt;code&gt;age&lt;/code&gt;, &lt;code&gt;age2&lt;/code&gt;, &lt;code&gt;hhinc&lt;/code&gt;, &lt;code&gt;hhkids&lt;/code&gt;, &lt;code&gt;educ&lt;/code&gt;, &lt;code&gt;married&lt;/code&gt; and
&lt;code&gt;working&lt;/code&gt;.&lt;br/&gt;
The Table below
reports the regression output of these two models. Looking solely at the
sign of the coefficients we see that for &lt;code&gt;gender: female&lt;/code&gt; we have a
higher probability to visit a doctor, for &lt;code&gt;age&lt;/code&gt; there are two effects
(age and age2) where the coefficient for &lt;code&gt;age&lt;/code&gt; is negative and the one
for &lt;code&gt;age2&lt;/code&gt; positive, indicating that the probability to visit a doctor
first decreases with age and then goes up again (though the effects are
fairly small). For &lt;code&gt;hhinc&lt;/code&gt; the effect is almost zero and not
significant, and for &lt;code&gt;hhkids: yes&lt;/code&gt;, &lt;code&gt;educ&lt;/code&gt;, &lt;code&gt;married: yes&lt;/code&gt; and
&lt;code&gt;working: yes&lt;/code&gt; the effects are significantly negative (though only on a
5% significant level for &lt;code&gt;working: yes&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/BinaryChoice.png&#34; /&gt;
&lt;em&gt;Estimation results Logit and Probit.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;interpretation-of-parameters&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Interpretation of Parameters&lt;/h4&gt;
&lt;p&gt;Between logit and probit models, often logit-models are preferred
because, besides the latent variable approach which they have both in
common, the logit-transformation has the advantage that it can be
regarded as a linear model on the log-odds scale, as we have stated
above. By taking expectations, i.e. &lt;span class=&#34;math inline&#34;&gt;\(exp(\mathbf{x_i&amp;#39;\beta})\)&lt;/span&gt;, we get a
model on the odds scale, therefore the coefficients of logistic
regressions can be interpreted in terms of &lt;em&gt;odds&lt;/em&gt;. This approach makes
it easy to compare two groups of subjects if they differ only for the
&lt;span class=&#34;math inline&#34;&gt;\(lth\)&lt;/span&gt; regressor by one unit which then results in &lt;span class=&#34;math inline&#34;&gt;\(exp(\beta_l)\)&lt;/span&gt; and
immediately states the odds ratio, which is the ratio of the respective
odds between the two groups. Relative changes in the odds ratio are then
simply &lt;span class=&#34;math inline&#34;&gt;\(exp(\beta_l) - 1\)&lt;/span&gt;. By this we can immediately interpret
&lt;span class=&#34;math inline&#34;&gt;\(exp(\beta)-1\)&lt;/span&gt; as changes on the odds-scale by looking at the
coefficients from our logit-regression. For small &lt;span class=&#34;math inline&#34;&gt;\(\beta_l\)&lt;/span&gt; we further
have &lt;span class=&#34;math inline&#34;&gt;\(exp({\beta_l})-1 \approx \beta_l\)&lt;/span&gt;, c.p. For the probit model
instead, a direct interpretation of the coefficients like in the logit
model is not possible. Still these considerations don’t tell us
something about probabilities which we actually want to model.&lt;a href=&#34;#fn15&#34; class=&#34;footnote-ref&#34; id=&#34;fnref15&#34;&gt;&lt;sup&gt;15&lt;/sup&gt;&lt;/a&gt; For
the remainder we will foremost focus on the interpretation of the
logit-model (due to its interpretation in terms of odds) noting that in
terms of predicted probabilities the two models are virtually
equivalent.&lt;/p&gt;
&lt;p&gt;Taking a step towards probabilities and how they are affected by changes
in the regressors, things become slightly more involved than in the CLM.
First of all, the estimated coefficients can be used to calculate the
respective probabilities for a certain linear predictor &lt;span class=&#34;math inline&#34;&gt;\(\eta\)&lt;/span&gt;, ie. for
every individual in the dataset with certain characteristics there
exists a corresponding (success) probability that can be computed by
simply evaluating
&lt;span class=&#34;math inline&#34;&gt;\(\hat{\mathbf{P}}r(y_i|\mathbf{x_i&amp;#39;}) = F(\mathbf{x_i&amp;#39;\hat{\mathbf{\mathbf{\beta}}}})\)&lt;/span&gt;.
This can be, for example, used to calculate an average success
probability across all individuals (which is of course not very
informative as it summarizes a lot of information in the dataset). In
our case the mean of the fitted probabilities (predicted probabilities)
is about 0.63 (for both logit and probit). In R the &lt;code&gt;predict&lt;/code&gt;-function
can be used to compute predictions of the response
&lt;span class=&#34;math inline&#34;&gt;\(\hat{\mathbf{\mu}}_i = \hat{\mathbf{P}}r(y_i|\mathbf{x_i&amp;#39;})\)&lt;/span&gt; where the
default is the prediction of the linear predictor. Comparing, for
example, an individual with
&lt;code&gt;gender=male, age=44, hhinc=3500, kids=yes, educ=18, married=yes, working=yes&lt;/code&gt;
to a person with the exact same characteristics &lt;em&gt;except&lt;/em&gt; that we set
gender=female we get a predicted probability to visit a doctor of 0.4731
as compared to 0.6123, respectively.&lt;a href=&#34;#fn16&#34; class=&#34;footnote-ref&#34; id=&#34;fnref16&#34;&gt;&lt;sup&gt;16&lt;/sup&gt;&lt;/a&gt; The &lt;code&gt;predict&lt;/code&gt;-function thereby
takes the data and multiplies the vector of coefficients with the design
matrix. By setting &lt;code&gt;type = &amp;quot;response&amp;quot;&lt;/code&gt; the linear predictors are then
automatically sent through the inverse logit link function
&lt;span class=&#34;math inline&#34;&gt;\(\Lambda(\eta)\)&lt;/span&gt; that evaluates the corresponding probability.&lt;a href=&#34;#fn17&#34; class=&#34;footnote-ref&#34; id=&#34;fnref17&#34;&gt;&lt;sup&gt;17&lt;/sup&gt;&lt;/a&gt; From
these calculated probabilities it then possible to get back to the odds
by plugging the calculated probabilities into the logit-link function or
&lt;span class=&#34;math inline&#34;&gt;\(exp(logit-link)\)&lt;/span&gt; function for the log-odds). So for a male person with
the above stated characteristics the probability to visit a doctor are
0.8987 times the probability to not visit a doctor whereas for a female
person the odds to visit a doctor are 1.578 times the probability to not
visit a doctor.&lt;/p&gt;
&lt;p&gt;For our odds-ratio (as outlined in the previous paragraph) we would get
&lt;span class=&#34;math inline&#34;&gt;\(exp(0.564) = 1.758\)&lt;/span&gt;, meaning that the probability of a female person
with a specific combination of covariates to visit a doctor is 1.758
times higher than the odds of a male person with exactly the same
covariate values (i.e., the regressors just differ by the &lt;span class=&#34;math inline&#34;&gt;\(lth\)&lt;/span&gt;
regressor by one unit!). And the corresponding relative change in the
odds ratio is then &lt;span class=&#34;math inline&#34;&gt;\(0.7577 \approx 76\%\)&lt;/span&gt;, meaning that the odds to visit
a doctor increase by 70% by changing the &lt;span class=&#34;math inline&#34;&gt;\(lth\)&lt;/span&gt; regressor from &lt;code&gt;male&lt;/code&gt; to
&lt;code&gt;female&lt;/code&gt;.&lt;a href=&#34;#fn18&#34; class=&#34;footnote-ref&#34; id=&#34;fnref18&#34;&gt;&lt;sup&gt;18&lt;/sup&gt;&lt;/a&gt; Similarly we can state that if education increases by one
unit we expect the odds to visit a doctor to decrease by about
&lt;span class=&#34;math inline&#34;&gt;\(exp(-0.023) - 1 = -0.02274 = -2.274\%\)&lt;/span&gt;, all else equal. Similarly
having kids under 16 years in the household decreases the odds to visit
a doctor by about 15%, being married increases them by about 14% and
working decreases them by about 7% respectively. One feature of the
calculation and report of odds is that they are still less well
interpretable than probabilities (which are our primary interest).&lt;br /&gt;
Alternatively it would also be possible to calculate the probability at
the mean regressors which results in
&lt;span class=&#34;math inline&#34;&gt;\(\hat{\mathbf{P}}r(y_i|\mathbf{\hat{\mathbf{\mathbf{x}}}_i&amp;#39;}) = F(\mathbf{\hat{\mathbf{\mathbf{x}}}_i&amp;#39;\hat{\mathbf{\mathbf{\beta}}}})\)&lt;/span&gt;.
In our case the predicted probability at the mean regressors across the
sample are 0.46 (logit) and 0.68 (probit) respectively.&lt;/p&gt;
&lt;p&gt;In usual linear models the expectation &lt;span class=&#34;math inline&#34;&gt;\(E(y_i|\mathbf{x_i})\)&lt;/span&gt; that we
want to model is a &lt;em&gt;linear function&lt;/em&gt; in the parameters, therefore every
single parameter could be directly interpreted as a marginal effect on
the expectation, ceteris paribus. An important difference of binary
choice models to the CLM is that partial derivatives of the expectation,
i.e. marginal effects, are not constant because they not only depend on
the parameter under consideration but on the entire linear predictor
that, of course, differs from person to person. This means that marginal
effects result in&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\begin{eqnarray*}
\frac{\partial P(y_i = 1|\mathbf{x_i&amp;#39;})}{\partial x_h} = \frac{\partial F(\mathbf{x_i&amp;#39;\beta})}{\partial\mathbf{x_h}} = f(\mathbf{x_i&amp;#39;\beta}) \cdot \beta_h
\end{eqnarray*}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;where &lt;span class=&#34;math inline&#34;&gt;\(f(.)\)&lt;/span&gt; now stands for the derivative of either the logistic or
normal CDF, i.e. the corresponding &lt;em&gt;density&lt;/em&gt;. The factor &lt;span class=&#34;math inline&#34;&gt;\(f(.)\)&lt;/span&gt; is
always positive, therefore the sign of the corresponding &lt;span class=&#34;math inline&#34;&gt;\(f\beta_h\)&lt;/span&gt;
directly shows in which direction the expectation changes. Due to the
non-linearity he &lt;em&gt;size&lt;/em&gt; of a marginal effect crucially depends on the
actual starting value we are considering when assessing the effect of
the change of the &lt;span class=&#34;math inline&#34;&gt;\(lth\)&lt;/span&gt; regressor on the predicted probability.
Depending on the individual and its characteristics (that is
incorporated in the linear predictor), the marginal effect can be larger
or smaller. Due to this, it is common to report &amp;quot;typical&amp;quot; effects,
namely &lt;em&gt;average&lt;/em&gt; marginal effects, similar to above where we reported
average predicted probabilities and predicted probabilities at mean
regressors. These can be calculated either by taking the mean over all
observations (i.e. calculate the marginal effect for each observation
and than take the mean) &lt;em&gt;or&lt;/em&gt; calculate the marginal effect at the mean
of the regressors. In the former case we average across the
probablity-scale, in the later across the regressor-scale, therefore
also the results will differ.&lt;br/&gt;
Because average probabilities as well as average marginal effects always
merge a lot of information in one single number, their usefulness in
terms of representation of the information in the data is debatable.
Therefore it is often better to evaluate marginal probability effects by
comparing groups in the data (here: married vs. not married, working
vs. not working). Another issue is that software packages to compute
marginal effects often don’t compute them correctly when there are
interactions or polynomials in the model.&lt;/p&gt;
&lt;p&gt;We have seen that both, odds and average (marginal) probabilities
(effects) are either difficult to interpret or not very representative
for the information in the dataset. Therefore, another very helpful tool
to assess the information in the data is to fix all but the &lt;span class=&#34;math inline&#34;&gt;\(lth\)&lt;/span&gt;
regressor at their mean and then evaluate the marginal probability
effects for the steps in the &lt;span class=&#34;math inline&#34;&gt;\(lth\)&lt;/span&gt; regressor or directly plot the
predicted probability against the entire range of values of the &lt;span class=&#34;math inline&#34;&gt;\(lth\)&lt;/span&gt;
regressor. We want to show here the latter for &lt;code&gt;educ&lt;/code&gt; which are
so-called &amp;quot;effect-plots&amp;quot;. Such plots can be either generated by going
step by step through the respective calculations, setting up a
design-matrix where all but one regressor are fixed to a &amp;quot;typical&amp;quot;
value we want to investigate and then let the &lt;span class=&#34;math inline&#34;&gt;\(lth\)&lt;/span&gt; regressor &amp;quot;run&amp;quot;
and see how the predicted probabilities change. That is, we look how
changes in one regressor, everything else fixed, translate into effects
on probabilities. So instead of looking at marginal effects (which are
the derivative of our expectation = success probability) it is often
more convenient to directly look at the probabilities themselves. We
have done this to assess the probability to visit a doctor depending on
education while keeping all other values fixed to either their mean (for
numeric data) or a &amp;quot;typical&amp;quot; value (for dummies). This exercise was
then replicated for the same set of values except that we changed the
status of &lt;code&gt;working&lt;/code&gt; from &amp;quot;yes&amp;quot; to &amp;quot;no&amp;quot; (red line in the plot). The
result can be seen in
Figure below where we see that if education runs
from 7 to 18, the probability to visit a doctor decreases from slightly
above 57% to about 51%. In between the function is almost linear. By
changing &lt;code&gt;working&lt;/code&gt; from &amp;quot;yes&amp;quot; to &amp;quot;no&amp;quot; shifts our line so that
persons that don’t work have a higher probability (but still decreasing
for increasing education) across the entire range as compared to persons
that do work.&lt;a href=&#34;#fn19&#34; class=&#34;footnote-ref&#34; id=&#34;fnref19&#34;&gt;&lt;sup&gt;19&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/educeffect.png&#34; /&gt;
&lt;em&gt;Effect of education (everything else fixed at mean regressor); red line: changing “working”
from “yes” to “no”.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;If we want to apply the procedure above to every covariate one at a time
we can use the &lt;code&gt;effects&lt;/code&gt;-package in R that does exactly what we did
automatically and generates the respective effect-plots. For this it is
important to slightly adapt the function-call for the &amp;quot;glm&amp;quot; so that R
recognizes that &lt;code&gt;age&lt;/code&gt; and &lt;code&gt;age2&lt;/code&gt; belong together. The Figure below shows the resulting output.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/alleffects.png&#34; /&gt;
&lt;em&gt;Effect of education (everything else fixed at mean regressor); red line: changing “working”
from “yes” to “no”.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;To read these plots it is important to recognize that in each plot of
the respective regressor all other covariates are fixed at their mean
(or &amp;quot;typical&amp;quot;) values. By this it is possible to isolate the effects
of covariates on the predicted probabilities and analyze them one at a
time. We see a clear difference in the probability to visit a doctor
regarding &lt;code&gt;gender&lt;/code&gt;, a quadratic age-effect whereby the probability to
visit a doctor increases with age from about 37 onwards. Household
income (&lt;code&gt;hhinc&lt;/code&gt;) reflects the insignificant effect we already saw in the
regression output whereas having kids that are younger than 16
(&lt;code&gt;hhkids&lt;/code&gt;) interestingly corresponds to a slightly lower probability to
visit a doctor. Education has the negative (almost linear effect) we
already showed above and married individuals have, ceteris paribus, a
slightly higher probability to visit a doctor whereas working
individuals have a slightly lower probability to do so. Our results show
that the corresponding differences in probabilities are most pronounced
for the &lt;code&gt;age&lt;/code&gt;-effect whereas for the other covariates the differences
are fairly moderate.&lt;br /&gt;
We want to emphasize again that for our results so far we ignored the
panel-structure in the data. Our pooled logit and probit regressions are
therefore just a starting point for more sophisticated binary choice
panel data models.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;goodness-of-fit&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Goodness of Fit&lt;/h4&gt;
&lt;p&gt;To assess the goodness of fit of our models there are various tools and
procedures available. One option is the so-called McFadden &lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;. In
comparison to linear models where the &lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt; is a figure that reports the
proportion of the total variation in the dependent variable that is
explained by the model, this variance decomposition does not work for
logit/probit models. Instead, a substitute is a log-likelihood
comparison of the full model (with all regressors) with a constant-only
model but it cannot be interpreted as the &lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt; in linear models. The
McFadden &lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt; is thereby calculated as&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\begin{eqnarray*}
0 \leq R_{McFadden}^2 = 1- \frac{logLik_{unrestricted}}{logLik_{restricted}} \leq 1.
\end{eqnarray*}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;For the pseudo &lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt; a value near one just indicates a better model fit
than a value near zero. This is because if our explanatory variables
have no explanatory power at all we should get
&lt;span class=&#34;math inline&#34;&gt;\(logLik_{unrestricted} = logLik_{restricted}\)&lt;/span&gt; and the pseudo-&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt; would
then become 0. In the extreme case where the model perfectly explains
the dependent variable, the log-likelihood would be zero and the
pseudo-&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt; would be 1.&lt;a href=&#34;#fn20&#34; class=&#34;footnote-ref&#34; id=&#34;fnref20&#34;&gt;&lt;sup&gt;20&lt;/sup&gt;&lt;/a&gt; In our case the corresponding values for
the McFadden-&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;s are &lt;span class=&#34;math inline&#34;&gt;\(0.0368\)&lt;/span&gt; for the logit and &lt;span class=&#34;math inline&#34;&gt;\(0.03661\)&lt;/span&gt; for the
probit model.&lt;/p&gt;
&lt;p&gt;Another helpful visual tool are so-called &amp;quot;confusion matrices&amp;quot; that
check the quality of the predictions in-sample. They are contingency
tables of observed vs. predicted values where by choosing some cutoff
probability &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; calculated probabilities are considered a &amp;quot;success&amp;quot; or
a &amp;quot;failure&amp;quot;. The table summarizes correct predictions on the main
diagonal and incorrect predictions on the off-diagonal. These
off-diagonal values can either be &amp;quot;false negatives&amp;quot;, i.e. cases that
were falsely predicted to not visit a doctor while they actually did and
&amp;quot;false positives&amp;quot;, i.e. cases that were falsely predicted to visit a
doctor while they actually didn’t. Having a look at the
Table,
we see that a fairly large amount of cases could be predicted accurately
but unfortunately also the false negative rate is quite high with 8299
cases.&lt;a href=&#34;#fn21&#34; class=&#34;footnote-ref&#34; id=&#34;fnref21&#34;&gt;&lt;sup&gt;21&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/confmat.png&#34; /&gt;
&lt;em&gt;Confusion Table for the Logit Model.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The last thing we did was to perform a Likelihood-Ratio test that
suggests that our model is a significant improvement over a
constant-only model.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;appendix&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Appendix&lt;/h1&gt;
&lt;div id=&#34;r-code&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;R-Code&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Econometrics Project, Binary Choice Models
#Marcel Kropp
#19.6.2014

dev.off()
## inverse logit and probit
x &amp;lt;- -47:47/10
par(mar = c(6, 6, 3, 3), mfrow = c(1, 1))
#quartz()
plot(x, pnorm(x), type = &amp;quot;l&amp;quot;, lwd = 2,
     xlab = expression(eta), ylab = expression(g(eta)^-1),
     main = &amp;quot;&amp;quot;, col = &amp;quot;brown1&amp;quot;, cex.lab = 0.8, cex.axis = 0.8)
lines(x, plogis(x), lwd = 2, col = &amp;quot;green4&amp;quot;)
lines(x, pnorm(x, sd = dnorm(0)/dlogis(0)), lwd = 2, lty = 2)

legend(&amp;quot;topleft&amp;quot;, c(&amp;quot;logistic&amp;quot;, &amp;quot;normal&amp;quot;, &amp;quot;normal (adj)&amp;quot;),
       lty = c(1, 1, 2), lwd = 2,
       col = c(&amp;quot;green4&amp;quot;, &amp;quot;brown1&amp;quot;, &amp;quot;black&amp;quot;),
       bty = &amp;quot;n&amp;quot;, cex=0.8)




#############
## preliminaries            
#############
options(prompt = &amp;quot;R&amp;gt;&amp;quot;, continue = &amp;quot;+&amp;quot;, width = 64,
        digits = 4, show.signif.stars = TRUE)
#set.seed(1071)
getwd()
setwd(&amp;quot;/Users/...&amp;quot;)



#############
## original dataset            
#############
#original dataset is rather huge;
#27,326 Observations
#1 to 7 years, panel
#7,293 households observed
#The number of observations for a certain individual ranges from 1 to 7.
#Frequencies are: 1=1525, 2=2158, 3=825, 4=926, 5=1051, 6=1000, 7=987

#Here we list the variables that can be found in the complete dataset;
#The variables we used for our analysis are in CAPITAL LETTERS.

#variables:
#   ID...........person ID-number
#   FEMALE.......female = 1; male = 0
#   YEAR.........year of observation
#   AGE..........age in years
#   hsat.........health satisfaction,
#                     coded 0 (low) - 10 (high);
#                     Note, this variable has 40 coding errors.
#                     Variable NEWHSAT below fixes them.
#   handdum......handicapped = 1; otherwise = 0
#   handper......degree of handicap in percent (0 - 100)
#   DOCTOR.......1 if Number of doctor visits &amp;gt; 0; otherwise = 0             
#   hospital.....1 if Number of hospital visits &amp;gt; 0; otherwise = 0   
#   HHNINC.......household nom. month. netincome in German marks/10000
#   HHKIDS.......children under age 16 in the household = 1; otherwise = 0
#   EDUC.........years of schooling
#   MARRIED......married = 1; otherwise = 0
#   haupts.......highest degree is Hauptschul degree = 1; otherwise = 0
#   reals........highest degree is Realschul degree = 1; otherwise = 0
#   fachhs.......highest degree is Polytechnical degree = 1; otherwise = 0
#   abitur.......highest degree is Abitur = 1; otherwise = 0
#   univ.........highest degree is university degree = 1; otherwise = 0
#   WORKING......employed = 1; otherwise = 0
#   bluec........blue collar employee = 1; otherwise = 0
#   whitec.......white collar employee = 1; otherwise = 0
#   self.........self employed = 1; otherwise = 0
#   beamt........civil servant = 1; otherwise = 0
#   DOCVIS.......number of doctor visits in last three months
#   hospvis......number of hospital visits in last calendar year
#   public.......insured in public health insurance = 1;
#                otherwise = 0
#   addon........insured by add-on insurance = 1; otherswise = 0

#Notes: In the applications in the text of Greene, the following additional
#variables are used:
#   numobs.......Number of observations for this person.
#                Repeated in each row of data.
#   NEWHSAT = hsat; 40 observations on HSAT recorded between
#                   6 and 7 were changed to 7.




#############
## read in the dataset            
#############

if(!file.exists(&amp;quot;healthcare.rda&amp;quot;)) {
  url &amp;lt;- &amp;quot;http://people.stern.nyu.edu/wgreene/Econometrics/healthcare.csv&amp;quot;
  download.file(url, destfile = &amp;quot;healthcare.csv&amp;quot;)
  ##read in the data into R
  healthcare &amp;lt;- read.csv(&amp;quot;healthcare.csv&amp;quot;, header = TRUE)

  ##adjust dataset
  healthcare &amp;lt;- subset(healthcare, select = c(id, DOCTOR, DOCVIS, NEWHSAT,
                                   EDUC, HHNINC, HHKIDS, AGE,
                                   FEMALE, MARRIED, WORKING,
                                   YEAR))
  #retransform the income variable
  healthcare$HHNINC &amp;lt;- (healthcare$HHNINC)*10000
  #View(healthcare)

  #further transformations; relabelling, appropriate types
  healthcare &amp;lt;- with(healthcare, data.frame(
    &amp;quot;id&amp;quot; = id,
    &amp;quot;doc&amp;quot; = factor(DOCTOR, levels = c(0, 1),
                   labels = c(&amp;quot;no&amp;quot;, &amp;quot;yes&amp;quot;)),
    &amp;quot;docvis&amp;quot; = DOCVIS,
    &amp;quot;hsat&amp;quot; = NEWHSAT,
    &amp;quot;educ&amp;quot; = EDUC,
    &amp;quot;hhinc&amp;quot; = HHNINC,
    &amp;quot;hhkids&amp;quot; = factor(HHKIDS, levels = c(0, 1), labels = c(&amp;quot;no&amp;quot;, &amp;quot;yes&amp;quot;)),
    &amp;quot;age&amp;quot; = AGE,
    &amp;quot;gender&amp;quot; = factor(FEMALE, levels = c(0, 1), labels = c(&amp;quot;male&amp;quot;, &amp;quot;female&amp;quot;)),
    &amp;quot;married&amp;quot; = factor(MARRIED, levels = c(0, 1), labels = c(&amp;quot;no&amp;quot;, &amp;quot;yes&amp;quot;)),
    &amp;quot;working&amp;quot; = factor(WORKING, levels = c(0, 1), labels = c(&amp;quot;no&amp;quot;, &amp;quot;yes&amp;quot;)),
    &amp;quot;year&amp;quot; = YEAR
  ))
  ## save the file in .rda format
  save(healthcare, file = &amp;quot;healthcare.rda&amp;quot;)
} else {
  load(&amp;quot;healthcare.rda&amp;quot;)
}


#a few separate bivariate plots
dev.off()
plot(doc ~ married, data = healthcare)
plot(doc ~ hhkids, data = healthcare)
plot(doc ~ hhinc, data = healthcare)
plot(doc ~ gender, data = healthcare)
plot(doc ~ married, data = healthcare)
plot(doc ~ working, data = healthcare)
plot(doc ~ age, data = healthcare)


#our variable of interest is the binary choice:
#visited doctor (yes/no)
barplot(table(healthcare$doc),
        xlab = &amp;quot;Individual visited doctor in past year&amp;quot;,
        ylab = &amp;quot;absolute frequency&amp;quot;)

#comparison reveals of count (docvis) and binary variable (doc)
layout(matrix(c(1, 2), nrow = 1), widths = c(1, 0.5))
matrix(c(1, 2), nrow = 1)
par(mar = c(4.1, 4.1, 2, 2))
plot(table(healthcare$docvis), main = &amp;quot;&amp;quot;, xlab = &amp;quot;count variable (visits)&amp;quot;,
                         cex.lab = 0.7, cex.axis = 0.7, ylab = &amp;quot;frequency&amp;quot;)
#then we set the margins for the second graph
par(mar = c(4.1, 0.5, 2.1, 0.9))
barplot(table(healthcare$doc), xlab = &amp;quot;binary variable (visits)&amp;quot;,
                         cex.lab = 0.7, cex.axis = 0.7)
table(healthcare$doc)


#health satisfaction across gender
attach(healthcare)
par(mfrow = c(1, 1))
table &amp;lt;- table(gender, hsat)
#reformat the data to be in long format
library(&amp;quot;reshape2&amp;quot;)
table.long &amp;lt;- melt(table, id.vars = &amp;quot;gender&amp;quot;)
table.long
#use ggplot2 to create the plot
#install.packages(&amp;quot;ggplot2&amp;quot;)
library(&amp;quot;ggplot2&amp;quot;)
ggplot(table.long, aes(x=hsat, y=value, fill = factor(gender)))+
  geom_bar(stat=&amp;quot;identity&amp;quot;, position=&amp;quot;dodge&amp;quot;)+xlab(&amp;quot;&amp;quot;)+ylab(&amp;quot;Frequency&amp;quot;)


#use adapted dataset &amp;quot;healthcare1&amp;quot; for regressions
head(healthcare)
healthcare1 &amp;lt;- healthcare
healthcare1$docvis &amp;lt;- NULL
#healthcare1$hsat &amp;lt;- NULL
dev.off()
par(mfrow = c(1, 2))
plot(doc ~ educ, data = healthcare1, ylevels = 2:1, ylab = &amp;quot;&amp;quot;, main = &amp;quot;&amp;quot;)
aux &amp;lt;- glm(doc ~ educ + I(educ^2), data = healthcare1, family = binomial)
edu &amp;lt;- sort(unique(healthcare1$educ))
prop &amp;lt;- ecdf(healthcare1$educ)(edu)
lines(predict(aux, newdata = data.frame(educ = edu),
              type = &amp;quot;response&amp;quot;) ~ prop, col = 2, lwd = 2)

plot(doc ~ age, data = healthcare1, ylevels = 2:1, ylab = &amp;quot;&amp;quot;)
aux &amp;lt;- glm(doc ~ age + I(age^2), data = healthcare1, family = binomial)
ag &amp;lt;- sort(unique(healthcare1$age))
prop &amp;lt;- ecdf(healthcare1$age)(ag)
lines(predict(aux, newdata = data.frame(age = ag),
              type = &amp;quot;response&amp;quot;) ~ prop, col = 2, lwd = 2)

#############
## models
#############
logit &amp;lt;- glm(doc ~ gender + age + I(age^2) + hhinc + hhkids + educ +
                   married + working,
                   family = binomial(link = &amp;quot;logit&amp;quot;),
                   data = healthcare1)
summary(logit)                               
probit &amp;lt;- glm(doc ~ gender + age + I(age^2) + hhinc + hhkids + educ +
                    married + working,
                    family = binomial(link = &amp;quot;probit&amp;quot;),
                    data = healthcare1)
summary(probit)
#Coefficients for probit and logit should differ by a factor of approx. 1.6
cbind(coef(logit), coef(probit)*1.6)
#install.packages(&amp;quot;memisc&amp;quot;)
library(&amp;quot;memisc&amp;quot;)
mtable(logit, probit)
toLatex(mtable(logit, probit))



#############
## predictions and
## interpretations
#############
#use predict function to compute predicted probabilities
predict(logit, data.frame(gender = &amp;quot;male&amp;quot;, age = 44, hhinc = 3500, hhkids = &amp;quot;yes&amp;quot;,
                          educ = 18, married = &amp;quot;yes&amp;quot;, working = &amp;quot;yes&amp;quot;),
                          type = &amp;quot;response&amp;quot;)
predict(logit, data.frame(gender = &amp;quot;female&amp;quot;, age = 44, hhinc = 3500, hhkids = &amp;quot;yes&amp;quot;,
                          educ = 18, married = &amp;quot;yes&amp;quot;, working = &amp;quot;yes&amp;quot;),
                          type = &amp;quot;response&amp;quot;)
predict(probit, data.frame(gender = &amp;quot;male&amp;quot;, age = 44, hhinc = 3500, hhkids = &amp;quot;yes&amp;quot;,
                          educ = 18, married = &amp;quot;yes&amp;quot;, working = &amp;quot;yes&amp;quot;),
                          type = &amp;quot;response&amp;quot;)
predict(probit, data.frame(gender = &amp;quot;female&amp;quot;, age = 44, hhinc = 3500, hhkids = &amp;quot;yes&amp;quot;,
                          educ = 18, married = &amp;quot;yes&amp;quot;, working = &amp;quot;yes&amp;quot;),
                          type = &amp;quot;response&amp;quot;)
#the relation between link-scale and probability scale can be assessed via
predict(logit, data.frame(gender = &amp;quot;male&amp;quot;, age = 44, hhinc = 3500, hhkids = &amp;quot;yes&amp;quot;,
                          educ = 18, married = &amp;quot;yes&amp;quot;, working = &amp;quot;yes&amp;quot;),
                          type = &amp;quot;link&amp;quot;)
mu1 &amp;lt;- exp(-0.1077)/(1+exp(-0.1077))
mu1 #is the same value that we got when setting type = &amp;quot;response&amp;quot;!

#equivalently
predict(logit, data.frame(gender = &amp;quot;female&amp;quot;, age = 44, hhinc = 3500, hhkids = &amp;quot;yes&amp;quot;,
                          educ = 18, married = &amp;quot;yes&amp;quot;, working = &amp;quot;yes&amp;quot;),
                          type = &amp;quot;link&amp;quot;)
mu2 &amp;lt;- exp(0.4568)/(1+exp(0.4568))
mu2

#a male person with the above covariates the probability to visit a
#doctor (yes/no) is 0.8987 times the probability to not visit a doctor.
mu1/(1-mu1) #odds
log(mu1/(1-mu1)) #log Chancen

#a female person with the above covariates the probability to visit a
#doctor (yes/no) is 1.578 times the probability to not visit a doctor.
mu2/(1-mu2) #odds
log(mu2/(1-mu2)) #log Chancen

#odds ratios (ratio of odds for female vs odds for male)
exp(0.564)
exp(0.564) - 1

#similarly:
#education
exp(-0.023) - 1

exp(-0.166) - 1 #hhkids
exp(0.150) -1 #married
exp(-0.073) - 1 #working

#all at once
as.numeric(round(exp(coef(logit)) - 1, 2))


#age is more difficult to interpret due to the quadratic term!
#also hhinc is not reported because it is insignificant and
#virtually zero!



#average predicted probabilities:
mean(predict(logit, type = &amp;quot;response&amp;quot;))
mean(predict(probit, type = &amp;quot;response&amp;quot;))


#predicted probability evaluated at mean regressors
(pred.l &amp;lt;- as.numeric(plogis
         (coef(logit)[1] +
         coef(logit)[2]*(length(gender[gender == &amp;quot;female&amp;quot;])/length(gender) +
         coef(logit)[3]*mean(healthcare1$age) +
         coef(logit)[5]*mean(healthcare1$hhinc) +
         coef(logit)[6]*(length(hhkids[hhkids == &amp;quot;yes&amp;quot;])/length(hhkids)) +
         coef(logit)[7]*mean(healthcare1$educ) +
         coef(logit)[8]*(length(married[married == &amp;quot;yes&amp;quot;])/length(married)) +
         coef(logit)[9]*(length(working[working == &amp;quot;yes&amp;quot;])/length(working))))))
(pred.p &amp;lt;- as.numeric(pnorm
         (coef(probit)[1] +
         coef(probit)[2]*(length(gender[gender == &amp;quot;female&amp;quot;])/length(gender) +
         coef(probit)[3]*mean(healthcare1$age) +
         coef(probit)[5]*mean(healthcare1$hhinc) +
         coef(probit)[6]*(length(hhkids[hhkids == &amp;quot;yes&amp;quot;])/length(hhkids)) +
         coef(probit)[7]*mean(healthcare1$educ) +
         coef(probit)[8]*(length(married[married == &amp;quot;yes&amp;quot;])/length(married)) +
         coef(probit)[9]*(length(working[working == &amp;quot;yes&amp;quot;])/length(working))))))


#calculation for effects for education &amp;quot;by hand&amp;quot;
x.matrix &amp;lt;- model.matrix(logit)
head(x.matrix)

xbar &amp;lt;- colMeans(x.matrix[, 2:9])
xbar
class(xbar)

xbar &amp;lt;- as.data.frame(t(xbar))
xbar

names(xbar)[1] &amp;lt;- &amp;quot;gender&amp;quot;
names(xbar)[5] &amp;lt;- &amp;quot;hhkids&amp;quot;
names(xbar)[7] &amp;lt;- &amp;quot;married&amp;quot;
names(xbar)[8] &amp;lt;- &amp;quot;working&amp;quot;
xbar
class(xbar)

xbar$gender &amp;lt;- replace(xbar$gender, xbar$gender==&amp;quot;0.47877479323721&amp;quot;, &amp;quot;male&amp;quot;)
xbar$hhkids &amp;lt;- replace(xbar$hhkids, xbar$hhkids==&amp;quot;0.402730000731904&amp;quot;, &amp;quot;no&amp;quot;)
xbar$married &amp;lt;- replace(xbar$married, xbar$married==&amp;quot;0.758618165849374&amp;quot;, &amp;quot;yes&amp;quot;)
xbar$working &amp;lt;- replace(xbar$working, xbar$working==&amp;quot;0.677047500548928&amp;quot;, &amp;quot;yes&amp;quot;)
xbar

predict(logit, xbar, type = &amp;quot;response&amp;quot;)
#fixing all covariates at their mean, the &amp;quot;typical&amp;quot; person has a probability to
#visit a doctor of about 55%.

#replicate the data
xbar &amp;lt;- do.call(&amp;quot;rbind&amp;quot;, replicate(111, xbar, simplify = FALSE))
head(xbar)
summary(xbar)
#then instead of having the mean value for &amp;quot;education&amp;quot; in every row we let
#education run from 7 to 18 in steps of 0.1
educ &amp;lt;- seq(7, 18, by = 0.1)
xbar$educ &amp;lt;- educ
xbar
#all other values are fixed on a &amp;quot;typical&amp;quot; value

#then we can say again
predict(logit, xbar, type = &amp;quot;response&amp;quot;)
#and calculated probabilities for a running value of &amp;quot;education&amp;quot;

xbar$prob &amp;lt;- predict(logit, xbar, type = &amp;quot;response&amp;quot;)
xbar
#then we can write
dev.off()
plot(prob ~ educ, data = xbar, type = &amp;quot;l&amp;quot;, ylim = c(0.51,0.61), cex.axis = 0.7,
     cex.lab = 0.7)
#and see that if education runs from 7 to 18, the probability to visit a doctor
#decreases from slightly above 57% to about 51%. In between the function is almost
#linear!


#the whole calculations can now be repeated for &amp;quot;working = no&amp;quot; and the line be
#added to our plot via
x.matrix &amp;lt;- model.matrix(logit)
head(x.matrix)

xbar &amp;lt;- colMeans(x.matrix[, 2:9])
xbar
class(xbar)

xbar &amp;lt;- as.data.frame(t(xbar))
xbar

names(xbar)[1] &amp;lt;- &amp;quot;gender&amp;quot;
names(xbar)[5] &amp;lt;- &amp;quot;hhkids&amp;quot;
names(xbar)[7] &amp;lt;- &amp;quot;married&amp;quot;
names(xbar)[8] &amp;lt;- &amp;quot;working&amp;quot;
xbar
class(xbar)

xbar$gender &amp;lt;- replace(xbar$gender, xbar$gender==&amp;quot;0.47877479323721&amp;quot;, &amp;quot;male&amp;quot;)
xbar$hhkids &amp;lt;- replace(xbar$hhkids, xbar$hhkids==&amp;quot;0.402730000731904&amp;quot;, &amp;quot;no&amp;quot;)
xbar$married &amp;lt;- replace(xbar$married, xbar$married==&amp;quot;0.758618165849374&amp;quot;, &amp;quot;yes&amp;quot;)
xbar$working &amp;lt;- replace(xbar$working, xbar$working==&amp;quot;0.677047500548928&amp;quot;, &amp;quot;no&amp;quot;)
xbar

predict(logit, xbar, type = &amp;quot;response&amp;quot;)
xbar &amp;lt;- do.call(&amp;quot;rbind&amp;quot;, replicate(111, xbar, simplify = FALSE))
head(xbar)
summary(xbar)
educ &amp;lt;- seq(7, 18, by = 0.1)
xbar$educ &amp;lt;- educ
xbar
predict(logit, xbar, type = &amp;quot;response&amp;quot;)
xbar$prob &amp;lt;- predict(logit, xbar, type = &amp;quot;response&amp;quot;)
xbar
lines(prob ~ educ, data = xbar, type = &amp;quot;l&amp;quot;, col = &amp;quot;red&amp;quot;)
legend(&amp;quot;bottomleft&amp;quot;, c(&amp;quot;working = yes&amp;quot;, &amp;quot;working = no&amp;quot;),
       lty = c(1, 1), lwd = 2, col = c(&amp;quot;black&amp;quot;, &amp;quot;red&amp;quot;), bty = &amp;quot;n&amp;quot;, cex=0.7)
#and see that if education runs from 7 to 18, the probability to visit a doctor
#decreases from slightly above 57% to about 51%. In between the function is almost
#linear!


#effects plots with the effects-package
#install.packages(&amp;quot;effects&amp;quot;)
library(&amp;quot;effects&amp;quot;)
#to use the effects plot we restrict ourselves to the logit-model and reestimate
#it so that R understands that &amp;quot;age&amp;quot; and &amp;quot;age^2&amp;quot; belong to one and the same
#variable. this is done via &amp;quot;poly()&amp;quot;
logit.2 &amp;lt;- glm(doc ~ gender + poly(age, 2, raw = TRUE) + hhinc + hhkids +
                   educ + married + working,
                   family = binomial(link = &amp;quot;logit&amp;quot;),
                   data = healthcare1)
logit.eff &amp;lt;- allEffects(logit.2)
plot(logit.eff, aks = FALSE, rescale.axis = FALSE, cex.axis = 0.7, cex.lab = 0.7,
     main = &amp;quot;&amp;quot;, rug = FALSE)


#############
## goodness of fit
#############
#McFadden R^2
#Calculations:
#evaluating the constant-only model:
logit0 &amp;lt;- glm(doc ~ 1, data = healthcare1, family = binomial(link = &amp;quot;logit&amp;quot;))
logLik(logit0)
probit0 &amp;lt;- glm(doc ~ 1, data = healthcare1, family = binomial(link = &amp;quot;probit&amp;quot;))
logLik(probit0)

#the log-likelihood values from the unrestricted (full) model from above:
logLik(logit)
logLik(probit)


rsq.logit &amp;lt;- as.numeric(1-(logLik(logit)/logLik(logit0)))
rsq.logit
rsq.probit &amp;lt;- as.numeric(1-(logLik(probit)/logLik(probit0)))
rsq.probit


#Alternative Approach
## &amp;quot;Proportion of Correct Predictions&amp;quot;
#with cut-off value 50%
conftab1 &amp;lt;- table(true = healthcare1$doc, pred = fitted(logit) &amp;gt; 0.5) #Kreuztabelle
#confusion-Matrix mit logit
conftab2 &amp;lt;- table(true = healthcare1$doc, pred = fitted(probit) &amp;gt; 0.5) #Kreuztabelle
#confusion-Matrix mit probit
mtable(conftab1, conftab2)
toLatex(mtable(logit, probit))


#install.packages(&amp;quot;ROCR&amp;quot;)
library(ROCR)
pred &amp;lt;- prediction(fitted(logit), healthcare1$doc)
plot(performance(pred, &amp;quot;acc&amp;quot;))
plot(performance(pred, &amp;quot;tpr&amp;quot;, &amp;quot;fpr&amp;quot;))
abline(0, 1, lty = 2)


##############
## LR-Test
##############
#Likelihood Ratio test: raw calculations
as.numeric(-2*(logLik(probit0)-logLik(probit))) #result: 1319 (relevant test
#statistic)
as.numeric(-2*(logLik(logit0)-logLik(logit))) #result: 1326
qchisq(0.99, 8) #we have 8 degress of freedom
#-&amp;gt; Hypothesis that the two models are the same can be rejected!


#LR-test with package:
#install.packages(&amp;quot;lmtest&amp;quot;)
library(lmtest)
lrtest(probit0, probit)
lrtest(logit0, logit)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Footnotes&lt;/h4&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;This can be derived from
&lt;span class=&#34;math inline&#34;&gt;\(E[\mathbf{y}\vert \mathbf{X}]=E[\mathbf{X\beta+\epsilon}\vert \mathbf{X}]=E[\mathbf{X\beta\vert X}]+E[\mathbf{\epsilon\vert X}]=\mathbf{X\beta}\)&lt;/span&gt;.&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;Note that normality of the errors is not necessary for the tests
to hold and also not part of the Gauß-Markov-assumptions.&lt;a href=&#34;#fnref2&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn3&#34;&gt;&lt;p&gt;Generalized linear models were formulated by &lt;span class=&#34;citation&#34;&gt;@nelder:72&lt;/span&gt; as a way
of unifying various other statistical models, including linear
regression, logistic regression and Poisson regression.&lt;a href=&#34;#fnref3&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn4&#34;&gt;&lt;p&gt;If the dispersion parameter &lt;span class=&#34;math inline&#34;&gt;\(\phi\)&lt;/span&gt; is fixed then this type of
distributions are called an &lt;em&gt;exponential family&lt;/em&gt;.&lt;a href=&#34;#fnref4&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn5&#34;&gt;&lt;p&gt;Due to &lt;span class=&#34;math inline&#34;&gt;\(g(\mu_i)=\eta_i=\mathbf{x_i&amp;#39;\beta}\)&lt;/span&gt; we have
&lt;span class=&#34;math inline&#34;&gt;\(\mu_i=g^{-1}(\eta_i)=g^{-1}(\mathbf{x_i&amp;#39;\beta})\)&lt;/span&gt; where &lt;span class=&#34;math inline&#34;&gt;\(g^{-1}\)&lt;/span&gt; is
the inverse link function.&lt;a href=&#34;#fnref5&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn6&#34;&gt;&lt;p&gt;Here we denote the conditional expectation &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; as our success probability &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; which is &lt;span class=&#34;math inline&#34;&gt;\(\in[0, 1]\)&lt;/span&gt;.&lt;a href=&#34;#fnref6&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn7&#34;&gt;&lt;p&gt;It is important to note that &lt;span class=&#34;math inline&#34;&gt;\(b(.)\)&lt;/span&gt; is a function of &lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt; in
the first place so that we have to differentiate with respect to
&lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt; and not &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt;.&lt;a href=&#34;#fnref7&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn8&#34;&gt;&lt;p&gt;In the case of the normal distribution mean and variance are
independent.&lt;a href=&#34;#fnref8&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn9&#34;&gt;&lt;p&gt;Details will follow below.&lt;a href=&#34;#fnref9&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn10&#34;&gt;&lt;p&gt;In the setting of GLMs the dispersion parameter &lt;span class=&#34;math inline&#34;&gt;\(\phi\)&lt;/span&gt; can be
treated as a nuisance parameter or is known anyway.&lt;a href=&#34;#fnref10&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn11&#34;&gt;&lt;p&gt;Whereby &lt;span class=&#34;math inline&#34;&gt;\(F(.)\)&lt;/span&gt; can then be either the CDF of the normal or the logistic distribution.&lt;a href=&#34;#fnref11&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn12&#34;&gt;&lt;p&gt;Switching from &amp;quot;likelihood&amp;quot; to &amp;quot;densities&amp;quot; emphasizes the
reversed roles of the data and the parameters (i. e., the arguments)
and is also expressed notationally by switching from the joint
distribution as the joint probability density for observing
&lt;span class=&#34;math inline&#34;&gt;\(y_1, ..., y_n\)&lt;/span&gt; given &lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt; to the &lt;em&gt;likelihood function&lt;/em&gt; of the
unknown parameter &lt;span class=&#34;math inline&#34;&gt;\(theta\)&lt;/span&gt; given a random sample &lt;span class=&#34;math inline&#34;&gt;\(y_1, ..., y_n\)&lt;/span&gt;.&lt;a href=&#34;#fnref12&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn13&#34;&gt;&lt;p&gt;Here write down the setup without regressors; the general considerations are the same for cases where we specifically consider regressors, i.e. for &lt;span class=&#34;math inline&#34;&gt;\(f(\theta; y_1, ..., y_n\vert\mathbf{x})\)&lt;/span&gt;.&lt;a href=&#34;#fnref13&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn14&#34;&gt;&lt;p&gt;A detailed list with the variables and their description can be
found in the accompanying R code in the
Appendix below.&lt;a href=&#34;#fnref14&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn15&#34;&gt;&lt;p&gt;The logit model can therefore be interpreted as a
semi-logarithmic model for the odds.&lt;a href=&#34;#fnref15&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn16&#34;&gt;&lt;p&gt;Evaluating the predicted probabilities using the probit model
instead results in virtually no difference.&lt;a href=&#34;#fnref16&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn17&#34;&gt;&lt;p&gt;The default would be &lt;code&gt;type = &amp;quot;link&amp;quot;&lt;/code&gt; that reports the
corresponding value on the link-scale.&lt;a href=&#34;#fnref17&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn18&#34;&gt;&lt;p&gt;Note that these odds ratios don’t change, i.e., the remain
constant even if we change the other regressors, whereas the
difference on the probability scale is not the same.&lt;a href=&#34;#fnref18&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn19&#34;&gt;&lt;p&gt;Note that the calculations were made only using the logit-model.
Applying the procedure to probit-models would result in virtually
identical results.&lt;a href=&#34;#fnref19&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn20&#34;&gt;&lt;p&gt;The pseudo-&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt; uses the same information as the likelihood
ratio test.&lt;a href=&#34;#fnref20&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn21&#34;&gt;&lt;p&gt;It is also possible to check for which cutoff-value the
proportion of correct predictions is largest (see the R-Code in the Appendix below).&lt;a href=&#34;#fnref21&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
